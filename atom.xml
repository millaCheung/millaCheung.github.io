<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeehomBlog</title>
  
  
  <link href="http://www.milla.club/atom.xml" rel="self"/>
  
  <link href="http://www.milla.club/"/>
  <updated>2021-04-05T09:22:59.129Z</updated>
  <id>http://www.milla.club/</id>
  
  <author>
    <name>milla</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>切换镜像站点</title>
    <link href="http://www.milla.club/2021/04/05/%E5%88%87%E6%8D%A2%E9%95%9C%E5%83%8F%E7%AB%99%E7%82%B9/"/>
    <id>http://www.milla.club/2021/04/05/%E5%88%87%E6%8D%A2%E9%95%9C%E5%83%8F%E7%AB%99%E7%82%B9/</id>
    <published>2021-04-05T09:19:34.000Z</published>
    <updated>2021-04-05T09:22:59.129Z</updated>
    
    <content type="html"><![CDATA[<h1 id="npm-切换镜像站点"><a href="#npm-切换镜像站点" class="headerlink" title="npm 切换镜像站点"></a>npm 切换镜像站点</h1><h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><h3 id="1-更改npm配置文件："><a href="#1-更改npm配置文件：" class="headerlink" title="1. 更改npm配置文件："></a>1. 更改npm配置文件：</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> npm config <span class="built_in">set</span> registry URL</span><br></pre></td></tr></table></figure><p>URL 即为需要设置的镜像站点地址，如淘宝镜像: <a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a></p><h2 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h2><blockquote><p>安装nrm 管理</p></blockquote><h3 id="1-全局安装-nrm"><a href="#1-全局安装-nrm" class="headerlink" title="1. 全局安装 nrm"></a>1. 全局安装 nrm</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> npm install <span class="literal">-g</span> nrm</span><br></pre></td></tr></table></figure><h3 id="2-查看镜像地址列表"><a href="#2-查看镜像地址列表" class="headerlink" title="2. 查看镜像地址列表"></a>2. 查看镜像地址列表</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> nrm <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210326122958109.png" alt="在这里插入图片描述"></p><blockquote><p>如果报错信息为：throw new ERR_INVALID_ARG_TYPE(name, ‘string’, value);<br>处理方法为：<a href="https://blog.csdn.net/zm1640111308/article/details/115237957">链接</a></p></blockquote><h3 id="3-切换镜像地址"><a href="#3-切换镜像地址" class="headerlink" title="3. 切换镜像地址"></a>3. 切换镜像地址</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> nrm use company</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210326123110368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="4-自定义添加镜像地址："><a href="#4-自定义添加镜像地址：" class="headerlink" title="4. 自定义添加镜像地址："></a>4. 自定义添加镜像地址：</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> nrm add &lt;registry&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210326123552586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="5-删除镜像地址"><a href="#5-删除镜像地址" class="headerlink" title="5. 删除镜像地址"></a>5. 删除镜像地址</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> nrm <span class="built_in">del</span> company</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021032612371348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="6-测试镜像地址响应速度"><a href="#6-测试镜像地址响应速度" class="headerlink" title="6. 测试镜像地址响应速度"></a>6. 测试镜像地址响应速度</h3><h4 id="6-1-测试单个源："><a href="#6-1-测试单个源：" class="headerlink" title="6.1. 测试单个源："></a>6.1. 测试单个源：</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> nrm test npm</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210326123840587.png" alt="在这里插入图片描述"></p><h4 id="6-2-测试全部源："><a href="#6-2-测试全部源：" class="headerlink" title="6.2. 测试全部源："></a>6.2. 测试全部源：</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> nrm test</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210326124037798.png" alt="在这里插入图片描述"></p><h3 id="7-访问源主页"><a href="#7-访问源主页" class="headerlink" title="7. 访问源主页"></a>7. 访问源主页</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> nrm home taobao</span><br></pre></td></tr></table></figure><p>此命令会在浏览器中打开淘宝源的主页：<a href="https://npm.taobao.org/">https://npm.taobao.org/</a><br>注：如果要查看自己添加的源的主页，那么在添加源的时候就要把主页带上：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> nrm add company http://npm.company.com/ http://npm.company.com/</span><br></pre></td></tr></table></figure><p>如果添加源的时候没有写 home 信息，那么 nrm home 命令不会有效果。</p><p><a href="https://www.axihe.com/npm/nrm/home.html">参考页面链接</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;npm-切换镜像站点&quot;&gt;&lt;a href=&quot;#npm-切换镜像站点&quot; class=&quot;headerlink&quot; title=&quot;npm 切换镜像站点&quot;&gt;&lt;/a&gt;npm 切换镜像站点&lt;/h1&gt;&lt;h2 id=&quot;方法一：&quot;&gt;&lt;a href=&quot;#方法一：&quot; class=&quot;head</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://www.milla.club/categories/JavaScript/"/>
    
    
    <category term="Node" scheme="http://www.milla.club/tags/Node/"/>
    
    <category term="npm" scheme="http://www.milla.club/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>去除inline-block元素间间距的若干方法</title>
    <link href="http://www.milla.club/2020/04/24/%E5%8E%BB%E9%99%A4inline-block%E5%85%83%E7%B4%A0%E9%97%B4%E9%97%B4%E8%B7%9D%E7%9A%84%E8%8B%A5%E5%B9%B2%E6%96%B9%E6%B3%95/"/>
    <id>http://www.milla.club/2020/04/24/%E5%8E%BB%E9%99%A4inline-block%E5%85%83%E7%B4%A0%E9%97%B4%E9%97%B4%E8%B7%9D%E7%9A%84%E8%8B%A5%E5%B9%B2%E6%96%B9%E6%B3%95/</id>
    <published>2020-04-24T09:11:54.000Z</published>
    <updated>2020-04-24T09:11:54.564Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>CSS实现单行和多行文本溢出，省略号显示</title>
    <link href="http://www.milla.club/2020/04/23/CSS%E5%AE%9E%E7%8E%B0%E5%8D%95%E8%A1%8C%E5%92%8C%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%EF%BC%8C%E7%9C%81%E7%95%A5%E5%8F%B7%E6%98%BE%E7%A4%BA/"/>
    <id>http://www.milla.club/2020/04/23/CSS%E5%AE%9E%E7%8E%B0%E5%8D%95%E8%A1%8C%E5%92%8C%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%EF%BC%8C%E7%9C%81%E7%95%A5%E5%8F%B7%E6%98%BE%E7%A4%BA/</id>
    <published>2020-04-23T05:03:11.000Z</published>
    <updated>2020-04-23T05:10:03.516Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-单行文本溢出，省略号显示"><a href="#1-单行文本溢出，省略号显示" class="headerlink" title="1. 单行文本溢出，省略号显示"></a>1. 单行文本溢出，省略号显示</h3><p><strong>实现代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line"><span class="attribute">white-space</span>: nowrap;</span><br></pre></td></tr></table></figure><span id="more"></span><p><strong>示例代码：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">      <span class="attribute">text-overflow</span>:ellipsis;</span></span><br><span class="line"><span class="css">      <span class="attribute">white-space</span>: nowrap;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  单行文本溢出，省略号显示</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图：</strong></p><p><img src="https://img-blog.csdnimg.cn/20200410171817714.png" alt="单行文本溢出"></p><h3 id="2-多行文本溢出，省略号显示"><a href="#2-多行文本溢出，省略号显示" class="headerlink" title="2. 多行文本溢出，省略号显示"></a>2. 多行文本溢出，省略号显示</h3><ul><li>方式1：</li></ul><p><strong>实现代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">display</span>: -webkit-box;</span><br><span class="line">-webkit-box-orient: vertical;</span><br><span class="line">-webkit-line-clamp: <span class="number">2</span>;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br></pre></td></tr></table></figure><p><strong>示例代码：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">44px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">display</span>: -webkit-box;</span></span><br><span class="line"><span class="css">      -webkit-box-orient: vertical;</span></span><br><span class="line"><span class="css">      -webkit-line-clamp: <span class="number">2</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    多行文本溢出，省略号显示；多行文本溢出，省略号显示</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图：</strong></p><p><img src="https://img-blog.csdnimg.cn/20200410172408997.png" alt="多行文本溢出"></p><p><strong>适用范围：</strong></p><p>因其使用了 WebKit 的 CSS 扩展属性，该方法适用于 WebKit 浏览器及移动端</p><p><strong>注释：</strong></p><ol><li><code>-webkit-line-clamp</code> 用来限制在一个块元素显示的文本的行数。 为了实现该效果，它需要组合其他的 WebKit 属性。常见结合属性：</li><li><code>display: -webkit-box</code> 必须结合的属性，将对象作为弹性伸缩盒子模型显示 。</li><li><code>-webkit-box-orient</code> 必须结合的属性，设置或检索伸缩盒对象的子元素的排列方式 。</li></ol><ul><li>方式2：</li></ul><p><strong>实现代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;...&quot;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(left, transparent, <span class="number">#fff</span> <span class="number">65%</span>);</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-o-linear-gradient</span>(right, transparent, <span class="number">#fff</span> <span class="number">65%</span>);</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-moz-linear-gradient</span>(right, transparent, <span class="number">#fff</span> <span class="number">65%</span>);</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to right, transparent, <span class="number">#fff</span> <span class="number">65%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例代码：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">line-height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">max-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-tag">div</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">content</span>: <span class="string">&quot;...&quot;</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">      <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">padding-left</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">padding-right</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(left, transparent, <span class="number">#fff</span> <span class="number">65%</span>);</span></span><br><span class="line"><span class="css">      <span class="attribute">background</span>: <span class="built_in">-o-linear-gradient</span>(right, transparent, <span class="number">#fff</span> <span class="number">65%</span>);</span></span><br><span class="line"><span class="css">      <span class="attribute">background</span>: <span class="built_in">-moz-linear-gradient</span>(right, transparent, <span class="number">#fff</span> <span class="number">65%</span>);</span></span><br><span class="line"><span class="css">      <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to right, transparent, <span class="number">#fff</span> <span class="number">65%</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  多行文本溢出，省略号显示；多行文本溢出，省略号显示</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图：</strong></p><p><img src="https://img-blog.csdnimg.cn/20200410174055864.png" alt="多行文本溢出"></p><p><strong>适用范围：</strong></p><p>适用范围广，可结合 js 进行优化</p><p><strong>注释：</strong></p><ol><li>将 height 设置为 <code>line-height</code> 的整数倍，防止超出的文字露出。</li><li>给 <code>div::after</code> 添加渐变背景可避免文字只显示一半。</li><li>由于 IE6-7 不显示 <code>content</code> 内容，所以要添加标签兼容 ie6-7（如：<code>&lt;span&gt;…&lt;span/&gt;</code>）；兼容 IE8 需要将 <code>::after</code> 替换成 <code>:after</code> 。</li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1-单行文本溢出，省略号显示&quot;&gt;&lt;a href=&quot;#1-单行文本溢出，省略号显示&quot; class=&quot;headerlink&quot; title=&quot;1. 单行文本溢出，省略号显示&quot;&gt;&lt;/a&gt;1. 单行文本溢出，省略号显示&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;实现代码：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;: hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;text-overflow&lt;/span&gt;:ellipsis;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;white-space&lt;/span&gt;: nowrap;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="CSS" scheme="http://www.milla.club/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>清除浮动若干方法</title>
    <link href="http://www.milla.club/2020/04/23/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E8%8B%A5%E5%B9%B2%E6%96%B9%E6%B3%95/"/>
    <id>http://www.milla.club/2020/04/23/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E8%8B%A5%E5%B9%B2%E6%96%B9%E6%B3%95/</id>
    <published>2020-04-23T01:55:32.000Z</published>
    <updated>2020-04-23T02:35:38.718Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-为什么清除浮动"><a href="#1-为什么清除浮动" class="headerlink" title="1. 为什么清除浮动"></a>1. 为什么清除浮动</h3><p>由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占位置，最后父盒子高度为 0 时，就会影响下面的标准流盒子</p><ul><li>由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响</li></ul><span id="more"></span><h3 id="2-清除浮动本质"><a href="#2-清除浮动本质" class="headerlink" title="2. 清除浮动本质"></a>2. 清除浮动本质</h3><ul><li><p>清除浮动的本质时清除浮动元素造成的影响</p></li><li><p>如果父盒子本身有高度，则不需要清除浮动</p></li><li><p>清除浮动之后，父级就会根据浮动的子盒子自动检测高度。父级有了高度，就不会影响下面的标准流了</p></li></ul><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123;</span><br><span class="line">  <span class="attribute">clear</span>: 属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>left</td><td>不允许左侧有浮动元素（清除左侧浮动的影响）</td></tr><tr><td>right</td><td>不允许右侧有浮动元素（清除右侧浮动的影响）</td></tr><tr><td>both</td><td>同时清除左右两侧浮动的影响</td></tr></tbody></table><p>实际工作中，只用 <code>clear: both;</code></p><p><strong>清除浮动的策略：闭合浮动</strong>（只让浮动在父盒子内部影响，不影响父盒子外面的其它盒子）</p><h3 id="3-清除浮动方法"><a href="#3-清除浮动方法" class="headerlink" title="3. 清除浮动方法"></a>3. 清除浮动方法</h3><ol><li>额外标签法 也称为隔墙法，是 W3C 推荐的做法</li><li>父级添加 <code>overflow</code> 属性</li><li>父级添加 <code>after</code> 伪元素</li><li>父亲添加双伪元素</li></ol><h3 id="4-清除浮动——额外标签法"><a href="#4-清除浮动——额外标签法" class="headerlink" title="4. 清除浮动——额外标签法"></a>4. 清除浮动——额外标签法</h3><p>额外标签法也称为隔墙法，是 W3C 推荐的做法</p><p>额外标签法会在浮动元素末尾添加一个空的标签。例如 <code>&lt;div style=&quot;clear: both&quot;&gt;&lt;/div&gt;</code>，或者其它标签（如<code>&lt;br /&gt;</code>等）</p><ul><li><p>优点：通俗易懂，书写方便</p></li><li><p>缺点：添加许多无意义的标签，结构化较差</p></li></ul><p>注意：要求新的空标签必须是块级元素</p><h3 id="5-清除浮动——父级添加-overflow"><a href="#5-清除浮动——父级添加-overflow" class="headerlink" title="5. 清除浮动——父级添加 overflow"></a>5. 清除浮动——父级添加 overflow</h3><p>可以给父级添加 <code>overflow</code> 属性，将其属性值设置为 <code>hidden</code>、<code>auto</code> 或 <code>scroll</code></p><ul><li><p>优点：代码简洁</p></li><li><p>缺点：无法显示溢出的部分</p></li></ul><p>设置 overflow 为什么能够清除浮动？</p><p>引入一个概念：<a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context">BFC</a>（Block Formatting Context），块级格式化上下文。BFC 中包括一项 <code>overflow</code> 值不为 <code>visible</code> 的块元素会创建块格式化上下文，设置 <code>overflow</code> 为 <code>hidden</code> 满足了创建一个 BFC 的条件，其实就是创建 BFC，利用 BFC 固有特性清除浮动，具体详情见 <a href="https://developer.mozilla.org/zh-CN/">MDN</a></p><h3 id="6-清除浮动——-after-伪元素法"><a href="#6-清除浮动——-after-伪元素法" class="headerlink" title="6. 清除浮动——:after 伪元素法"></a>6. 清除浮动——<code>:after</code> 伪元素法</h3><p><code>:after</code> 方式是额外标签法的升级版。也是给父元素添加</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">  <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;  <span class="comment">/* IE6、7专有 */</span></span><br><span class="line">  *zoom: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>优点：没有增加标签，结构更简单</p></li><li><p>缺点：不能照顾低版本浏览器</p></li><li><p>代表网站：百度、淘宝、网易等</p></li></ul><h3 id="7-清除浮动——双伪元素法"><a href="#7-清除浮动——双伪元素法" class="headerlink" title="7. 清除浮动——双伪元素法"></a>7. 清除浮动——双伪元素法</h3><p>也是给父元素添加</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span>, <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">  *zoom: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>优点：代码更简洁</p></li><li><p>缺点：不能照顾低版本浏览器</p></li><li><p>代表网站：小米、腾讯等</p></li></ul><h3 id="8-总结"><a href="#8-总结" class="headerlink" title="8. 总结"></a>8. 总结</h3><p>为什么要清除浮动？</p><ol><li>父级没高度</li><li>子盒子浮动</li><li>影响下面布局</li></ol><table><thead><tr><th>清除浮动的方式</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>额外标签法（隔墙法）</td><td>通俗易懂，书写方便</td><td>添加许多无意义的标签，结构化较差</td></tr><tr><td>父级 overflow: hidden;</td><td>书写简单</td><td>无法显示溢出的部分</td></tr><tr><td>父级 :after 伪元素</td><td>符合结构语义化</td><td>由于 IE6/7 不支持 <code>:after</code>，兼容性较差</td></tr><tr><td>父级双伪元素</td><td>符合结构语义化</td><td>由于 IE6/7不支持 <code>:after :before</code>，兼容性较差</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1-为什么清除浮动&quot;&gt;&lt;a href=&quot;#1-为什么清除浮动&quot; class=&quot;headerlink&quot; title=&quot;1. 为什么清除浮动&quot;&gt;&lt;/a&gt;1. 为什么清除浮动&lt;/h3&gt;&lt;p&gt;由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占位置，最后父盒子高度为 0 时，就会影响下面的标准流盒子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="CSS" scheme="http://www.milla.club/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Sass和Less的区别</title>
    <link href="http://www.milla.club/2020/04/22/Sass%E5%92%8CLess%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://www.milla.club/2020/04/22/Sass%E5%92%8CLess%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2020-04-22T08:25:56.000Z</published>
    <updated>2020-04-22T08:55:50.204Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Sass-amp-Less是什么？"><a href="#1-Sass-amp-Less是什么？" class="headerlink" title="1. Sass&amp;Less是什么？"></a>1. Sass&amp;Less是什么？</h2><p><a href="https://less.bootcss.com/">Less</a>（Leaner Style Sheets 的缩写） 是一门向后兼容的 CSS 扩展语言</p><p><a href="https://www.sass.hk/">Sass</a>，作为“世界上最成熟、最稳定、最强大的专业级CSS扩展语言”</p><span id="more"></span><h2 id="2-两者异同"><a href="#2-两者异同" class="headerlink" title="2. 两者异同"></a>2. 两者异同</h2><p><strong>相同之处:</strong></p><p>1、混入(Mixins)——class 中的 class；</p><p>2、参数混入——可以传递参数的 class，就像函数一样；</p><p>3、嵌套规则——class 中嵌套 class，从而减少重复的代码；</p><p>4、运算——CSS 中用上数学；</p><p>5、颜色功能——可以编辑颜色；</p><p>6、名字空间(namespace)——分组样式，从而可以被调用；</p><p>7、作用域——局部修改样式；</p><p>8、JavaScript 赋值——在 CSS 中使用 JavaScript 表达式赋值。</p><p><strong>不同之处:</strong></p><table><thead><tr><th>类别</th><th>Sass</th><th>Less</th></tr></thead><tbody><tr><td>安装</td><td>Sass 的安装需要安装 Ruby 环境</td><td>Less 基于 JavaScript 需要引入 Less.js 来处理代码输出 css 到浏览器，也可以在开发环节使用 Less，然后编译成 css 文件，直接放在项目中</td></tr><tr><td>使用</td><td>复杂</td><td>简单</td></tr><tr><td>功能</td><td>复杂</td><td>简单</td></tr><tr><td>处理机制</td><td>通过服务端处理</td><td>通过客户端处理，解析相比 Sass 稍慢</td></tr><tr><td>变量</td><td>以 $ 开始</td><td>以 @ 开始</td></tr><tr><td>文件后缀</td><td>.sass 或 .scss</td><td>.less</td></tr></tbody></table><p>1、Less 在 JS 上运行，Sass 在 Ruby 上使用。</p><p>Sass 基于 Ruby，需要安装 Ruby。Less 和 Sass 在 Ruby 中构建相似，但它已被移植到 JavaScript 中。为了使用 LESS，我们可以将适用的 JavaScript 文件上载到服务器或通过脱机编译器编译 CSS 表。</p><p>2、编写变量的方式不同。</p><p>Sass 使用 $，而 Less 使用 @。</p><p>3、在 Less 中，仅允许循环数值。</p><p>在 Sass 中，我们可以遍历任何类型的数据。但在 Less 中，我们只能使用递归函数循环数值。</p><p>4、Sass 有 Compass，Less 有 Preboot</p><p>Sass 和 Less 有可用于集成 mixins 的扩展（在整个站点中存储和共享 CSS 声明的能力）。</p><p>Sass 有适用于 mixins 的 Compass，其中包括所有可用的选项以及未来支持的更新。</p><p>Less 有 Preboot.less，Less Mixins，Less Elements，gs 和 Frameless。Less 的软件支持比 Sass 更加分散，导致许多不同的扩展选项可能不会以相同的方式运行。对于项目，我们可能需要所有列出的扩展以获得与 Compass 类似的性能。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-Sass-amp-Less是什么？&quot;&gt;&lt;a href=&quot;#1-Sass-amp-Less是什么？&quot; class=&quot;headerlink&quot; title=&quot;1. Sass&amp;amp;Less是什么？&quot;&gt;&lt;/a&gt;1. Sass&amp;amp;Less是什么？&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://less.bootcss.com/&quot;&gt;Less&lt;/a&gt;（Leaner Style Sheets 的缩写） 是一门向后兼容的 CSS 扩展语言&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.sass.hk/&quot;&gt;Sass&lt;/a&gt;，作为“世界上最成熟、最稳定、最强大的专业级CSS扩展语言”&lt;/p&gt;</summary>
    
    
    
    
    <category term="CSS" scheme="http://www.milla.club/tags/CSS/"/>
    
    <category term="Less" scheme="http://www.milla.club/tags/Less/"/>
    
    <category term="Sass" scheme="http://www.milla.club/tags/Sass/"/>
    
  </entry>
  
  <entry>
    <title>JS的短路运算符</title>
    <link href="http://www.milla.club/2019/12/13/JS%E7%9A%84%E7%9F%AD%E8%B7%AF%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>http://www.milla.club/2019/12/13/JS%E7%9A%84%E7%9F%AD%E8%B7%AF%E8%BF%90%E7%AE%97%E7%AC%A6/</id>
    <published>2019-12-13T08:00:52.000Z</published>
    <updated>2020-04-21T06:13:58.647Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JS的短路运算符"><a href="#JS的短路运算符" class="headerlink" title="JS的短路运算符"></a>JS的短路运算符</h2><p>在JS函数中我们经常会使用到短路运算符，主要是逻辑与（&amp;&amp;） 和 逻辑或（||）。</p><span id="more"></span><h4 id="1-逻辑与-amp-amp-的运算方式"><a href="#1-逻辑与-amp-amp-的运算方式" class="headerlink" title="1. 逻辑与 &amp;&amp; 的运算方式"></a>1. 逻辑与 &amp;&amp; 的运算方式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">3</span> &amp;&amp; <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">//返回的结果为 5</span></span><br></pre></td></tr></table></figure><p>如果逻辑与运算符左边的值布尔转换后为true，那么返回右边的值（不管右边的值是真还是假）。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="literal">false</span> &amp;&amp; <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">//返回的结果为 false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="literal">null</span> &amp;&amp; <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">//返回的结果为 null</span></span><br></pre></td></tr></table></figure><p>如果逻辑与运算符左边的值布尔转换后为false，那么返回左边的值，但是当逻辑与的左边为 null/NaN/undefined ，结果就会得到null/NaN/undefined。 </p><h4 id="2-逻辑或-的运算方式"><a href="#2-逻辑或-的运算方式" class="headerlink" title="2. 逻辑或 || 的运算方式"></a>2. 逻辑或 || 的运算方式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="literal">false</span> || <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">//返回的结果为 5</span></span><br></pre></td></tr></table></figure><p>如果逻辑或运算符左边的值布尔转换后为false，那么返回右边的值（不管右边的值是真还是假）。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="literal">true</span> || <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">//返回的结果为 true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="literal">null</span> || <span class="literal">null</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">//返回的结果为 null</span></span><br></pre></td></tr></table></figure><p>如果逻辑或运算符左边的值布尔转换后为true，那么返回左边的值，如果两个操作数都是是null/NaN/undefined，返回null/NaN/undefined。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;JS的短路运算符&quot;&gt;&lt;a href=&quot;#JS的短路运算符&quot; class=&quot;headerlink&quot; title=&quot;JS的短路运算符&quot;&gt;&lt;/a&gt;JS的短路运算符&lt;/h2&gt;&lt;p&gt;在JS函数中我们经常会使用到短路运算符，主要是逻辑与（&amp;amp;&amp;amp;） 和 逻辑或（||）。&lt;/p&gt;</summary>
    
    
    
    
    <category term="JavaScript" scheme="http://www.milla.club/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>对Sort()函数的理解（函数引用带括号与不带括号的区别）</title>
    <link href="http://www.milla.club/2019/10/22/%E5%AF%B9Sort-%E5%87%BD%E6%95%B0%E7%9A%84%E7%90%86%E8%A7%A3%EF%BC%88%E5%87%BD%E6%95%B0%E5%BC%95%E7%94%A8%E5%B8%A6%E6%8B%AC%E5%8F%B7%E4%B8%8E%E4%B8%8D%E5%B8%A6%E6%8B%AC%E5%8F%B7%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%89/"/>
    <id>http://www.milla.club/2019/10/22/%E5%AF%B9Sort-%E5%87%BD%E6%95%B0%E7%9A%84%E7%90%86%E8%A7%A3%EF%BC%88%E5%87%BD%E6%95%B0%E5%BC%95%E7%94%A8%E5%B8%A6%E6%8B%AC%E5%8F%B7%E4%B8%8E%E4%B8%8D%E5%B8%A6%E6%8B%AC%E5%8F%B7%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%89/</id>
    <published>2019-10-22T14:58:13.000Z</published>
    <updated>2020-04-21T06:20:57.639Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1.sort() 函数用于对原列表进行排序，如果指定参数，则使用比较函数指定的比较函数</strong></p><p><strong>2.语法 list.sort(key=None, reverse=False)</strong></p><p><strong>3.参数 key – 主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。 &lt;理解：表述元素的权重，如果函数中指定了key，那么就按照key指定的函数list中的元素进行权值从小到大排序&gt; reverse – 排序规则，reverse = True 降序， reverse = False 升序（默认）</strong></p><p><strong>4.返回值 该方法没有返回值，但是会对列表的对象进行排序</strong></p><span id="more"></span><p><strong>5.实例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">aList = [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Facebook&#x27;</span>] </span><br><span class="line">aList.sort()</span><br><span class="line"><span class="built_in">print</span> ( <span class="string">&quot;List : &quot;</span>, aList)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果：List :  [&#x27;Facebook&#x27;, &#x27;Google&#x27;, &#x27;Runoob&#x27;, &#x27;Taobao&#x27;]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">length</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(x)</span><br><span class="line"></span><br><span class="line">aList = [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Facebook&#x27;</span>]</span><br><span class="line">aList.sort(key=length)  <span class="comment"># 以下讲解调用函数带括号与不带括号区别</span></span><br><span class="line"><span class="comment"># 该函数中，使用了key参数，可知，排序list中的元素使用length函数进行排序，length函数中返回值为元素的长度，故可知使用元素长度对元素进行排序，</span></span><br><span class="line"><span class="comment"># 故元素Facebook长度最长，排最后，由于其他参数长度相同，故采用默认排序方式进行排序。</span></span><br><span class="line"><span class="built_in">print</span> ( <span class="string">&quot;List : &quot;</span>, aList)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果：List :  [&#x27;Google&#x27;, &#x27;Runoob&#x27;, &#x27;Taobao&#x27;, &#x27;Facebook&#x27;]</span></span><br></pre></td></tr></table></figure><p>上述代码可改写为lambda函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">aList = [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Facebook&#x27;</span>]</span><br><span class="line">aList.sort(key=<span class="keyword">lambda</span> x:<span class="built_in">len</span>(x))  </span><br><span class="line"><span class="built_in">print</span> ( <span class="string">&quot;List : &quot;</span>, aList)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果：List :  [&#x27;Google&#x27;, &#x27;Runoob&#x27;, &#x27;Taobao&#x27;, &#x27;Facebook&#x27;]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vowels = [<span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;i&#x27;</span>]</span><br><span class="line">vowels.sort(reverse=<span class="literal">True</span>)  <span class="comment"># 降序排序</span></span><br><span class="line"><span class="built_in">print</span> ( <span class="string">&#x27;result：&#x27;</span>, vowels )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果：result： [&#x27;u&#x27;, &#x27;o&#x27;, &#x27;i&#x27;, &#x27;e&#x27;, &#x27;a&#x27;]</span></span><br></pre></td></tr></table></figure><p><strong>6.调用函数带括号及不带括号区别</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 带括号</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">a = fun1()</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果：1</span></span><br><span class="line"><span class="comment"># 输出结果为1，调用函数时带括号，表示该函数的执行结果</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不带括号</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun2</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">b = fun2</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果：&lt;function fun2 at 0x00000287B5CA4D90&gt;</span></span><br><span class="line"><span class="comment"># 第二次的输出结果为fun2的内存，表示不带括号调用为调用该函数</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;1.sort() 函数用于对原列表进行排序，如果指定参数，则使用比较函数指定的比较函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.语法 list.sort(key=None, reverse=False)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.参数 key – 主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。 &amp;lt;理解：表述元素的权重，如果函数中指定了key，那么就按照key指定的函数list中的元素进行权值从小到大排序&amp;gt; reverse – 排序规则，reverse = True 降序， reverse = False 升序（默认）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.返回值 该方法没有返回值，但是会对列表的对象进行排序&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://www.milla.club/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>JS对象操作属性的两种方式</title>
    <link href="http://www.milla.club/2019/10/20/JS%E5%AF%B9%E8%B1%A1%E6%93%8D%E4%BD%9C%E5%B1%9E%E6%80%A7%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>http://www.milla.club/2019/10/20/JS%E5%AF%B9%E8%B1%A1%E6%93%8D%E4%BD%9C%E5%B1%9E%E6%80%A7%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/</id>
    <published>2019-10-20T10:11:14.000Z</published>
    <updated>2020-04-21T06:15:20.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在-JS-对象中，调用属性一般有两种方法——点和中括号的方法。"><a href="#在-JS-对象中，调用属性一般有两种方法——点和中括号的方法。" class="headerlink" title="在 JS 对象中，调用属性一般有两种方法——点和中括号的方法。"></a>在 JS 对象中，调用属性一般有两种方法——点和中括号的方法。</h2><p><strong>1.使用点方法</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    name: <span class="string">&quot;cedric&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj.name);  <span class="comment">// cedric</span></span><br></pre></td></tr></table></figure><span id="more"></span><p><strong>2.使用 [ ] 方法</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    name: <span class="string">&quot;cedric&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj[<span class="string">&quot;name&quot;</span>]);  <span class="comment">// cedric</span></span><br></pre></td></tr></table></figure><ul><li>点方法是在对象名后面跟上属性名，而中括号方法里的索引存放的与属性名字相同的字符串。</li></ul><h4 id="二者区别"><a href="#二者区别" class="headerlink" title="二者区别"></a>二者区别</h4><ol><li>点方法后面跟的必须是一个指定的属性名称，而中括号方法里面可以是变量。例如</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    name: <span class="string">&quot;cedric&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> haha = <span class="string">&quot;name&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj.haha);  <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(obj[haha]);  <span class="comment">// cedric</span></span><br></pre></td></tr></table></figure><ol start="2"><li>中括号方法里面的属性名可以是数字，而点方法后面的属性名不可以是数字</li><li>当动态为对象添加属性时，必须使用 中括号 []， 不可以用点方法</li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;在-JS-对象中，调用属性一般有两种方法——点和中括号的方法。&quot;&gt;&lt;a href=&quot;#在-JS-对象中，调用属性一般有两种方法——点和中括号的方法。&quot; class=&quot;headerlink&quot; title=&quot;在 JS 对象中，调用属性一般有两种方法——点和中括号的方法。&quot;&gt;&lt;/a&gt;在 JS 对象中，调用属性一般有两种方法——点和中括号的方法。&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.使用点方法&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&amp;quot;cedric&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(obj.name);  &lt;span class=&quot;comment&quot;&gt;// cedric&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="JavaScript" scheme="http://www.milla.club/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS</title>
    <link href="http://www.milla.club/2019/06/15/CSS/"/>
    <id>http://www.milla.club/2019/06/15/CSS/</id>
    <published>2019-06-15T11:35:43.000Z</published>
    <updated>2020-04-21T06:13:06.093Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-CSS-简介"><a href="#1-CSS-简介" class="headerlink" title="1. CSS 简介"></a>1. CSS 简介</h2><h3 id="1-1-HTML的局限性"><a href="#1-1-HTML的局限性" class="headerlink" title="1.1. HTML的局限性"></a>1.1. HTML的局限性</h3><p>HTML 只关注内容的语义。</p><h3 id="1-2-CSS-网页的美容师"><a href="#1-2-CSS-网页的美容师" class="headerlink" title="1.2. CSS-网页的美容师"></a>1.2. CSS-网页的美容师</h3><p>CSS 是层叠样式表（Cascading Style Sheets）的简称</p><p>也称为 <strong>CSS 样式表</strong> 或 <strong>级联样式表</strong></p><span id="more"></span><p>CSS 也是一种 <strong>标记语言</strong></p><p>CSS 主要用于设置 HTML 页面中的<strong>文本内容</strong>（字体、大小、对齐方式等）、<strong>图片的外形</strong>（宽高、边框样式、边距等）以及 <strong>版面的布局和外观显示样式</strong></p><p>CSS 让网页更加丰富多彩，布局更加灵活自如。简单理解：CSS 可以美化 HTML，让 HTML 更漂亮，让页面布局更简单。</p><p><strong>总结：</strong></p><ol><li>HTML 主要做结构，显示元素内容</li><li>CSS 美化 HTML，布局网页</li><li>CSS 最大价值：<strong>由 HTML 专注去做结构呈现，样式交给 CSS，即结构（HTML）与样式（CSS）相分离</strong></li></ol><h3 id="1-3-CSS-语法规范"><a href="#1-3-CSS-语法规范" class="headerlink" title="1.3. CSS 语法规范"></a>1.3. CSS 语法规范</h3><p>使用 HTML 时，需要遵从一定的规范，CSS 也是如此。</p><p>CSS 规则由两个主要的部分组成：选择器以及一条或多条声明。</p><p><img src="https://img-blog.csdnimg.cn/20200420103733935.png#pic_center" alt="在这里插入图片描述"></p><ul><li>选择器用于指定 CSS 样式的 HTML 标签，花括号内是对该对象设x置的具体样式</li><li>属性和属性值之间以 ”键值对“ 形式出现</li><li>属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等</li><li>属性和属性值之间用英文 “:” 分开</li><li>多个 “键值对” 之间用英文 “;” 进行区分</li></ul><h3 id="1-4-CSS-代码风格"><a href="#1-4-CSS-代码风格" class="headerlink" title="1.4. CSS 代码风格"></a>1.4. CSS 代码风格</h3><h4 id="1-4-1-样式格式书写"><a href="#1-4-1-样式格式书写" class="headerlink" title="1.4.1. 样式格式书写"></a>1.4.1. 样式格式书写</h4><ol><li>紧凑格式</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123; <span class="attribute">color</span>: red; <span class="attribute">font-size</span>: <span class="number">12px</span>; &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>展开格式</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: red; </span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">12px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>推荐第二种格式，因为更直观</strong></p><h4 id="1-4-2-样式大小写"><a href="#1-4-2-样式大小写" class="headerlink" title="1.4.2. 样式大小写"></a>1.4.2. 样式大小写</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: red; </span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">12px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">H3</span> &#123; </span><br><span class="line"><span class="attribute">COLOR</span>: RED; </span><br><span class="line"><span class="attribute">FONT-SIZE</span>: <span class="number">12PX</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>推荐全部使用小写字母，特殊情况除外。</strong></p><h4 id="1-4-3-空格规范"><a href="#1-4-3-空格规范" class="headerlink" title="1.4.3. 空格规范"></a>1.4.3. 空格规范</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123; </span><br><span class="line"><span class="attribute">color</span>: red; </span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">12px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>属性值前面，冒号后面，保留一个空格</li><li>选择器（标签）和大括号中间保留空格</li></ol><h2 id="2-CSS-基础选择器"><a href="#2-CSS-基础选择器" class="headerlink" title="2. CSS 基础选择器"></a>2. CSS 基础选择器</h2><h3 id="2-1-CSS-选择器的作用"><a href="#2-1-CSS-选择器的作用" class="headerlink" title="2.1. CSS 选择器的作用"></a>2.1. CSS 选择器的作用</h3><p>选择器（选择符）就是根据不同需求把不同的标签选出来，这就是选择器的作用，简单的说，就是选择标签。</p><h3 id="2-2-选择器分类"><a href="#2-2-选择器分类" class="headerlink" title="2.2. 选择器分类"></a>2.2. 选择器分类</h3><p>选择器分为 <strong>基础选择器</strong> 和 <strong>复合选择器</strong> 两个大类。</p><ul><li>基础选择器由 <strong>单个选择器组成</strong></li><li>基础选择器又包括：<strong>标签选择器、类选择器、id选择器</strong> 和 <strong>通配符选择器</strong></li></ul><h3 id="2-3-标签选择器"><a href="#2-3-标签选择器" class="headerlink" title="2.3. 标签选择器"></a>2.3. 标签选择器</h3><p>标签选择器（元素选择器）是指用 HTML 标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的 CSS 样式。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">标签名 &#123;</span><br><span class="line">属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">属性<span class="number">2</span>: 属性值<span class="number">2</span>;</span><br><span class="line">属性<span class="number">3</span>: 属性值<span class="number">3</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>作用：</strong></p><p>标签选择器可以把某一类标签全部选择出来，比如所有的 &lt;div&gt; 标签和所有的 &lt;span&gt; 标签</p><p><strong>优点：</strong></p><p>能快速的为页面中同类型的标签统一设置样式</p><p><strong>缺点：</strong></p><p>不能设置差异化样式，只能选择全部的当前标签。</p><h3 id="2-4-类选择器"><a href="#2-4-类选择器" class="headerlink" title="2.4. 类选择器"></a>2.4. 类选择器</h3><p>如果想要差异化的选择不同的标签，单独选一个或者某几个标签，可以使用类选择器</p><p>类选择器在 HTML 中以 class 属性表示，在 CSS 中，类选择器以一个点 “.” 号显示。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.类名 &#123;</span><br><span class="line">    属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如，将所有拥有 red 类的 HTML 元素设置为红色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构需要用 class 属性来调用 class 类的样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>变红色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ol><li>类选择器使用 “.” （英文点号）进行表示，后面紧跟类名（自定义）</li><li>可以理解为给标签起了名字</li><li>长名称或词组可以使用中横线来为选择器命名</li><li>不要使用纯数字、中文等命名，尽量使用英文字母来表示</li><li>命名要有意义，尽量使别人一眼就知道这个类名的目的</li><li>命名规范：见附件（Web前端开发规范手册.pdf）</li></ol><h3 id="2-5-类选择器-多类名"><a href="#2-5-类选择器-多类名" class="headerlink" title="2.5. 类选择器-多类名"></a>2.5. 类选择器-多类名</h3><p>给一个标签指定多个类名，从而达到更多的选择目的。这些类名都可以选出这个标签。简单理解就是一个标签有多个名字。</p><h4 id="2-5-1-多类名使用方式"><a href="#2-5-1-多类名使用方式" class="headerlink" title="2.5.1. 多类名使用方式"></a>2.5.1. 多类名使用方式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red font20&quot;</span>&gt;</span>亚瑟<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>在标签 class 属性中写多个类名</li><li>多个类名中间必须用空格分开</li><li>这个标签就可以分别具有这些类名的样式</li></ol><h4 id="2-5-2-使用场景"><a href="#2-5-2-使用场景" class="headerlink" title="2.5.2. 使用场景"></a>2.5.2. 使用场景</h4><ol><li>可以把一些标签元素相同的样式（共同的部分）放到一个类里面</li><li>这些标签都可以调用这个公共的类，然后再调用自己独有的类</li><li>节省 CSS 代码，统一修改也方便</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>各个类名中间用空格隔开</li><li>简单理解：就是给某个标签添加了多个类</li><li>这个标签就可以分别具有这些类名的样式</li><li>节省 CSS 代码，统一修改也方便</li><li>多类名选择器在后期布局比较复杂的情况下，使用较多</li></ul><h3 id="2-6-id-选择器"><a href="#2-6-id-选择器" class="headerlink" title="2.6. id 选择器"></a>2.6. id 选择器</h3><p>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式</p><p>HTML 元素以 id 属性来设置 id 选择器，CSS中 id 选择器以 “#” 来定义</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#id</span>名 &#123;</span><br><span class="line">属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如，将拥有 id 为 red 的 HTML 元素设置为红色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#red</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>id 选择器和类选择器的区别</strong></p><ol><li>类选择器（class）好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用</li><li>id 选择器好比人的身份证，全中国唯一，不重复</li><li>id 选择器和类选择器最大的区别在于使用次数</li><li>类选择器在修改样式中用的最多，id 选择器一般用于页面上唯一性的元素，经常和 JS 搭配使用</li></ol><h3 id="2-7-通配符选择器"><a href="#2-7-通配符选择器" class="headerlink" title="2.7. 通配符选择器"></a>2.7. 通配符选择器</h3><p>在 CSS 中，通配符选择器使用 “*” 定义，它表示选取页面中的所有元素（标签）。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通配符选择器不需要调用，自动给所有元素添加样式</li><li>特殊情况下使用，清除所有元素标签的内外边距</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-8-基础选择器总结"><a href="#2-8-基础选择器总结" class="headerlink" title="2.8. 基础选择器总结"></a>2.8. 基础选择器总结</h3><table><thead><tr><th>基础选择器</th><th>作用</th><th>特点</th><th>使用情况</th><th>用法</th></tr></thead><tbody><tr><td>标签选择器</td><td>可以选出所有相同的标签，比如 p</td><td>不能差异化选择</td><td>较多</td><td><code>p &#123; color: red; &#125;</code></td></tr><tr><td>类选择器</td><td>可以选出1个或者多个标签</td><td>可以根据需求选择</td><td>非常多</td><td><code>.nav &#123; color: red; &#125;</code></td></tr><tr><td>id 选择器</td><td>一次只能选择1个标签</td><td>ID 属性只能在每个 HTML 文档中出现一次</td><td>一般和 JS 搭配</td><td><code>#nav &#123; color: red; &#125;</code></td></tr><tr><td>通配符选择器</td><td>选择所有的标签</td><td>选择的太多，有部分不需要</td><td>特殊情况使用</td><td><code>* &#123; color: red; &#125;</code></td></tr></tbody></table><ul><li>每个基础选择器都有使用场景，都需掌握</li><li>如果是修改样式，类选择器最常用</li></ul><h2 id="3-CSS-字体属性"><a href="#3-CSS-字体属性" class="headerlink" title="3. CSS 字体属性"></a>3. CSS 字体属性</h2><p>CSS Fonts（字体）属性用于定义字体系列、大小、粗细和文字样式（如斜体）。</p><h3 id="3-1-字体系列"><a href="#3-1-字体系列" class="headerlink" title="3.1. 字体系列"></a>3.1. 字体系列</h3><p>CSS 使用 font-family 属性定义文本的字体系列。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">font-family</span>: <span class="string">&quot;微软雅黑&quot;</span>; &#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123; <span class="attribute">font-family</span>: Arial, <span class="string">&quot;Microsoft Yahei&quot;</span>, <span class="string">&quot;微软雅黑&quot;</span>; &#125;</span><br></pre></td></tr></table></figure><ul><li>各种字体之间必须使用英文状态下的逗号隔开</li><li>一般情况下，如果有空格隔开的多个单词组成的字体，加引号</li><li>尽量使用系统默认自带字体，保证在任何用户的浏览器中都能正确显示</li><li>最常见的几个字体：<code>body &#123; font-family: &quot;Microsoft YaHei&quot;, tahoma, arial, &quot;Hiragino Sans GB&quot;; &#125;</code></li></ul><h3 id="3-2-字体大小"><a href="#3-2-字体大小" class="headerlink" title="3.2. 字体大小"></a>3.2. 字体大小</h3><p>CSS 使用 font-size 属性定义字体大小</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>px（像素）大小是网页中最常用的单位</li><li>谷歌浏览器默认的文字大小为 16px</li><li>不同浏览器可能默认显示的字号大小不一致，我们尽可能的给一个明确值大小，不要默认大小</li><li>可以给 body 指定整个页面文字的大小</li></ul><h3 id="3-3-字体粗细"><a href="#3-3-字体粗细" class="headerlink" title="3.3. 字体粗细"></a>3.3. 字体粗细</h3><p>CSS 使用 font-weight 属性设置文本字体的粗细。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>默认值（不加粗的）</td></tr><tr><td>bold</td><td>定义加粗（加粗的）</td></tr><tr><td>100~900</td><td>400 等同于 normal，而 700 等同于 bold，数字后不带单位</td></tr></tbody></table><ul><li><strong>实际开发中，数字表示粗细更常用</strong></li></ul><h3 id="3-4-文字样式"><a href="#3-4-文字样式" class="headerlink" title="3.4. 文字样式"></a>3.4. 文字样式</h3><p>CSS 使用 font-style 属性设置文本的风格</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">font-style</span>: italic;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>默认值，浏览器会显示标准的字体样式 <code>font-style: normal;</code></td></tr><tr><td>italic</td><td>浏览器会显示斜体的字体样式</td></tr></tbody></table><p><strong>注意：平时很少给文字加斜体，反而要给斜体标签（em，i）改为不倾斜字体。</strong></p><h3 id="3-5-字体复合属性"><a href="#3-5-字体复合属性" class="headerlink" title="3.5. 字体复合属性"></a>3.5. 字体复合属性</h3><p>字体属性可以把以上文字样式综合来写，这样可以更节约代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font</span>: font-style font-weight font-size/line-height font-family;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用 font 属性时，必须按上面语法格式中的顺序书写，不能更换顺序，并且各个属性间空格隔开</li><li>不需要设置的属性可以省略（取默认值），但<strong>必须保留 font-size 和 font-family 属性，否则 font 属性将不起作用</strong></li></ul><h3 id="3-6-字体属性总结"><a href="#3-6-字体属性总结" class="headerlink" title="3.6. 字体属性总结"></a>3.6. 字体属性总结</h3><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td>font-size</td><td>字号</td><td>我们通常用的单位是 px 像素，要跟单位</td></tr><tr><td>font-family</td><td>字体</td><td>实际工作中按照团队约定写字体</td></tr><tr><td>font-weight</td><td>字体粗细</td><td>加粗 700，或 bold；不加粗 400，或 normal，数字不跟单位</td></tr><tr><td>font-style</td><td>字体样式</td><td>倾斜 italic；不倾斜 normal；工作中常用 normal</td></tr><tr><td>font</td><td>字体连写</td><td>1.字体连写有顺序，不能随意更换位置 2.字号和字体不能省略</td></tr></tbody></table><h2 id="4-CSS-文本属性"><a href="#4-CSS-文本属性" class="headerlink" title="4. CSS 文本属性"></a>4. CSS 文本属性</h2><p>CSS Text（文本）属性可定义文本的外观，比如文本的颜色、对齐文本、装饰文本、文本缩进、行间距等。</p><h3 id="4-1-文本颜色"><a href="#4-1-文本颜色" class="headerlink" title="4.1. 文本颜色"></a>4.1. 文本颜色</h3><p>color 属性，用于定义文本的颜色    </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>表示</th><th>属性值</th></tr></thead><tbody><tr><td>预定义的颜色值</td><td>red，green，blue，pink等</td></tr><tr><td>十六进制</td><td>#FF0000，#FF6600</td></tr><tr><td>RGB代码</td><td><code>rgb(255, 255, 0) 或 rgb(100%, 100%, 0)</code></td></tr></tbody></table><p><strong>开发中最常用十六进制</strong></p><h3 id="4-2-对齐文本"><a href="#4-2-对齐文本" class="headerlink" title="4.2. 对齐文本"></a>4.2. 对齐文本</h3><p>text-align 属性用于设置元素内文本内容的水平对齐方式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>解释</th></tr></thead><tbody><tr><td>left</td><td>左对齐（默认值）</td></tr><tr><td>right</td><td>右对齐</td></tr><tr><td>center</td><td>居中对齐</td></tr></tbody></table><h3 id="4-3-装饰文本"><a href="#4-3-装饰文本" class="headerlink" title="4.3. 装饰文本"></a>4.3. 装饰文本</h3><p>text-decoration 属性规定添加到文本的修饰。可以给文本添加下划线、删除线、上划线等。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>默认。没有装饰线（最常用）</td></tr><tr><td>underline</td><td>下划线。链接 a 自带下划线（常用）</td></tr><tr><td>overline</td><td>上划线。（几乎不用）</td></tr><tr><td>line-through</td><td>删除线。（不常用）</td></tr></tbody></table><h3 id="4-4-文本缩进"><a href="#4-4-文本缩进" class="headerlink" title="4.4. 文本缩进"></a>4.4. 文本缩进</h3><p>text-indent 属性用来指定文本的第一行的缩进，通常是将段落的首行缩进</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-indent</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通常设置该属性，所有元素的第一行都可以缩进一个给定的长度，甚至该长度可以是负值。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">text-indent</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>em 是一个相对单位，就是当前元素（font-size）1个文字的大小，如果当前元素没有设置大小，则会按照父元素的 1 个文字大小。</p><h3 id="4-5-行间距"><a href="#4-5-行间距" class="headerlink" title="4.5. 行间距"></a>4.5. 行间距</h3><p>line-height 属性用于设置行间的距离（行高）。可以控制文字行与行之间的距离。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-6-文本属性总结"><a href="#4-6-文本属性总结" class="headerlink" title="4.6. 文本属性总结"></a>4.6. 文本属性总结</h3><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td>color</td><td>文本颜色</td><td>通常用十六进制，简写，例如 #fff</td></tr><tr><td>text-align</td><td>文本对齐</td><td>可以设定文字水平的对齐方式</td></tr><tr><td>text-indent</td><td>文本缩进</td><td>通常用于段落首行缩进 2 个字符，text-indent: 2em</td></tr><tr><td>text-decoration</td><td>文本修饰</td><td>下划线：underline，取消下划线：none</td></tr><tr><td>line-height</td><td>行高</td><td>控制行与行之间的距离</td></tr></tbody></table><h2 id="5-CSS-的引入方式"><a href="#5-CSS-的引入方式" class="headerlink" title="5.CSS 的引入方式"></a>5.CSS 的引入方式</h2><h3 id="5-1-CSS-的三种样式表"><a href="#5-1-CSS-的三种样式表" class="headerlink" title="5.1. CSS 的三种样式表"></a>5.1. CSS 的三种样式表</h3><p>按照CSS样式书写的位置（或者引入的方式），CSS样式表可分为三大类：</p><ol><li>行内样式表（行内式）</li><li>内部样式表（嵌入式）</li><li>外部样式表（链接式）</li></ol><h3 id="5-2-内部样式表"><a href="#5-2-内部样式表" class="headerlink" title="5.2. 内部样式表"></a>5.2. 内部样式表</h3><p>内部样式表（内嵌样式表）是写到 html 页面内部。是将所有的 CSS 代码抽取出来，单独放到一个&lt;style&gt;标签中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css"><span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;style&gt;</code> 标签理论上可以放在 HTML 文档的任何地方，但一般会放在文档的 <code>&lt;head&gt;</code> 标签中</li><li>通过此种方式，可以方便控制当前整个页面中的元素样式设置</li><li>代码结构清晰，但是并没有实现结构与样式完全分离</li><li>使用内部样式表设定 CSS，通常也被称为嵌入式引入</li></ul><h3 id="5-3-行内样式表"><a href="#5-3-行内样式表" class="headerlink" title="5.3. 行内样式表"></a>5.3. 行内样式表</h3><p>行内样式表（内联样式表）是在元素标签内部的 style 属性中设定 CSS 样式。适合于修改简单样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size: 20px;&quot;</span>&gt;</span>行内样式<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>style 其实就是标签的属性</li><li>在双引号之间，写法要符合 CSS 规范</li><li>可以控制当前的标签设置样式</li><li>由于书写繁琐，并且没有体现出结构与样式相分离的思想，所以不推荐大量使用，只有当前元素添加简单样式的时候，可以考虑使用</li><li>使用行内样式表设定 CSS，通常也被称为行内式引入</li></ul><h3 id="5-4-外部样式表"><a href="#5-4-外部样式表" class="headerlink" title="5.4. 外部样式表"></a>5.4. 外部样式表</h3><p>实际开发都是外部样式表，适合于样式比较多的情况。核心是：样式单独写到 CSS 文件中，之后把 CSS 文件引入到 HTML 页面中使用。</p><p>引入外部样式表步骤：</p><ol><li>新建一个后缀为 .css 的样式文件，把所有 CSS 代码都放入此文件中</li><li>在 HTML 页面中，使用 <code>&lt;link&gt;</code> 标签引入这个文件。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css文件路径&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>rel</td><td>定义当前文挡与被链接文档之间的关系，在这里需要指定为 “stylesheet”，表示被链接的文档是一个样式表文件</td></tr><tr><td>href</td><td>定义所链接的外部样式表文件的 URL，可以是相对路径，也可以是绝对路径</td></tr></tbody></table><ul><li>使用外部样式表设定 CSS，通常也被称为外链式或链接引入式，这种方式是开发中最常用的方式</li></ul><h3 id="5-5-CSS引入方式总结"><a href="#5-5-CSS引入方式总结" class="headerlink" title="5.5. CSS引入方式总结"></a>5.5. CSS引入方式总结</h3><table><thead><tr><th>样式表</th><th>优点</th><th>缺点</th><th>使用情况</th><th>控制范围</th></tr></thead><tbody><tr><td>行内样式表</td><td>书写方便，权重高</td><td>结构样式混写</td><td>较少</td><td>控制一个标签</td></tr><tr><td>内部样式表</td><td>部分结构与样式相分离</td><td>没有彻底分离</td><td>较多</td><td>控制一个页面</td></tr><tr><td>外部样式表</td><td>完全实现结构与样式相分离</td><td>需要引入</td><td>最多</td><td>控制多个页面</td></tr></tbody></table><h2 id="6-综合案例"><a href="#6-综合案例" class="headerlink" title="6. 综合案例"></a>6. 综合案例</h2><p>综合案例-新闻页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>新闻页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">font</span>: <span class="number">16px</span>/<span class="number">28px</span> <span class="string">&quot;Microsoft YaHei&quot;</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">h2</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: <span class="number">400</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line">        &#125;</span><br><span class="line">        .gray &#123;</span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#aaa</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        .search &#123;</span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#666666</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">170px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        .btn &#123;</span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        .img &#123;</span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>天空中同时出现四大天象奇观 摄影师拍下罕见一幕<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>2019-12-18 15:00:03 来源：<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>中国天气网<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入查询条件&quot;</span> <span class="attr">class</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;搜素&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>中新网12月18日电 据台湾联合新闻网报道，日本摄影师佐藤圭日前在《现代商业》专栏上，贴出一张照片，这张照片在北海道拍摄，捕捉了四个气象奇观同时出现在一片天空的瞬间。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;img&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/ca1349540923dd540e472eda759559db9d8248ea.jpeg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>资料图：日晕景观。中新社记者 贺俊怡 摄<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>文中写道，首先是围绕在太阳周边的光圈“日晕”，日晕是由悬浮在大气中的六角形冰晶反射日光后所形成。通常内圈是红光，外圈是紫光。一般来说，会被认为是风暴降临前的征兆。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>其次，则是在日晕两旁散发出七彩虹光的“幻日”。幻日常常跟日晕一起出现，是由水平方向的扁平状冰晶形成。因为看起来像是有复数的太阳出现，而被传说为不祥之兆。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>从“幻日”外侧往外延伸的水平线，则是“幻日环”。相较于日晕和幻日，幻日环较为少见。完整的幻日环可以圈起整个天空，但一般而言，只能观测到一部分。在中国古代，幻日环常被认为是兵马之乱的前兆。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>最后，则是“环天顶弧”，又被称为天空的微笑，看起来就像是倒过来的彩虹。环天顶弧一般伴随着幻日出现，和幻日的成因相同。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>佐藤圭表示，自开始摄影以来，他曾经数次遇过这个画面，却总是错过拍摄时机。如今，终于拍摄到这个画面的他，在文中表露了满满的成就感。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7-Chrome-调试工具"><a href="#7-Chrome-调试工具" class="headerlink" title="7. Chrome 调试工具"></a>7. Chrome 调试工具</h2><p>Chrome 浏览器提供了一个非常好用的调试工具，可以用来调试我们的 HTML 结构和 CSS 样式</p><h3 id="7-1-打开调试工具"><a href="#7-1-打开调试工具" class="headerlink" title="7.1. 打开调试工具"></a>7.1. 打开调试工具</h3><p>打开 Chrome 浏览器，按下 F12 键或者右击页面空白处→检查</p><h3 id="7-2-使用调试工具"><a href="#7-2-使用调试工具" class="headerlink" title="7.2. 使用调试工具"></a>7.2. 使用调试工具</h3><ol><li>Ctrl + 滚轮 可以放大开发者工具代码大小</li><li>左边是 HTML 元素结构，右边是 CSS 样式</li><li>右边 CSS 样式可以改动数值（左右箭头或者直接输入）和查看颜色</li><li>Ctrl + 0 复原浏览器大小</li><li>如果点击元素，发现右侧没有样式引入，既有可能是类名或者样式引入错误</li><li>如果有样式，但是样式前面有黄色叹号提示，则是样式属性书写错误</li></ol><h2 id="8-Emmet-语法"><a href="#8-Emmet-语法" class="headerlink" title="8. Emmet 语法"></a>8. Emmet 语法</h2><p>Emmet 语法的前身是 Zen coding，它使用缩写，来提高 html/css 的编写速度，Vscode 内部已经集成了该语法。</p><h3 id="8-1-快速生成-HTML-结构语法"><a href="#8-1-快速生成-HTML-结构语法" class="headerlink" title="8.1. 快速生成 HTML 结构语法"></a>8.1. 快速生成 HTML 结构语法</h3><ol><li>生成标签，直接输入标签名，按 Tab 键即可。div → Tab 键</li><li>如果想要生成多个相同标签，加上 * 就可以了。div*3 → Tab 键</li><li>如果有父子级关系，可以用 &gt; 。ul&gt;li → Tab 键</li><li>如果有兄弟关系的标签，用 +。p+div → Tab 键</li><li>如果生成带有类名或 id 名字的。直接写 .demo 或 #demo → Tab 键 </li><li>如果生成的 div 类名是有顺序的，可以用自增符号 $</li><li>如果想要在生成的标签内部写内容可以用 {} 表示</li></ol><h3 id="8-2-快速生成CSS样式语法"><a href="#8-2-快速生成CSS样式语法" class="headerlink" title="8.2. 快速生成CSS样式语法"></a>8.2. 快速生成CSS样式语法</h3><p>CSS 基本采取简写形式即可</p><ol><li>比如 w200  按 Tab 可以生成 width: 200px;</li><li>比如 lh26  按 Tab 可以生成 line-height: 26px;</li></ol><h3 id="8-3-快速格式化代码"><a href="#8-3-快速格式化代码" class="headerlink" title="8.3. 快速格式化代码"></a>8.3. 快速格式化代码</h3><p>webstrom：ctrl + alt + L</p><h2 id="9-CSS的复合选择器"><a href="#9-CSS的复合选择器" class="headerlink" title="9. CSS的复合选择器"></a>9. CSS的复合选择器</h2><h3 id="9-1-什么是复合选择器"><a href="#9-1-什么是复合选择器" class="headerlink" title="9.1. 什么是复合选择器"></a>9.1. 什么是复合选择器</h3><p>在 CSS 中，可以根据选择器的类型把选择器分为基础选择器和复合选择器，复合选择器是建立在基础选择器之上，对基本选择器进行组合形成的。</p><ul><li>复合选择器可以更准确、更高效的选择目标元素（标签）</li><li>复合选择器是由两个或多个基础选择器，通过不同的组合方式组合而成的</li><li>常用的复合选择器包括：<strong>后代选择器、子选择器、并集选择器、伪类选择器等</strong></li></ul><h3 id="9-2-后代选择器"><a href="#9-2-后代选择器" class="headerlink" title="9.2. 后代选择器"></a>9.2. 后代选择器</h3><p><strong>后代选择器</strong>又称为<strong>包含选择器</strong>，可以选择父元素里面的子元素。其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span> 元素<span class="number">2</span> &#123; 样式声明 &#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择 元素1 里面的所有 元素2（后代元素）</p><p><strong>例如：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123; 样式声明 &#125;  <span class="comment">/*选择ul里面的所有li标签元素*/</span></span><br></pre></td></tr></table></figure><ul><li>元素1 和 元素2 中间用 <strong>空格</strong> 隔开</li><li>元素1 是父级，元素2 是子级，最终选择的是 <strong>元素2</strong></li><li>元素2 可以是儿子，也可以是孙子等，只要是 元素1 的后代即可</li><li>元素1 和 元素2 可以是任意基础选择器</li></ul><h3 id="9-3-子选择器"><a href="#9-3-子选择器" class="headerlink" title="9.3. 子选择器"></a>9.3. 子选择器</h3><p><strong>子元素选择器（子选择器）</strong>只能选择作为某元素的最近一级子元素。简单理解就是选亲儿子元素</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>&gt;元素<span class="number">2</span> &#123; 样式声明 &#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择 元素1 里面的所有直接后代（子元素）元素2</p><p><strong>例如：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span> &#123; 样式声明 &#125;  <span class="comment">/*选择div里面所有最近一级p标签元素*/</span></span><br></pre></td></tr></table></figure><ul><li>元素1 和 元素2 中间用 <strong>大于号</strong> 隔开</li><li>元素1 是父级，元素2 是子级，最终选择的是 <strong>元素2</strong></li><li>元素2 必须是亲儿子，其孙子、重孙之类都不归它管</li></ul><h3 id="9-4-并集选择器"><a href="#9-4-并集选择器" class="headerlink" title="9.4. 并集选择器"></a>9.4. 并集选择器</h3><p>并集选择器可以选择多组标签，同时为它们定义相同的样式。通常用于集体声明。</p><p>并集选择器是各选择器通过英文逗号连接而成，任何形式的选择器都可以作为并集选择器的一部分</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>, 元素<span class="number">2</span> &#123; 样式声明 &#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择 元素1 和 元素2</p><p><strong>例如：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>,</span><br><span class="line"><span class="selector-tag">p</span> &#123; </span><br><span class="line">   样式声明 </span><br><span class="line">&#125;  <span class="comment">/*选择ul和div标签元素*/</span></span><br></pre></td></tr></table></figure><ul><li>元素1 和 元素2 中间用 <strong>逗号</strong> 隔开</li><li>逗号可以理解为 <strong>和</strong></li><li>并集选择器通常用于集体声明</li></ul><h3 id="9-5-伪类选择器"><a href="#9-5-伪类选择器" class="headerlink" title="9.5. 伪类选择器"></a>9.5. 伪类选择器</h3><p>伪类选择器用于向某些选择器添加特殊的效果，比如给连接添加特殊的效果，或选择第 1 个，第 n 个元素</p><p>伪类选择器书写最大的特点是用冒号表示，比如 <code>:hover</code>，<code>:first-child</code></p><h3 id="9-6-链接伪类选择器"><a href="#9-6-链接伪类选择器" class="headerlink" title="9.6. 链接伪类选择器"></a>9.6. 链接伪类选择器</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>  <span class="comment">/*选择所有未被访问的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>  <span class="comment">/*选择所有已被访问的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>  <span class="comment">/*选择鼠标指针位于其上的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>  <span class="comment">/*选择活动链接（鼠标按下未弹起的链接）*/</span></span><br></pre></td></tr></table></figure><p><strong>链接伪类选择器注意事项</strong></p><ol><li>为了确保生效，请按照 LVHA 的顺序声明 :link - :visited - :hover - :active</li><li>记忆法：love hate</li><li>因为 a 链接在浏览器中具有默认样式，所以我们实际工作中都需要给链接单独指定样式</li></ol><p><strong>链接伪类选择器实际开发中的写法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* a 是标签选择器 所有的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: gray;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* :hover 是链接伪类选择器 鼠标经过 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;  <span class="comment">/* 鼠标经过的时候，由原来的灰色变成了红色 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-7-focus-伪类选择器"><a href="#9-7-focus-伪类选择器" class="headerlink" title="9.7. :focus 伪类选择器"></a>9.7. :focus 伪类选择器</h3><p>:focus 伪类选择器用于选取获得焦点的表单元素</p><p>焦点就是光标，一般情况下 <code>&lt;input&gt;</code> 类表单元素才能获取，因此这个选择器也主要针对表单元素来说</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-8-复合选择器总结"><a href="#9-8-复合选择器总结" class="headerlink" title="9.8. 复合选择器总结"></a>9.8. 复合选择器总结</h3><table><thead><tr><th>选择器</th><th>作用</th><th>特征</th><th>使用情况</th><th>隔开符号及用法</th></tr></thead><tbody><tr><td>后代选择器</td><td>用来选择后代元素</td><td>可以是子孙后代</td><td>较多</td><td>符号是空格</td></tr><tr><td>子代选择器</td><td>选择最近一级元素</td><td>只选亲儿子</td><td>较少</td><td>符号是大于</td></tr><tr><td>并集选择器</td><td>选择某些相同样式的元素</td><td>可以用于集体声明</td><td>较多</td><td>符号是逗号</td></tr><tr><td>链接伪类选择器</td><td>选择不同状态的链接</td><td>跟链接相关</td><td>较多</td><td><code>a &#123;&#125;</code> 和 <code>a:hover</code></td></tr><tr><td>:focus选择器</td><td>选择获得光标的表单</td><td>跟表单相关</td><td>较少</td><td><code>input:focus</code></td></tr></tbody></table><h2 id="10-CSS的元素显示模式"><a href="#10-CSS的元素显示模式" class="headerlink" title="10. CSS的元素显示模式"></a>10. CSS的元素显示模式</h2><h3 id="10-1-元素显示模式"><a href="#10-1-元素显示模式" class="headerlink" title="10.1. 元素显示模式"></a>10.1. 元素显示模式</h3><p>作用：网页的标签非常多，在不同的地方会用到不同类型的标签，了解它们的特点可以更好的布局网页。</p><p>HTML 元素一般分为 <strong>块元素</strong> 和 <strong>行内元素</strong> 两种类型</p><h3 id="10-2-块元素"><a href="#10-2-块元素" class="headerlink" title="10.2. 块元素"></a>10.2. 块元素</h3><p>常见的块元素有 &lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;等，其中 &lt;div&gt; 标签是最典型的块元素</p><p><strong>块级元素的特点：</strong></p><ol><li>独占一行</li><li>高度，宽度，内外边距可以控制</li><li>宽度默认是容器（父级宽度）的100%</li><li>是一个容器及盒子，里面可以放行内或者块级元素</li></ol><p><strong>注意：</strong></p><ul><li>文字类的元素不能使用块级元素</li><li><strong>&lt;p&gt; 标签主要用于存放文字，因此 &lt;p&gt; 里面不能放块级元素，特别是不能放 &lt;div&gt;</strong></li><li><strong>同理，&lt;h1&gt;~&lt;h6&gt; 等都是文字类块级标签，里面也不能放其它块级元素</strong></li></ul><h3 id="10-3-行内元素"><a href="#10-3-行内元素" class="headerlink" title="10.3. 行内元素"></a>10.3. 行内元素</h3><p>常见的行内元素有 &lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt; 等，其中 &lt;span&gt; 标签是最典型的行内元素。有的地方也将行内元素称为内联元素。</p><p><strong>行内元素的特点：</strong></p><ol><li>相邻行内元素在一行上，一行可以显示多个</li><li>宽、高直接设置是无效的</li><li>默认宽度就是它本身内容的宽度</li><li>行内元素只能收纳文本或其它行内元素</li></ol><p><strong>注意：</strong></p><ul><li><strong>链接里面不能再放链接</strong></li><li><strong>特殊情况链接 &lt;a&gt; 里面可以放块级元素，但是给 &lt;a&gt; 转换一下块级模式最安全</strong> </li></ul><h3 id="10-4-行内块元素"><a href="#10-4-行内块元素" class="headerlink" title="10.4. 行内块元素"></a>10.4. 行内块元素</h3><p>在行内元素中有几个特殊的标签，&lt;img /&gt;、&lt;input /&gt;、&lt;td /&gt;，它们同时具有块元素和行内元素的特点。</p><p><strong>行内块元素的特点：</strong></p><ol><li>和相邻行内元素（行内块）在一行上，<strong>但是它们之间会有空白缝隙。</strong>一行可以显示多个（行内元素特点）。</li><li>默认宽度就是它本身内容的宽度（行内元素的特点）</li><li>高度，行高，内外边距可以控制（块级元素特点）</li></ol><h3 id="10-5-元素显示模式总结"><a href="#10-5-元素显示模式总结" class="headerlink" title="10.5. 元素显示模式总结"></a>10.5. 元素显示模式总结</h3><table><thead><tr><th>元素模式</th><th>元素排列</th><th>设置样式</th><th>默认宽度</th><th>包含</th></tr></thead><tbody><tr><td>块级元素</td><td>一行只能放一个块级元素</td><td>可以设置宽度高度</td><td>容器的100%</td><td>容器级可以包含任何标签</td></tr><tr><td>行内元素</td><td>一行可以放多个行内元素</td><td>不可以直接设置宽度高度</td><td>它本身内容的宽度</td><td>容纳文本或其它行内元素</td></tr><tr><td>行内块元素</td><td>一行放多个行内块元素</td><td>可以设置宽度高度</td><td>它本身内容的宽度</td><td></td></tr></tbody></table><h3 id="10-6-元素显示模式转换"><a href="#10-6-元素显示模式转换" class="headerlink" title="10.6. 元素显示模式转换"></a>10.6. 元素显示模式转换</h3><p>特殊情况下，我们需要元素模式的转换，简单理解：一个模式的元素需要另外一种模式的特性</p><p>比如想要增加链接 &lt;a&gt; 的触发范围。</p><ul><li><strong>转换为块元素：display: block;</strong></li><li>转化为行内元素：display: inline;</li><li><strong>转换为行内块元素：display:inline-block</strong></li></ul><h3 id="10-7-小工具-snipaste"><a href="#10-7-小工具-snipaste" class="headerlink" title="10.7. 小工具 snipaste"></a>10.7. 小工具 snipaste</h3><p>Snipaste 是一个简单但强大的截图工具，也可以让你的截图贴回到屏幕上。</p><ol><li>F1 可以截图。同时测量大小，设置箭头，书写文字等</li><li>F3 在桌面置顶显示</li><li>点击图片，alt 可以取色（按下shift可以切换取色模式）</li><li>按下 esc 取消图片显示</li></ol><h3 id="10-8-单行文字垂直居中"><a href="#10-8-单行文字垂直居中" class="headerlink" title="10.8. 单行文字垂直居中"></a>10.8. 单行文字垂直居中</h3><p>解决方案1：让文字的行高等于盒子的高度，就可以让文字在当前盒子内垂直居中</p><p>解决方案2：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">justify-content</span>: center;  <span class="comment">/*主轴居中*/</span></span><br><span class="line"><span class="attribute">align-items</span>: center;  <span class="comment">/*侧轴居中*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-9-单行文字垂直居中的原理"><a href="#10-9-单行文字垂直居中的原理" class="headerlink" title="10.9. 单行文字垂直居中的原理"></a>10.9. 单行文字垂直居中的原理</h3><p>行高的上空隙和下空隙把文字挤到中间。如果行高小于盒子高度，文字会偏上，如果行高大于盒子高度，文字会偏下</p><h2 id="11-CSS-背景"><a href="#11-CSS-背景" class="headerlink" title="11. CSS 背景"></a>11. CSS 背景</h2><p>通过 CSS 背景属性，可以给页面元素添加背景样式。</p><h3 id="11-1-背景颜色"><a href="#11-1-背景颜色" class="headerlink" title="11.1. 背景颜色"></a>11.1. 背景颜色</h3><p>background-color 属性定义了元素的背景颜色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: 颜色值;</span><br></pre></td></tr></table></figure><p>一般情况下元素背景颜色默认是 transparent（透明），可以手动指定背景颜色为透明色</p><h3 id="11-2-背景图片"><a href="#11-2-背景图片" class="headerlink" title="11.2. 背景图片"></a>11.2. 背景图片</h3><p>background-image 属性描述了元素的背景图像。实际开发常见于 logo 或者一些装饰性的小图片或者超大的背景图片，优点是非常便于控制位置（精灵图也是一种运用场景）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: none | <span class="built_in">url</span>(<span class="string">url</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数值</th><th>作用</th></tr></thead><tbody><tr><td>none</td><td>无背景图（默认的）</td></tr><tr><td>url</td><td>使用绝对或相对地址指定背景图像</td></tr></tbody></table><h3 id="11-3-背景平铺"><a href="#11-3-背景平铺" class="headerlink" title="11.3. 背景平铺"></a>11.3. 背景平铺</h3><p>如果需要在 HTML 页面上对背景图像进行平铺，可以使用 <strong>background-repeat</strong> 属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-repeat</span>: repeat | no-repeat | repeat-x | repeat-y</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数值</th><th>作用</th></tr></thead><tbody><tr><td>repeat</td><td>背景图像在纵向和横向上平铺（默认的）</td></tr><tr><td>no-repeat</td><td>背景图像不平铺</td></tr><tr><td>repeat-x</td><td>背景图像在横向上平铺</td></tr><tr><td>repeat-y</td><td>背景图像在纵向上平铺</td></tr></tbody></table><h3 id="11-4-背景图片位置"><a href="#11-4-背景图片位置" class="headerlink" title="11.4. 背景图片位置"></a>11.4. 背景图片位置</h3><p>利用 background-position 属性改变图片在背景中的位置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: x y;</span><br></pre></td></tr></table></figure><p>参数代表的意思是：x 坐标和 y 坐标。可以使用 方位名词 或者 精确单位</p><table><thead><tr><th>参数值</th><th>说明</th></tr></thead><tbody><tr><td>length</td><td>百分数 | 由浮点数字和单位标识符组成的长度值</td></tr><tr><td>position</td><td>top | center |bottom | left | center | right 方位名词</td></tr></tbody></table><ol><li>参数是方位名词<ol><li>如果指定的两个值都是方位名词，则两个值前后顺序无关，比如 left top 和 top left 效果一致</li><li>如果只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐    </li></ol></li><li>参数是精确单位<ol><li>如果参数值是精确坐标，那么第一个肯定是 x 坐标，第二个一定是y坐标</li><li>如果只指定一个值，那该数值一定是x坐标，另一个默认垂直居中   </li></ol></li><li>参数是混合单位<ol><li>如果指定的两个值是精确单位和方位名词混合使用，则第一个是 x 坐标，第二个是 y 坐标</li></ol></li></ol><h3 id="11-5-背景图像固定（背景附着）"><a href="#11-5-背景图像固定（背景附着）" class="headerlink" title="11.5. 背景图像固定（背景附着）"></a>11.5. 背景图像固定（背景附着）</h3><p>background-attachment 属性设置背景图像是否固定或者随着页面的其余部分滚动</p><p>background-attachment 后期可以制作视差滚动效果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-attachment</span>: scroll | fixed</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>scroll</td><td>背景图像是随对象内容滚动（默认）</td></tr><tr><td>fixed</td><td>背景图像固定</td></tr></tbody></table><h3 id="11-6-背景复合写法"><a href="#11-6-背景复合写法" class="headerlink" title="11.6. 背景复合写法"></a>11.6. 背景复合写法</h3><p>为了简化背景属性的代码，可以将这些属性合并简写在同一个属性 background 中，从而节约代码量</p><p>当使用简写属性时，没有特定的书写顺序，一般习惯约定顺序为：</p><p>background：背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: transparent url(image.jpg) repeat-x fixed top;</span><br></pre></td></tr></table></figure><p>这是实际开发中，提倡的写法。</p><h3 id="11-7-背景色半透明"><a href="#11-7-背景色半透明" class="headerlink" title="11.7. 背景色半透明"></a>11.7. 背景色半透明</h3><p>CSS3 提供了背景颜色半透明的效果。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span><br></pre></td></tr></table></figure><ul><li>最后一个参数时 alpha 透明度，取值范围 0~1 之间</li><li>习惯把 0.3 的 0 省略掉，写为 background: rgba(0, 0, 0, .3);</li><li>注意：背景半透明是指盒子背景半透明，盒子里面的内容不受影响</li><li>CSS3新增属性，IE9+</li></ul><h3 id="11-8-背景总结"><a href="#11-8-背景总结" class="headerlink" title="11.8. 背景总结"></a>11.8. 背景总结</h3><table><thead><tr><th>属性</th><th>作用</th><th>值</th></tr></thead><tbody><tr><td>background-color</td><td>背景颜色</td><td>预定义的颜色值/十六进制/RGB代码</td></tr><tr><td>background-image</td><td>背景图片</td><td>url(图片路径)</td></tr><tr><td>background-repeat</td><td>是否平铺</td><td>repeat | no-repeat |repeat-x | repeat-y</td></tr><tr><td>background-position</td><td>背景位置</td><td>length |position 分别是 x 和 y 坐标</td></tr><tr><td>background-attachment</td><td>背景附着</td><td>scroll（背景滚动）/fixed（背景固定）</td></tr><tr><td>背景简写</td><td>书写简单</td><td>背景颜色 背景图片地址 背景平铺 背景滚动 背景位置;</td></tr><tr><td>背景色透明度</td><td>背景颜色透明度</td><td>background: rgba(0, 0, 0, .3);</td></tr></tbody></table><p>背景图片：实际开发中常见于 logo 或者一些装饰性的小图片或者是超大的背景图片，优点是非常便于控制位置（精灵图也是一种运用场景）</p><h2 id="12-CSS的三大特性"><a href="#12-CSS的三大特性" class="headerlink" title="12.CSS的三大特性"></a>12.CSS的三大特性</h2><p>CSS有三个非常重要的特征：层叠性、继承性、优先级。</p><h3 id="12-1-层叠性"><a href="#12-1-层叠性" class="headerlink" title="12.1. 层叠性"></a>12.1. 层叠性</h3><p>相同选择器给设置同样的样式，此时一个样式就会覆盖（层叠）另一个冲突的样式。层叠性主要解决样式冲突的问题</p><p>层叠性原则：</p><ul><li>样式冲突，遵循的原则就是就近原则，哪个样式里结构近，就执行哪个样式</li><li>样式不冲突，不会重叠</li></ul><h3 id="12-2-继承性"><a href="#12-2-继承性" class="headerlink" title="12.2. 继承性"></a>12.2. 继承性</h3><p>CSS 中的继承：子标签会继承父标签的某些样式，如文本颜色和字号。简单的理解就是：子承父业</p><ul><li>恰当的使用继承可以简化代码，降低 CSS 样式的复杂性</li><li>子元素可以继承父元素的样式（text-，font-，line-这些元素开头的属性可以继承，以及color属性）</li></ul><p><strong>行高的继承</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> <span class="string">&quot;Microsoft YaHei&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>行高可以跟单位，也可以不跟单位</li><li>如果子元素没有设置行高，则会继承父元素的行高1.5</li><li>此时子元素的行高是：当前子元素的文字大小*1.5</li><li>body 行高1.5，这样写法最大优点是里面的子元素可以根据自己文字大小自动调整行高</li></ul><h3 id="12-3-优先级"><a href="#12-3-优先级" class="headerlink" title="12.3. 优先级"></a>12.3. 优先级</h3><p>当同一个元素指定多个选择器，就会有优先级的产生。</p><ul><li>选择器相同，则执行层叠性</li><li>选择器不同，则根据选择器权重执行</li></ul><p>选择器权重如下表</p><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承 或者 *</td><td>0, 0, 0, 0</td></tr><tr><td>元素选择器</td><td>0, 0, 0, 1</td></tr><tr><td>类选择器，伪类选择器</td><td>0, 0, 1, 0</td></tr><tr><td>ID选择器</td><td>0, 1, 0, 0</td></tr><tr><td>行内样式 style=””</td><td>1, 0, 0, 0</td></tr><tr><td>!important 重要的</td><td>∞无穷大</td></tr></tbody></table><p><strong>优先级注意点：</strong></p><ol><li>权重是由 4 组数字组成，但是不会有进位</li><li>可以理解为类选择器永远大于元素选择器，id 选择器永远大于类选择器，以此类推</li><li>等级判断从左向右，如果某一位数值相同，则判断下一位数值</li><li><strong>继承的权重是 0</strong>，如果该元素没有直接选中，不管父元素权重多高，子元素得到的权重都是 0</li></ol><p><strong>权重叠加：</strong>如果是复合选择器，则会有权重叠加，需要计算权重</p><ul><li>div ul li   (0, 0, 0, 3)</li><li>.nav ul li   (0, 0, 1, 2)</li><li>a:hover   (0, 0, 1, 1)</li><li>.nav a   (0, 0, 1, 1)</li></ul><h2 id="13-盒子模型"><a href="#13-盒子模型" class="headerlink" title="13. 盒子模型"></a>13. 盒子模型</h2><h3 id="13-1-看透网页布局的本质"><a href="#13-1-看透网页布局的本质" class="headerlink" title="13.1. 看透网页布局的本质"></a>13.1. 看透网页布局的本质</h3><p>网页布局的过程</p><ol><li>先准备好相关的网页元素，网页元素基本上都是 Box</li><li>利用 CSS 设置好盒子样式，然后摆放到相应位置</li><li>往盒子里面装内容</li></ol><p>网页布局的核心本质：就是利用 CSS 摆盒子</p><h3 id="13-2-盒子模型（Box-Model）组成"><a href="#13-2-盒子模型（Box-Model）组成" class="headerlink" title="13.2. 盒子模型（Box Model）组成"></a>13.2. 盒子模型（Box Model）组成</h3><p>盒子模型：就是把 HTML 页面中的布局元素看作是一个矩形的盒子，也就是一个盛装内容的容器。</p><p>CSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，它包括：边框、外边距、内边距和实际内容。</p><p><img src="https://img-blog.csdnimg.cn/20200420103817118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="13-3-边框（border）"><a href="#13-3-边框（border）" class="headerlink" title="13.3. 边框（border）"></a>13.3. 边框（border）</h3><p>border 可以设置元素的边框。边框由三部分组成：边框宽度（粗细）、边框样式、边框颜色</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span>: border-width || border-style || bordr-color</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>border-width</td><td>定义边框粗细，单位是px</td></tr><tr><td>border-style</td><td>边框的样式</td></tr><tr><td>bordr-color</td><td>边框颜色</td></tr></tbody></table><p>CSS 边框允许你指定一个元素边框的样式和颜色</p><p>边框简写：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid red;  没有顺序</span><br></pre></td></tr></table></figure><p>边框分开写法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-top</span>: <span class="number">1px</span> solid red;</span><br></pre></td></tr></table></figure><h3 id="13-4-表格的细线边框"><a href="#13-4-表格的细线边框" class="headerlink" title="13.4. 表格的细线边框"></a>13.4. 表格的细线边框</h3><p>border-collapse 属性控制浏览器绘制表格边框的方式。它控制相邻单元格的边框。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-collapse</span>: collapse;</span><br></pre></td></tr></table></figure><ul><li>collapse 单词是合并的意思</li><li>border-collapse: collapse;  表示相邻边框合并在一起</li></ul><h3 id="13-5-边框会影响盒子的实际大小"><a href="#13-5-边框会影响盒子的实际大小" class="headerlink" title="13.5. 边框会影响盒子的实际大小"></a>13.5. 边框会影响盒子的实际大小</h3><p>边框会额外增加盒子的实际大小。因此有两种方案解决：</p><ol><li>测量盒子大小的时候，不量边框</li><li>如果测量的时候包含了边框，则通过 width/height 减去边框的宽度</li></ol><h3 id="13-6-内边距（padding）"><a href="#13-6-内边距（padding）" class="headerlink" title="13.6. 内边距（padding）"></a>13.6. 内边距（padding）</h3><p>padding 属性用于设置内边距，即边框与内容之间的距离。</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>padding-left</td><td>左内边距</td></tr><tr><td>padding-right</td><td>右内边距</td></tr><tr><td>padding-top</td><td>上内边距</td></tr><tr><td>padding-bottom</td><td>下内边距</td></tr></tbody></table><p>padding 属性（简写属性）可以有一到四个值。</p><table><thead><tr><th>值的个数</th><th>表达意思</th></tr></thead><tbody><tr><td>padding: 5px;</td><td>1个值，代表上下左右都有5像素内边距</td></tr><tr><td>padding: 5px 10px;</td><td>2个值，代表上下内边距是5像素，左右内边距是10像素</td></tr><tr><td>padding: 5px 10px 20px;</td><td>3个值，代表上内边距5像素，左右内边距10像素，下内边距20像素</td></tr><tr><td>padding: 5px 10px 20px 30px;</td><td>4个值，代表上5像素，右10像素，下20像素，左30像素 顺时针方向</td></tr></tbody></table><p>当盒子指定 padding 值后，发生了两件事情：</p><ol><li>内容和边框有了距离，添加了内边框</li><li>padding 影响盒子大小。</li></ol><p>如果盒子已经有了宽度和高度，此时再指定内边框，会撑大盒子。</p><p>解决方案：如果保证盒子和效果图大小保持一致，则让 width/height 减去多出来的内边距大小即可</p><p>如果盒子本身没有指定 width/height 属性，则此时 padding 不会撑开盒子大小（对于 block 元素，padding 值设置大于盒子宽度，一定会影响元素尺寸）</p><h3 id="13-7-外边距"><a href="#13-7-外边距" class="headerlink" title="13.7. 外边距"></a>13.7. 外边距</h3><p>margin 属性用于设置外边距，即控制盒子和盒子之间的距离</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>margin-left</td><td>左外边距</td></tr><tr><td>margin-right</td><td>右外边距</td></tr><tr><td>margin-top</td><td>上外边距</td></tr><tr><td>margin-bottom</td><td>下外边距</td></tr></tbody></table><p>margin 简写方式与 padding 相同</p><p><strong>外边距典型应用</strong></p><p>外边距可以让块级盒子水平居中，但是必须满足以下条件：</p><ol><li>盒子必须指定了宽度</li><li>盒子的左右外边距设置为 auto</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>常见的三种写法：</p><ul><li>margin-left: auto; margin-right: auto;</li><li>margin: auto;</li><li><strong>margin: 0 auto;</strong></li></ul><p>注意：以上方法是让块级元素水平居中，行内元素或者行内块元素水平居中给其父元素添加 text-align: center; 即可。</p><h3 id="13-8-外边距合并"><a href="#13-8-外边距合并" class="headerlink" title="13.8. 外边距合并"></a>13.8. 外边距合并</h3><p>使用 margin 定义块元素的垂直外边距时，可能会出现外边距的合并。</p><p>主要有两种情况：</p><h4 id="13-8-1-相邻块元素垂直外边距的合并"><a href="#13-8-1-相邻块元素垂直外边距的合并" class="headerlink" title="13.8.1. 相邻块元素垂直外边距的合并"></a>13.8.1. 相邻块元素垂直外边距的合并</h4><p>当上下相邻的两个块元素（兄弟关系）相遇时，如果上面的元素有下外边距 margin-bottom，下面的元素有上外边距 margin-top，则它们之间的垂直距离不是 margin-bottom 与 margin-top 之和。<strong>取两个值中的较大者，这种现象被称为相邻元素垂直外边距的合并。</strong></p><p><strong>解决方案：尽量只给一个盒子添加 margin 值</strong></p><p><img src="https://img-blog.csdnimg.cn/20200420103907260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h4 id="13-8-2-嵌套块元素垂直外边距的塌陷"><a href="#13-8-2-嵌套块元素垂直外边距的塌陷" class="headerlink" title="13.8.2. 嵌套块元素垂直外边距的塌陷"></a>13.8.2. 嵌套块元素垂直外边距的塌陷</h4><p>对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。</p><p><img src="https://img-blog.csdnimg.cn/20200420103926378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>解决方案：</p><ol><li>可以给父元素定义上边框</li><li>可以给父元素定义上内边距</li><li>可以给父元素添加 overflow: hidden;</li></ol><p>还有其他方法，比如浮动、固定、绝对定位的盒子不会有塌陷问题</p><h3 id="13-9-清除内外边距"><a href="#13-9-清除内外边距" class="headerlink" title="13.9. 清除内外边距"></a>13.9. 清除内外边距</h3><p>网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致。因此我们在布局前，首先要清除下网页元素的内外边距。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;  <span class="comment">/* 清除内边距 */</span></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;  <span class="comment">/* 清除外边距 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：行内元素为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距（不起作用）。但是转换为块级和行内块元素就可以了。</strong></p><h2 id="14-PS基本操作"><a href="#14-PS基本操作" class="headerlink" title="14. PS基本操作"></a>14. PS基本操作</h2><p>因为网页美工大部分效果图都是利用 PS 制作的，所以我们大部分切图工作是在 PS 中完成的。</p><ul><li>文件 → 打开：可以打开我们要测量的图片</li><li>Ctrl + R：可以打开标尺，或者视图 → 标尺</li><li>右击标尺，将单位改为像素</li><li>Ctrl + 加号(+) 可以放大视图，Ctrl + 减号(-) 可以缩小视图</li><li>按住空格键，鼠标可以变为小手，拖动PS视图</li><li>用选区拖动，可以测量大小</li><li>Ctrl + D 可以取消选区，或者在旁边空白处点击一下也可以取消选区</li></ul><h2 id="15-总结"><a href="#15-总结" class="headerlink" title="15. 总结"></a>15. 总结</h2><ol><li>布局为什么用不同的盒子？<ol><li>标签是有语义的，合理的地方用合理的标签。比如产品标题用 h，大量文字用 p</li></ol></li><li>为什么那么多类名？<ol><li>类名就是给盒子起名字，可以更好地找到这个盒子，选取盒子更容易，便于后期维护。</li></ol></li><li>用 margin 还是 padding？<ol><li>大部分情况下可以混用，两者各有优缺点，但是根据实际情况，总是有更简单的办法实现。</li></ol></li><li>自己没有思路？<ol><li>先模仿，再做自己的风格</li></ol></li></ol><h2 id="16-圆角边框"><a href="#16-圆角边框" class="headerlink" title="16. 圆角边框"></a>16. 圆角边框</h2><p>在 CSS3 中，新增了<strong>圆角边框</strong>样式，这样我们的盒子就可以变圆角了。</p><p>border-radius 属性用于设置元素的外边框圆角。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>: length;</span><br></pre></td></tr></table></figure><p>radius 半径（圆的半径）原理：（椭）圆的边框的交集形成圆角效果</p><ul><li>参数值可以为数值或百分比的形式</li><li>如果是正方形，想要设置一个圆，把数值改为高度的一半或者宽度的一半即可，或者直接写为 50%</li><li>如果是矩形，设置高度的一半就可以做一个两边半圆形的矩形</li><li>该属性是一个简写属性，可以跟四个值，分别代表左上角，右上角，右下角，左下角</li><li>分开写：border-top-left-radius、border-bottom-left-radius、border-top-right-radius、border-top-right-radius</li></ul><h2 id="17-盒子阴影"><a href="#17-盒子阴影" class="headerlink" title="17. 盒子阴影"></a>17. 盒子阴影</h2><p>CSS3 中新增了盒子阴影，我们可以使用 box-shadow 属性为盒子添加阴影。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: h-shadow v-shadow blur spread color inset;</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>h-shadow</td><td>必需。水平阴影的位置。允许负值</td></tr><tr><td>v-shadow</td><td>必需。垂直阴影的位置。允许负值</td></tr><tr><td>blur</td><td>可选。模糊距离</td></tr><tr><td>spread</td><td>可选。阴影的尺寸</td></tr><tr><td>color</td><td>可选。阴影的颜色</td></tr><tr><td>inset</td><td>可选。将外部阴影（outset）改为内部阴影</td></tr></tbody></table><p>注意：</p><ol><li>默认的是外阴影（outset），但是不可以写这个单词，否则导致阴影无效</li><li>盒子阴影不占用空间，不会影响其它盒子的排列</li></ol><h2 id="18-文字阴影"><a href="#18-文字阴影" class="headerlink" title="18. 文字阴影"></a>18. 文字阴影</h2><p>在 CSS3 中，可以使用 text-shadow 属性将阴影应用于文本。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-shadow</span>: h-shadow v-shadow blur color;</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>h-shadow</td><td>必需。水平阴影的位置。允许负值</td></tr><tr><td>v-shadow</td><td>必需。垂直阴影的位置。允许负值</td></tr><tr><td>blur</td><td>可选。模糊距离</td></tr><tr><td>color</td><td>可选。阴影的颜色</td></tr></tbody></table><h2 id="19-浮动"><a href="#19-浮动" class="headerlink" title="19. 浮动"></a>19. 浮动</h2><h3 id="19-1-传统网页布局的三种方式"><a href="#19-1-传统网页布局的三种方式" class="headerlink" title="19.1. 传统网页布局的三种方式"></a>19.1. 传统网页布局的三种方式</h3><p>网页布局的本质——用 CSS 来摆放盒子。把盒子摆到相应位置。</p><p>CSS 提供了三种传统布局方式：</p><ul><li>普通流（标准流）</li><li>浮动</li><li>定位</li></ul><h3 id="19-2-标准流（普通流-文档流）"><a href="#19-2-标准流（普通流-文档流）" class="headerlink" title="19.2. 标准流（普通流/文档流）"></a>19.2. 标准流（普通流/文档流）</h3><p>所谓的标准流：就是标签按照规定好的默认方式排列</p><ol><li>块级元素会独占一行，从上向下顺序排列<ol><li>常用元素：div、hr、p、h1~h6、ul、ol、dl、form、table等</li></ol></li><li>行内元素会按照顺序，从左到右顺序排列，碰到父元素边缘则自动换行<ol><li>常用元素：span、a、i、em等</li></ol></li></ol><p>标准流是最基本的布局方式</p><h3 id="19-3-为什么需要浮动？"><a href="#19-3-为什么需要浮动？" class="headerlink" title="19.3. 为什么需要浮动？"></a>19.3. 为什么需要浮动？</h3><p>有很多的布局效果，标准流没有办法完成，此时就可以利用浮动元素完成布局。因为浮动元素可以改变元素标签的默认排列方式。</p><p>浮动最典型的应用：可以让多个块级元素一行内排列显示。</p><p><strong>网页布局第一准则：多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动。</strong></p><h3 id="19-4-什么是浮动？"><a href="#19-4-什么是浮动？" class="headerlink" title="19.4. 什么是浮动？"></a>19.4. 什么是浮动？</h3><p>float 属性用于创建浮动框，将其移动到一边，直到左边缘与右边缘触及包含块或另一个浮动框的边缘</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123;</span><br><span class="line"><span class="attribute">float</span>: 属性值；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>元素不浮动（默认值）</td></tr><tr><td>left</td><td>元素向左浮动</td></tr><tr><td>right</td><td>元素向右浮动</td></tr></tbody></table><h3 id="19-5-浮动特性"><a href="#19-5-浮动特性" class="headerlink" title="19.5. 浮动特性"></a>19.5. 浮动特性</h3><p>加了浮动之后的元素，会具有很多特性。</p><h4 id="19-5-1-浮动元素会脱离标准流（脱标）"><a href="#19-5-1-浮动元素会脱离标准流（脱标）" class="headerlink" title="19.5.1. 浮动元素会脱离标准流（脱标）"></a>19.5.1. 浮动元素会脱离标准流（脱标）</h4><p>设置了浮动（float）的元素最重要特性：</p><ol><li>脱离标准普通流的控制（浮）移动到指定位置（动）（俗称<strong>脱标</strong>）</li><li>浮动的盒子<strong>不再保留原先的位置</strong></li></ol><h4 id="19-5-2-浮动元素会一行内显示并且元素顶部对齐"><a href="#19-5-2-浮动元素会一行内显示并且元素顶部对齐" class="headerlink" title="19.5.2. 浮动元素会一行内显示并且元素顶部对齐"></a>19.5.2. 浮动元素会一行内显示并且元素顶部对齐</h4><p>​    注意：浮动的元素是互相贴靠在一起的（不会有缝隙），如果父级宽度装不下这些浮动的盒子，多出的盒子会另起一行对齐。</p><h4 id="19-5-3-浮动元素会具有行内块元素的特性"><a href="#19-5-3-浮动元素会具有行内块元素的特性" class="headerlink" title="19.5.3. 浮动元素会具有行内块元素的特性"></a>19.5.3. 浮动元素会具有行内块元素的特性</h4><p>任何元素都可以浮动。不管原来是什么模式的元素，添加浮动之后具有行内块元素相似的特性</p><ul><li>如果块级盒子没有设置宽度，默认宽度和父级一样宽，但是添加浮动后，它的大小根据内容来决定</li><li>浮动的盒子中间没有缝隙，是紧挨在一起的</li><li>行内元素同理</li></ul><h3 id="19-6-浮动元素经常和标准流父级搭配使用"><a href="#19-6-浮动元素经常和标准流父级搭配使用" class="headerlink" title="19.6. 浮动元素经常和标准流父级搭配使用"></a>19.6. 浮动元素经常和标准流父级搭配使用</h3><p>为了约束浮动元素位置，我们网页布局一般采取的策略是：</p><p><strong>先用标准的父元素排列上下位置，之后内部子元素采取浮动排列左右位置。符合网页布局第一准则</strong></p><p>网页布局第二准则：先设置何盒子的大小，之后设置盒子的位置</p><h2 id="20-常见网页布局"><a href="#20-常见网页布局" class="headerlink" title="20. 常见网页布局"></a>20. 常见网页布局</h2><h3 id="20-1-常见网页布局"><a href="#20-1-常见网页布局" class="headerlink" title="20.1. 常见网页布局"></a>20.1. 常见网页布局</h3><h3 id="20-2-浮动布局注意点"><a href="#20-2-浮动布局注意点" class="headerlink" title="20.2. 浮动布局注意点"></a>20.2. 浮动布局注意点</h3><ol><li><strong>浮动和标准流的父盒子搭配</strong><ol><li><strong>先用标准流的父元素排列上下位置，之后内部子元素采取浮动排列左右位置</strong></li></ol></li><li><strong>一个元素浮动了，理论上其余的兄弟也要浮动</strong><ol><li>一个盒子里面有多个子盒子，如果其中一个盒子浮动了，那么其他兄弟也应该浮动，以防止引起问题。</li><li><strong>浮动的盒子只会影响浮动盒子后面的标准流，不会影响前面的标准流</strong></li></ol></li></ol><h3 id="20-3-清除浮动"><a href="#20-3-清除浮动" class="headerlink" title="20.3. 清除浮动"></a>20.3. 清除浮动</h3><h4 id="20-3-1-为什么清除浮动"><a href="#20-3-1-为什么清除浮动" class="headerlink" title="20.3.1. 为什么清除浮动"></a>20.3.1. 为什么清除浮动</h4><p>由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占位置，最后父盒子高度为0时，就会影响下面的标准流盒子</p><ul><li>由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响</li></ul><h4 id="20-3-2-清除浮动本质："><a href="#20-3-2-清除浮动本质：" class="headerlink" title="20.3.2. 清除浮动本质："></a>20.3.2. 清除浮动本质：</h4><ul><li>清除浮动的本质时清除浮动元素造成的影响</li><li>如果父盒子本身有高度，则不需要清除浮动</li><li><strong>清除浮动之后，父级就会根据浮动的子盒子自动检测高度。父级有了高度，就不会影响下面的标准流了</strong></li></ul><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123;</span><br><span class="line"><span class="attribute">clear</span>: 属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>left</td><td>不允许左侧有浮动元素（清除左侧浮动的影响）</td></tr><tr><td>right</td><td>不允许右侧有浮动元素（清除右侧浮动的影响）</td></tr><tr><td>both</td><td>同时清除左右两侧浮动的影响</td></tr></tbody></table><p><strong>实际工作中，只用 clear: both;</strong></p><p><strong>清除浮动的策略：闭合浮动</strong>（只让浮动在父盒子内部影响，不影响父盒子外面的其它盒子）</p><h4 id="20-3-3-清除浮动方法："><a href="#20-3-3-清除浮动方法：" class="headerlink" title="20.3.3. 清除浮动方法："></a>20.3.3. 清除浮动方法：</h4><ol><li>额外标签法 也称为隔墙法，是 W3C 推荐的做法</li><li><strong>父级添加 overflow 属性</strong></li><li><strong>父级添加 after 伪元素</strong></li><li><strong>父亲添加双伪元素</strong></li></ol><h4 id="20-3-4-清除浮动——额外标签法"><a href="#20-3-4-清除浮动——额外标签法" class="headerlink" title="20.3.4. 清除浮动——额外标签法"></a>20.3.4. 清除浮动——额外标签法</h4><p><strong>额外标签法也称为隔墙法</strong>，是 W3C 推荐的做法</p><p>额外标签法会在浮动元素末尾添加一个空的标签。例如 &lt;div style=”clear: both”&gt;&lt;/div&gt;，或者其它标签（如&lt;br /&gt;等）</p><ul><li>优点：通俗易懂，书写方便</li><li>缺点：添加许多无意义的标签，结构化较差</li></ul><p><strong>注意：要求新的空标签必须是块级元素</strong></p><h4 id="20-3-5-清除浮动——父级添加-overflow"><a href="#20-3-5-清除浮动——父级添加-overflow" class="headerlink" title="20.3.5. 清除浮动——父级添加 overflow"></a>20.3.5. 清除浮动——父级添加 overflow</h4><p>可以给父级添加 overflow 属性，将其属性值设置为 hidden、auto 或 scroll</p><ul><li>优点：代码简洁</li><li>缺点：无法显示溢出的部分</li></ul><h4 id="20-3-6-清除浮动——-after-伪元素法"><a href="#20-3-6-清除浮动——-after-伪元素法" class="headerlink" title="20.3.6. 清除浮动——:after 伪元素法"></a>20.3.6. 清除浮动——:after 伪元素法</h4><p>:after 方式是额外标签法的升级版。也是给父元素添加</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span>:after &#123;</span><br><span class="line">content: <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">clear</span>: both;</span><br><span class="line"><span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;  <span class="comment">/* IE6、7专有 */</span></span><br><span class="line">*zoom: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>优点：没有增加标签，结构更简单</li><li>缺点：照顾低版本浏览器</li><li>代表网站：百度、淘宝、网易等</li></ul><h4 id="20-3-7-清除浮动——双伪元素法"><a href="#20-3-7-清除浮动——双伪元素法" class="headerlink" title="20.3.7. 清除浮动——双伪元素法"></a>20.3.7. 清除浮动——双伪元素法</h4><p>也是给父元素添加</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span>:before, .clearfix:after &#123;</span><br><span class="line">    content: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span>:after &#123;</span><br><span class="line">    clear: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">    *zoom: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>优点：代码更简洁</li><li>缺点：照顾低版本浏览器</li><li>代表网站：小米、腾讯等</li></ul><h3 id="20-4-清除浮动总结"><a href="#20-4-清除浮动总结" class="headerlink" title="20.4. 清除浮动总结"></a>20.4. 清除浮动总结</h3><h4 id="20-4-1-为什么要清除浮动？"><a href="#20-4-1-为什么要清除浮动？" class="headerlink" title="20.4.1. 为什么要清除浮动？"></a>20.4.1. 为什么要清除浮动？</h4><ol><li>父级没高度</li><li>子盒子浮动</li><li>影响下面布局</li></ol><table><thead><tr><th>清除浮动的方式</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>额外标签法（隔墙法）</td><td>通俗易懂，书写方便</td><td>添加许多无意义的标签，结构化较差</td></tr><tr><td>父级 overflow: hidden;</td><td>书写简单</td><td>溢出隐藏</td></tr><tr><td>父级 :after 伪元素</td><td>结构语义化正确</td><td>由于IE6/7不支持 :after，兼容性检查</td></tr><tr><td>父级双伪元素</td><td>结构语义化正确</td><td>由于IE6/7不支持 :after，兼容性检查</td></tr></tbody></table><h2 id="21-PS切图"><a href="#21-PS切图" class="headerlink" title="21.PS切图"></a>21.PS切图</h2><h3 id="21-1-常见的图片格式"><a href="#21-1-常见的图片格式" class="headerlink" title="21.1. 常见的图片格式"></a>21.1. 常见的图片格式</h3><ol><li>jpg图像格式：JPEG（JPG）对色彩的信息保存较好，高清，颜色较多，<strong>产品的图片经常用 jpg 格式</strong></li><li>gif图像格式：GIF 格式最多只能存储256色，所以通常用来显示简单图形和字体，但是可以保存透明背景和动画效果，<strong>实际经常用于一些图片小动画效果。</strong></li><li>png图像格式是一种新兴的网络图形格式，结合了 GIF 和 JPEG 的优点，具有存储形式丰富的特点，能够保持透明背景。<strong>如果想要切成背景透明的图片，选择 png 格式</strong></li><li>PSD 图像格式是 PS 的转义格式，里面可以存放图层、通道、遮罩等多种设计稿。<strong>对于前端人员，最大的优点，可以直接从上面复制文字，测量大小和距离。</strong></li></ol><h3 id="21-2-图层切图"><a href="#21-2-图层切图" class="headerlink" title="21.2. 图层切图"></a>21.2. 图层切图</h3><p>最简单的方法：右击图层 → 快速导出为 PNG。</p><p>但是很多情况下，我们需要合并图层再导出：</p><ol><li>选中需要的图层：图层菜单 → 合并图层（Ctrl + E）</li><li>右击 → 快速导出为 PNG</li></ol><h3 id="21-3-切片切图"><a href="#21-3-切片切图" class="headerlink" title="21.3. 切片切图"></a>21.3. 切片切图</h3><ol><li>利用切片选中图片<ol><li>利用切片工具手动划出</li></ol></li><li>导出选中的图片<ol><li>文件菜单 → 导出 → 存储为web设备所用格式 → 选择图片格式 → 存储</li></ol></li></ol><h3 id="21-4-PS插件切图"><a href="#21-4-PS插件切图" class="headerlink" title="21.4. PS插件切图"></a>21.4. PS插件切图</h3><p>Cutterman 是一款运行在 PS 中的软件，能够自动将你需要的图层进行输出，以替代传统的手工“导出 web 所用格式”以及使用切片工具进行挨个切图的繁琐过程。</p><h2 id="22-学成在线案例"><a href="#22-学成在线案例" class="headerlink" title="22. 学成在线案例"></a>22. 学成在线案例</h2><h3 id="22-1-准备素材工具"><a href="#22-1-准备素材工具" class="headerlink" title="22.1. 准备素材工具"></a>22.1. 准备素材工具</h3><ol><li>学成在线 PSD 源文件</li><li>开发工具 = PS（切图）/ cutterman插件 + vscode（代码）+ Chrome（测试）</li></ol><h3 id="22-2-案例准备工作"><a href="#22-2-案例准备工作" class="headerlink" title="22.2. 案例准备工作"></a>22.2. 案例准备工作</h3><p>采取结构样式相分离</p><ol><li>创建 study 目录文件夹（用于存放相关内容）</li><li>用 vscode 打开目录文件夹</li><li>study 目录内新建 images 文件夹，用于保存图片</li><li>新建首页文件 index.html</li><li>新建 style.css 样式文件。</li><li>将样式引入到 HTML 页面文件中</li><li>样式表写入清除内外边距样式，检测样式表是否引入成功</li></ol><h3 id="22-3-CSS属性书写顺序"><a href="#22-3-CSS属性书写顺序" class="headerlink" title="22.3. CSS属性书写顺序"></a>22.3. CSS属性书写顺序</h3><p>建议遵循以下顺序：</p><ol><li>布局定位属性：display/position/float/clear/visibility/overflow（建议display第一个写，毕竟关系到模式）</li><li>自身属性：width/height/margin/padding/border/background</li><li>文本属性：color/font/text-decoration/text-align/vertical-align/white-space/break-word</li><li>其他属性（CSS3）：content/cursor/border-radius/box-shadow/text-shadow/background:linear-gradient…</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, <span class="string">&quot;Helvetica Neue&quot;</span>, Helvetica, sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="22-4-页面布局整体思路"><a href="#22-4-页面布局整体思路" class="headerlink" title="22.4. 页面布局整体思路"></a>22.4. 页面布局整体思路</h3><p>为了提高网页制作的效率，布局时通常有以下的整体思路：</p><ol><li>必须确认页面的版心（可视区）。</li><li>分析页面中的行模块，以及每个行模块中的列模块。页面布局第一准则。</li><li>一行中的列模块经常浮动布局，先确认每个列的大小，之后确认列的位置。页面布局第二准则。</li><li>制作HTML结构。我们还是遵循，现有结构，后有样式的原则。结构最重要。</li><li>先清楚布局结构，再写代码。</li></ol><h3 id="22-5-确认版心"><a href="#22-5-确认版心" class="headerlink" title="22.5. 确认版心"></a>22.5. 确认版心</h3><p>这个页面的版心是 1200px，每个版心都要水平居中对齐，可以定义版心为公共类</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line"><span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="22-6-头部制作"><a href="#22-6-头部制作" class="headerlink" title="22.6. 头部制作"></a>22.6. 头部制作</h3><ul><li>1号是版心盒子 header 1200*42 的盒子水平居中对齐，上下给一个 margin 值就可以</li><li>版心盒子里面包含2号盒子 logo</li><li>版心盒子里面包含3号盒子 nav 导航栏</li><li>版心盒子里面包含4号盒子 search 搜索栏</li><li>版心盒子里面包含5号盒子 user 个人信息</li><li>注意：要求里面的4个盒子必须都是浮动</li></ul><p>导航栏注意点：</p><p>实际开发中，我们不会直接用链接a，而是用li包含链接（li + a）的做法</p><ol><li>li + a 语义更清晰，一看这就是有条理的列表项内容</li><li>如果直接用a，搜索引擎容易辨别为有堆砌关键字嫌疑（故意堆砌关键字容易被搜索引擎降权的风险），从而影响网站排名。</li></ol><p>注意：</p><ol><li>让导航栏一行显示，给 li 加浮动，因为 li 是块级元素，需要一行显示</li><li>nav 导航栏可以不给宽度，将来可以继续添加其余文字</li><li>因为导航栏里面的文字不一样多，所以最好给链接 a 左右 padding 撑开盒子，而不是指定宽度 </li></ol><h3 id="22-7-banner-制作"><a href="#22-7-banner-制作" class="headerlink" title="22.7. banner 制作"></a>22.7. banner 制作</h3><ul><li>1号盒子是通栏的大盒子，不给宽度，给高度，给一个背景颜色</li><li>2号盒子是版心，要水平居中对齐</li><li>3号盒子版心内，左对齐 subnav 侧导航栏</li><li>4号盒子版心内，右对齐 course 课程</li></ul><h3 id="22-8-精品推荐小模块"><a href="#22-8-精品推荐小模块" class="headerlink" title="22.8. 精品推荐小模块"></a>22.8. 精品推荐小模块</h3><ul><li>大盒子水平居中 goods 精品，注意此处有盒子阴影</li><li>1号盒子是标题 H3 左侧浮动</li><li>2号盒子里面放链接左侧浮动，goods-item 距离可以控制链接的左右外边距（注意行内元素只给左右内外边距）</li><li>3号盒子右浮动 mod 修改</li></ul><h3 id="22-9-精品推荐大模块"><a href="#22-9-精品推荐大模块" class="headerlink" title="22.9. 精品推荐大模块"></a>22.9. 精品推荐大模块</h3><ul><li>1号盒子为最大的盒子，box 版心水平居中对齐</li><li>2号盒子为上面部分，box-hd –里面左侧标题 H3 左浮动，右侧链接 a 右浮动</li><li>3号盒子为底下部分，box-bd –里面是无序列表，有10个小 li 组成</li><li>小 li 外边距的问题，这里有个小技巧：给 box-bd 宽度为1215 就可以一行装开5个 li</li></ul><h3 id="22-10-底部模块"><a href="#22-10-底部模块" class="headerlink" title="22.10. 底部模块"></a>22.10. 底部模块</h3><ul><li>1号盒子是通栏大盒子，底部 footer 给高度，底色是白色</li><li>2号盒子版心水平居中</li><li>3号盒子版权 copyright 左对齐</li><li>4号盒子链接组 links 右对齐</li></ul><h2 id="23-定位"><a href="#23-定位" class="headerlink" title="23. 定位"></a>23. 定位</h2><h3 id="23-1-为什么需要定位"><a href="#23-1-为什么需要定位" class="headerlink" title="23.1. 为什么需要定位"></a>23.1. 为什么需要定位</h3><ol><li>浮动可以让多个块级盒子一行没有缝隙排列显示，经常用于横向排列盒子。</li><li>定位则是可以让盒子自由的在某个盒子内移动位置或者固定屏幕中某个位置，并且可以压住其他盒子</li></ol><h3 id="23-2-定位组成"><a href="#23-2-定位组成" class="headerlink" title="23.2. 定位组成"></a>23.2. 定位组成</h3><p>定位：将盒子定在某一位置，所以定位也是在摆放盒子，按照定位的方式移动盒子。</p><p>定位 = 定位模式 + 边偏移</p><p>定位模式用于指定一个元素在文档中的定位方式。边偏移则决定了该元素的最终位置</p><h4 id="23-2-1-定位模式"><a href="#23-2-1-定位模式" class="headerlink" title="23.2.1. 定位模式"></a>23.2.1. 定位模式</h4><p>定位模式决定元素的定位方式，它通过 CSS 的 position 属性来设置，其值可以分为四个：</p><table><thead><tr><th>值</th><th>语义</th></tr></thead><tbody><tr><td>static</td><td>静态定位</td></tr><tr><td>relative</td><td>相对定位</td></tr><tr><td>absolute</td><td>绝对定位</td></tr><tr><td>fixed</td><td>固定定位</td></tr></tbody></table><h4 id="23-2-2-边偏移"><a href="#23-2-2-边偏移" class="headerlink" title="23.2.2. 边偏移"></a>23.2.2. 边偏移</h4><p>边偏移就是定位的盒子移动到最终位置。有 top、bottom、left 和 right 4个属性</p><table><thead><tr><th>边偏移属性</th><th>示例</th><th>描述</th></tr></thead><tbody><tr><td>top</td><td>top: 80px;</td><td>顶部偏移量，定义元素相对于其父元素上边线的距离</td></tr><tr><td>bottom</td><td>bottom: 80px</td><td>底部偏移量，定义元素相对于其父元素下边线的距离</td></tr><tr><td>left</td><td>left: 80px;</td><td>左侧偏移量，定义元素相对于其父元素左边线的距离</td></tr><tr><td>right</td><td>right: 80px;</td><td>右侧偏移量，定义元素相对于其父元素右边线的距离</td></tr></tbody></table><h3 id="23-3-静态定位-static"><a href="#23-3-静态定位-static" class="headerlink" title="23.3. 静态定位 static"></a>23.3. 静态定位 static</h3><p>静态定位是元素的默认定位方式，无定位的意思</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: static; &#125;</span><br></pre></td></tr></table></figure><ul><li>静态定位按照标准流特性摆放位置，它没有边偏移</li><li>静态布局在布局中很少用到</li></ul><h3 id="23-4-相对定位-relative"><a href="#23-4-相对定位-relative" class="headerlink" title="23.4. 相对定位 relative"></a>23.4. 相对定位 relative</h3><p>相对定位是元素在移动的时候，是相对于它原来的位置（自恋型）</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: relative; &#125;</span><br></pre></td></tr></table></figure><ol><li>它是相对于自己原来的位置来移动的（移动位置的时候参照点是自己原来的位置）</li><li>原来的标准流位置继续占有，后面的盒子仍然以标准流的方式对待它。（不脱标，继续保留原来位置）</li></ol><p>因此，相对定位并没有脱标。它最典型的应用是给绝对定位当爹</p><h3 id="23-5-绝对定位-absolute"><a href="#23-5-绝对定位-absolute" class="headerlink" title="23.5. 绝对定位 absolute"></a>23.5. 绝对定位 absolute</h3><p>绝对定位是元素在移动位置的时候，是相对于它祖先元素来说的（拼爹型）。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: absolute; &#125;</span><br></pre></td></tr></table></figure><p>绝对定位的特点：</p><ol><li>如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位（Document文档）</li><li>如果祖先元素有定位（相对、绝对、固定定位），则以最近一级的有定位祖先元素为参考点移动位置</li><li>绝对定位不再占有原先的位置（脱标） </li></ol><h3 id="23-6-子绝父相的由来"><a href="#23-6-子绝父相的由来" class="headerlink" title="23.6. 子绝父相的由来"></a>23.6. 子绝父相的由来</h3><p>子级是绝对定位的话，父级要用相对定位</p><ol><li>子级绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其它的兄弟盒子</li><li>父盒子需要加定位限制子盒子在父盒子内显示</li><li>父盒子布局时，需要占有位置，因此父亲只能是相对定位。</li></ol><p>这就是子绝父相的由来，所以相对定位经常用来作为绝对定位的父级。</p><p>总结：<strong>因为父级需要占有位置，因此是相对定位，子盒子不需要占有位置，则是绝对定位。</strong></p><p>当然，子绝父相不是永远不变的，如果父元素不需要占有位置，子绝父绝也会遇到</p><h3 id="23-7-固定定位-fixed"><a href="#23-7-固定定位-fixed" class="headerlink" title="23.7. 固定定位 fixed"></a>23.7. 固定定位 fixed</h3><p>固定定位是元素固定于浏览器可视区的位置。主要应用场景：可以在浏览器页面滚动时元素的位置不会改变。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: fixed; &#125;</span><br></pre></td></tr></table></figure><p>固定定位的特点：</p><ol><li>以浏览器的可视窗口为参照点移动元素、和父元素没有关系、不随滚动条滚动</li><li>固定定位不占有原先的位置</li></ol><p>固定定位也是脱标的，其实固定定位也可以看作是一种特殊的绝对定位</p><p><strong>固定定位小技巧：固定在版心右侧位置</strong></p><p>算法：</p><ol><li>让固定定位的盒子 left: 50%，走到浏览器可视区（也可以看做版心）的一半位置</li><li>让固定定位的盒子 margin-left：版心宽度的一半距离。多走版心宽度的一半位置</li></ol><h3 id="23-8-粘性定位-sticky"><a href="#23-8-粘性定位-sticky" class="headerlink" title="23.8. 粘性定位 sticky"></a>23.8. 粘性定位 sticky</h3><p>粘性定位可以被认为是相对定位和固定定位的混合。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: sticky; <span class="attribute">top</span>: <span class="number">10px</span>; &#125;</span><br></pre></td></tr></table></figure><p>粘性定位的特点：</p><ol><li>以浏览器的可视窗口为参照点移动元素（固定定位特点）</li><li>粘性定位占有原先的位置（相对定位特点）</li><li>必须添加 top、left、right、bottom 其中一个才有效</li></ol><p>跟页面滚动搭配使用。兼容性较差，IE不支持。</p><h3 id="23-9-定位总结"><a href="#23-9-定位总结" class="headerlink" title="23.9. 定位总结"></a>23.9. 定位总结</h3><table><thead><tr><th>定位模式</th><th>是否脱标</th><th>移动位置</th><th>是否常用</th></tr></thead><tbody><tr><td>static 静态定位</td><td>否</td><td>不能使用边偏移</td><td>很少</td></tr><tr><td>relative 相对定位</td><td>否（占有位置）</td><td>相对于自身位置移动</td><td>常用</td></tr><tr><td>absolute 绝对定位</td><td>是（不占有位置）</td><td>当有定位的父级</td><td>常用</td></tr><tr><td>fixed 固定定位</td><td>是（不占有位置）</td><td>浏览器可视区</td><td>常用</td></tr><tr><td>sticky 粘性定位</td><td>否（占有位置）</td><td>浏览器可视区</td><td>当前阶段少</td></tr></tbody></table><h3 id="23-10-定位叠放次序-z-index"><a href="#23-10-定位叠放次序-z-index" class="headerlink" title="23.10. 定位叠放次序 z-index"></a>23.10. 定位叠放次序 z-index</h3><p>在使用定位布局的时候，可能会出现盒子重叠的情况。此时，可以使用 z-index 来控制盒子的前后次序（z轴）</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">z-index</span>: <span class="number">1</span>; &#125;</span><br></pre></td></tr></table></figure><ul><li>数值可以是正整数、负整数或0，默认是 auto，数值越大，盒子越靠上</li><li>如果属性值相同，则按照书写顺序，后来居上</li><li>数字后面不能加单位</li><li>只有定位的盒子才有 z-index 属性</li></ul><h3 id="23-11-定位的拓展"><a href="#23-11-定位的拓展" class="headerlink" title="23.11. 定位的拓展"></a>23.11. 定位的拓展</h3><h4 id="23-11-1-绝对定位的盒子居中"><a href="#23-11-1-绝对定位的盒子居中" class="headerlink" title="23.11.1. 绝对定位的盒子居中"></a>23.11.1. 绝对定位的盒子居中</h4><p>加了绝对定位的盒子不能通过 margin: 0 auto; 水平居中，但是可以通过以下计算方法实现水平和垂直居中</p><ol><li>left: 50%; 让盒子的左侧移动到父级元素的水平中心位置</li><li>margin-left: -100px; 让盒子向左移动自身宽度的一半</li></ol><h4 id="23-11-2-定位特殊特性"><a href="#23-11-2-定位特殊特性" class="headerlink" title="23.11.2. 定位特殊特性"></a>23.11.2. 定位特殊特性</h4><p>绝对定位和固定定位也和浮动类似。</p><ol><li>行内元素添加绝对或者固定定位，可以设置高度和宽度</li><li>块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小</li></ol><h4 id="23-11-3-脱标的盒子不会触发外边距塌陷"><a href="#23-11-3-脱标的盒子不会触发外边距塌陷" class="headerlink" title="23.11.3. 脱标的盒子不会触发外边距塌陷"></a>23.11.3. 脱标的盒子不会触发外边距塌陷</h4><p>浮动元素、绝对定位（固定定位）元素都不会触发外边距合并的问题</p><h4 id="23-11-4-绝对定位（固定定位）会完全压住盒子"><a href="#23-11-4-绝对定位（固定定位）会完全压住盒子" class="headerlink" title="23.11.4. 绝对定位（固定定位）会完全压住盒子"></a>23.11.4. 绝对定位（固定定位）会完全压住盒子</h4><p>浮动元素不同，只会压住它下面标准流的盒子，但是不会压住下面标准流盒子里面的文字（图片）</p><p>但是绝对定位（固定定位）会压住下面标准流所有的内容</p><p>浮动之所以不会压住文字，因为浮动产生的目的最初是为了做文字环绕效果的。文字会围绕浮动元素    </p><h2 id="24-网页布局总结"><a href="#24-网页布局总结" class="headerlink" title="24. 网页布局总结"></a>24. 网页布局总结</h2><p>通过盒子模型，清除知道大部分 html 标签是一个盒子</p><p>通过 CSS 浮动、定位可以让每个盒子排列成为网页</p><p>一个完整的网页，是标准流，浮动，定位一起完成布局的，每个都有自己的专门用法</p><ol><li>标准流<ol><li>可以让盒子上下排列或者左右排列，垂直的块级盒子显示就用标准流布局</li></ol></li><li>浮动<ol><li>可以让多个块级元素一行显示或者左右对齐盒子，多个块级盒子水平显示就用浮动布局</li></ol></li><li>定位<ol><li>定位最大的特点是有层叠的概念，就是可以让多个盒子前后叠压来显示。如果元素自由在某个盒子内移动就用定位布局。</li></ol></li></ol><h2 id="25-元素的显示与隐藏"><a href="#25-元素的显示与隐藏" class="headerlink" title="25.元素的显示与隐藏"></a>25.元素的显示与隐藏</h2><p>本质：让一个元素在页面中隐藏或者显示出来</p><h3 id="25-1-display-显示隐藏"><a href="#25-1-display-显示隐藏" class="headerlink" title="25.1. display 显示隐藏"></a>25.1. display 显示隐藏</h3><p>display 属性用于设置一个元素应如何显示</p><ul><li>display: none; 隐藏对象</li><li>display: block; 除了转换为块级元素之外，同时还有显示元素的意思。</li></ul><p><strong>display 隐藏元素后，不再占有原来的位置</strong></p><p>搭配 JS 可以做很多的网页特效</p><h3 id="25-2-visibility-可见性"><a href="#25-2-visibility-可见性" class="headerlink" title="25.2. visibility 可见性"></a>25.2. visibility 可见性</h3><p>visibility 属性用于指定一个元素应可见还是隐藏</p><ul><li>visibility: visible; 元素可见</li><li>visibility: hidden; 元素隐藏</li></ul><p><strong>visibility 隐藏元素后，继续占有原来的位置</strong></p><h3 id="25-3-overflow-溢出"><a href="#25-3-overflow-溢出" class="headerlink" title="25.3. overflow 溢出"></a>25.3. overflow 溢出</h3><p>overflow 属性指定了内容溢出一个元素的框（超过其指定高度及宽度）时，会发生什么。</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>visible</td><td>不剪切内容也不添加滚动条</td></tr><tr><td>hidden</td><td>不显示超过对象尺寸的内容，超出的部分隐藏掉</td></tr><tr><td>scroll</td><td>不管超出内容否，总是显示滚动条</td></tr><tr><td>auto</td><td>超出自动显示滚动条，不超出不显示滚动条</td></tr></tbody></table><p>一般情况下，我们都不想让溢出的内容显示出来，因为溢出的部分会影响布局。</p><p>但是如果有定位的盒子，请慎用 overflow: hidden 因为它会隐藏多余的部分</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-CSS-简介&quot;&gt;&lt;a href=&quot;#1-CSS-简介&quot; class=&quot;headerlink&quot; title=&quot;1. CSS 简介&quot;&gt;&lt;/a&gt;1. CSS 简介&lt;/h2&gt;&lt;h3 id=&quot;1-1-HTML的局限性&quot;&gt;&lt;a href=&quot;#1-1-HTML的局限性&quot; class=&quot;headerlink&quot; title=&quot;1.1. HTML的局限性&quot;&gt;&lt;/a&gt;1.1. HTML的局限性&lt;/h3&gt;&lt;p&gt;HTML 只关注内容的语义。&lt;/p&gt;
&lt;h3 id=&quot;1-2-CSS-网页的美容师&quot;&gt;&lt;a href=&quot;#1-2-CSS-网页的美容师&quot; class=&quot;headerlink&quot; title=&quot;1.2. CSS-网页的美容师&quot;&gt;&lt;/a&gt;1.2. CSS-网页的美容师&lt;/h3&gt;&lt;p&gt;CSS 是层叠样式表（Cascading Style Sheets）的简称&lt;/p&gt;
&lt;p&gt;也称为 &lt;strong&gt;CSS 样式表&lt;/strong&gt; 或 &lt;strong&gt;级联样式表&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="CSS" scheme="http://www.milla.club/tags/CSS/"/>
    
    <category term="WEB" scheme="http://www.milla.club/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>HTML</title>
    <link href="http://www.milla.club/2019/06/12/HTML/"/>
    <id>http://www.milla.club/2019/06/12/HTML/</id>
    <published>2019-06-12T12:11:01.000Z</published>
    <updated>2020-04-21T06:13:06.195Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB-简介"><a href="#WEB-简介" class="headerlink" title="WEB 简介"></a>WEB 简介</h1><h2 id="1-网页"><a href="#1-网页" class="headerlink" title="1. 网页"></a>1. 网页</h2><h3 id="1-1-什么是网页"><a href="#1-1-什么是网页" class="headerlink" title="1.1. 什么是网页"></a>1.1. 什么是网页</h3><p>网站是指在因特网上根据一定的规则，使用 HTML 等制作的用于展示特定内容相关的网页集合。</p><p>网页时网站的一“页”，通常是 HTML 格式的文件，它要浏览器来阅读。</p><p>网页是构成网站的基本元素，它通常由图片、链接、文字、声音、视频等元素组成。通常我们看到的网页，常见以 .htm 或 .html 后缀结尾的文件，因此其俗称为 HTML 文件。</p><span id="more"></span><h3 id="1-2-什么是HTML"><a href="#1-2-什么是HTML" class="headerlink" title="1.2. 什么是HTML"></a>1.2. 什么是HTML</h3><p>HTML 指的是超文本标记语言（Hyper Text Markup Language），它是用来描述网页的一种语言。</p><p>HTML 不是一种编程语言，而是一种标记语言（markup language）。</p><p>标记语言是一套标记标签（markup tag）。</p><p>超文本：</p><ol><li>它可以加入图片、声音、动画、多媒体等内容（超越了文本限制）。</li><li>它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接（超级链接文本）。</li></ol><h3 id="1-3-网页的形成"><a href="#1-3-网页的形成" class="headerlink" title="1.3. 网页的形成"></a>1.3. 网页的形成</h3><p>网页是由网页元素组成的，这些元素是利用 html 标签描述出来，然后通过浏览器解析来显示给用户的。</p><p>前端代码  ——  浏览器显示代码（解析、渲染）  ——  生成web页面</p><h2 id="2-常用浏览器"><a href="#2-常用浏览器" class="headerlink" title="2. 常用浏览器"></a>2. 常用浏览器</h2><p>浏览器是网页显示、运行的平台。常用的浏览器由 IE、火狐（Firefox）、谷歌（Chrome）、Safari 和 Opera 等。</p><h4 id="浏览器内核"><a href="#浏览器内核" class="headerlink" title="浏览器内核"></a>浏览器内核</h4><p>浏览器内核（渲染引擎）：负责读取网页内容，整理讯息，计算网页的显示方式并显示页面。</p><table><thead><tr><th>浏览器</th><th>内核</th><th>备注</th></tr></thead><tbody><tr><td>IE</td><td>Trident</td><td>IE、猎豹安全、360极速浏览器、百度浏览器</td></tr><tr><td>Firefox</td><td>Gecko</td><td>火狐浏览器内核</td></tr><tr><td>Safari</td><td>WebKit</td><td>苹果浏览器内核</td></tr><tr><td>Chrome/Opera</td><td>Blink</td><td>chrome/opera 浏览器内核。Blink 其实是 WebKit 的分支</td></tr></tbody></table><h2 id="3-WEB标准"><a href="#3-WEB标准" class="headerlink" title="3. WEB标准"></a>3. WEB标准</h2><p>Web标准是由 W3C 组织和其他标准化组织制订的一系列标准的集合。W3C（万维网联盟）是国际最著名的标准化组织。</p><h3 id="3-1-为什么需要-Web-标准"><a href="#3-1-为什么需要-Web-标准" class="headerlink" title="3.1. 为什么需要 Web 标准"></a>3.1. 为什么需要 Web 标准</h3><p>浏览器不同，它们显示页面或者排版就有些许差异。</p><p>遵循Web标注除了可以让不同的开发人员写出的页面更标准、更统一外，还有以下优点：</p><ol><li>让 Web 的发展前景更广阔</li><li>内容能被更广泛的设备访问</li><li>更容易被搜索引擎搜索</li><li>降低网站的维护费用</li><li>使网站更易于维护</li><li>提高页面浏览速度</li></ol><h3 id="3-2-Web标准的构成"><a href="#3-2-Web标准的构成" class="headerlink" title="3.2. Web标准的构成"></a>3.2. Web标准的构成</h3><p>主要包括结构（Structure）、表现（Presentation）和行为（Behavior）三个方面</p><table><thead><tr><th>标准</th><th>说明</th></tr></thead><tbody><tr><td>结构（Structure）</td><td>结构用于对网页元素进行整理和分类，现阶段主要学的是 HTML</td></tr><tr><td>表现（Presentation）</td><td>表现用于设置网页元素的版式、颜色、大小等外观样式，主要是指 CSS</td></tr><tr><td>行为（Behavior）</td><td>行为是指网页模型的定义及交互的编写，现阶段主要学的是 JavaScript</td></tr></tbody></table><p>Web 标准提出的最佳体验方案：结构、样式、行为相分离。</p><p>简单理解：结构写到 HTML 文件中，表现写到 CSS 文件中，行为写到 JavaScript 文件中。</p><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="1-HTML语法规范"><a href="#1-HTML语法规范" class="headerlink" title="1. HTML语法规范"></a>1. HTML语法规范</h2><h3 id="1-1-基本语法概述"><a href="#1-1-基本语法概述" class="headerlink" title="1.1. 基本语法概述"></a>1.1. 基本语法概述</h3><ol><li>HTML 标签是由尖括号包围的关键词，例如 &lt;html&gt;。</li><li>HTML 标签通常是成对出现的，例如 &lt;html&gt; 和 &lt;/html&gt;，我们称为双标签。标签对中的第一个标签是开始标签，第二个标签是结束标签</li><li>有些特殊的标签必须是单个标签（极少情况），例如 &lt;br /&gt;，我们称之为单标签。</li></ol><h3 id="1-2-标签关系"><a href="#1-2-标签关系" class="headerlink" title="1.2. 标签关系"></a>1.2. 标签关系</h3><p>双标签关系可以分为两类：包含关系和并列关系</p><p>包含关系：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>并列关系：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-HTML基本结构标签"><a href="#2-HTML基本结构标签" class="headerlink" title="2. HTML基本结构标签"></a>2. HTML基本结构标签</h2><h3 id="2-1-第一个HTML网页"><a href="#2-1-第一个HTML网页" class="headerlink" title="2.1. 第一个HTML网页"></a>2.1. 第一个HTML网页</h3><p>每个网页都会有一个基本的结构标签（也称为骨架标签），页面内容也是在这些基本标签上书写。</p><p>HTML 页面也称为 HTML 文档</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>我是第一个页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">床前明月光，疑是地上霜。</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>标签名</th><th>定义</th><th>说明</th></tr></thead><tbody><tr><td>&lt;html&gt;&lt;/html&gt;</td><td>HTML 标签</td><td>页面中最大的标签，我们称为根标签</td></tr><tr><td>&lt;head&gt;&lt;/head&gt;</td><td>文档的头部</td><td>注意在 head 标签中我们必须要设置的标签是 title</td></tr><tr><td>&lt;title&gt;&lt;/title&gt;</td><td>文档的标题</td><td>让页面拥有一个属于自己的网页标题</td></tr><tr><td>&lt;body&gt;&lt;/body&gt;</td><td>文档的主体</td><td>元素包含文档的所有内容，页面内容基本都是放到 body 里面的</td></tr></tbody></table><p>HTML 文档的后缀必须是 .html 或 .htm，浏览器的作用是读取 HTML 文档，并以网页的形式显示它们。</p><h3 id="2-2-基本结构标签总结"><a href="#2-2-基本结构标签总结" class="headerlink" title="2.2. 基本结构标签总结"></a>2.2. 基本结构标签总结</h3><h2 id="3-网页开发工具"><a href="#3-网页开发工具" class="headerlink" title="3. 网页开发工具"></a>3. 网页开发工具</h2><h3 id="3-1-文档类型声明标签"><a href="#3-1-文档类型声明标签" class="headerlink" title="3.1. 文档类型声明标签"></a>3.1. 文档类型声明标签</h3><p>&lt;!DOCTYPE&gt; 文档类型声明，作用就是告诉浏览器使用哪种 HTML 版本来显示网页。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这句代码的意思是：当前页面采取的是 HTML5 版本来显示网页</p><p><strong>注意：</strong></p><ol><li>&lt;!DOCTYPE&gt; 声明位于文档中的最前面位置，处于 &lt;html&gt;标签之前</li><li>&lt;!DOCTYPE&gt; 不是一个 HTML 标签，它就是文档类型声明标签</li></ol><h3 id="3-2-lang-语言种类"><a href="#3-2-lang-语言种类" class="headerlink" title="3.2. lang 语言种类"></a>3.2. lang 语言种类</h3><p>用来定义当前文档显示的语言。</p><ol><li>en 定义语言为语言</li><li>zh-cn 定义语言文中文</li></ol><p>简单来说，定义 en 就是英文网页，定义 zh-cn 就是中文网页</p><p>其实对于文档显示来说，定义为 en 的文档也可以显示中文，定义为 zh-cn 的文档也可以显示英文</p><p>这个属性对浏览器和搜索引擎（百度、谷歌等）有作用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-字符集"><a href="#3-3-字符集" class="headerlink" title="3.3. 字符集"></a>3.3. 字符集</h3><p>字符集（Character set）是多个字符的集合。以便计算机能够识别和存储各类文字。</p><p>在&lt;head&gt;标签内，可以通过 &lt;meta&gt; 标签的 charset 属性来规定 HTML 文档应该使用哪种字符编码。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>charset 常用的值有：GB2312、BIG5、GBK 和 UTF-8，其中 UTF-8 也被称为万国码，基本包含了全世界所有国家需要用到的字符。</p><p><strong>注意：</strong></p><p>上面语法是必须要写的代码，否则可能引起乱码的情况。一般情况下，统一使用 “UTF-8” 编码，尽量统一写成标准的 “UTF-8”，不要写成 “utf8” 或 “UTF8”。</p><h2 id="4-HTML常用标签"><a href="#4-HTML常用标签" class="headerlink" title="4. HTML常用标签"></a>4. HTML常用标签</h2><h3 id="4-1-标签语义"><a href="#4-1-标签语义" class="headerlink" title="4.1. 标签语义"></a>4.1. 标签语义</h3><p>标签的含义</p><h3 id="4-2-标题标签-lt-h1-gt-lt-h6-gt"><a href="#4-2-标题标签-lt-h1-gt-lt-h6-gt" class="headerlink" title="4.2. 标题标签 &lt;h1&gt; - &lt;h6&gt;"></a>4.2. 标题标签 &lt;h1&gt; - &lt;h6&gt;</h3><p>为了使网页更具有语义化，我们经常会在页面中用到标题标签。HTML 提供了6个等级的网页标题，即 &lt;h1&gt; - &lt;h6&gt;。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>单词 head 的缩写，以为头部、标题。</p><p>标签语义：作为标题使用，并且依据重要性递减</p><p><strong>特点：</strong></p><ol><li>加了标题的文字会加粗，字号变大</li><li>一个标题独占一行</li></ol><h3 id="4-3-段落和换行标签"><a href="#4-3-段落和换行标签" class="headerlink" title="4.3. 段落和换行标签"></a>4.3. 段落和换行标签</h3><p>在网页中，要把文字有条理的显示出来，就需要将这些文字分段显示。在 HTML 标签中，&lt;p&gt; 标签用于定义段落，它可以将整个网页分为若干个段落。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>单词 paragraph 的缩写，意为段落。</p><p>标签语义：可以把 HTML 文档分割为若干个段落。</p><p><strong>特点：</strong></p><ol><li>文本在一个段落中会根据浏览器窗口的大小自动切换</li><li>段落和段落中间保有空隙</li></ol><p>在 HTML 中，一个段落中的文字从左到右会依次排列，直到浏览器窗口的右端，然后才自动换行。如果希望某段文本强制换行显示，就需要使用换行标签 &lt;br /&gt;。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>单词 break 的缩写，意为打断、换行</p><p>标签语义：强制换行</p><p><strong>特点：</strong></p><ol><li>&lt;br /&gt; 是单标签</li><li>&lt;br /&gt; 标签只是简单的开始新的一行，和段落不一样，段落之间会插入一些垂直的间距</li></ol><h3 id="4-4-文本格式化标签"><a href="#4-4-文本格式化标签" class="headerlink" title="4.4. 文本格式化标签"></a>4.4. 文本格式化标签</h3><p>在网页中，有时需要为文字设置<b>粗体</b>、<i>斜体</i>或<ins>下划线</ins>等效果，这时就需要用到HTML中的文本格式化标签，使文字以特殊的方式显示。</p><p>标签语义：突出重要性，比普通文字更重要。</p><table><thead><tr><th>语义</th><th>标签</th><th></th></tr></thead><tbody><tr><td>加粗</td><td>&lt;strong&gt;&lt;/strong&gt; 或者 &lt;b&gt;&lt;/b&gt;</td><td>更推荐使用 &lt;strong&gt; 标签加粗，语义更强烈</td></tr><tr><td>倾斜</td><td>&lt;em&gt;&lt;/em&gt; 或者 &lt;i&gt;&lt;/i&gt;</td><td>更推荐使用 &lt;em&gt; 标签加粗，语义更强烈</td></tr><tr><td>删除线</td><td>&lt;del&gt;&lt;/del&gt; 或者 &lt;s&gt;&lt;/s&gt;</td><td>更推荐使用 &lt;del&gt; 标签加粗，语义更强烈</td></tr><tr><td>下划线</td><td>&lt;ins&gt;&lt;/ins&gt; 或者 &lt;u&gt;&lt;/u&gt;</td><td>更推荐使用 &lt;ins&gt; 标签加粗，语义更强烈</td></tr></tbody></table><h3 id="4-5-lt-div-gt-lt-div-gt-和-lt-span-gt-lt-span-gt-标签"><a href="#4-5-lt-div-gt-lt-div-gt-和-lt-span-gt-lt-span-gt-标签" class="headerlink" title="4.5. &lt;div&gt;&lt;/div&gt; 和 &lt;span&gt;&lt;/span&gt; 标签"></a>4.5. &lt;div&gt;&lt;/div&gt; 和 &lt;span&gt;&lt;/span&gt; 标签</h3><p>&lt;div&gt; 和 &lt;span&gt; 是没有语义的，它们就是一个盒子，用来装内容的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>这是一个盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>这也是一个盒子<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>div 是 division 的缩写，表示分割、分区。</p><p>span 意为跨度、跨距。</p><p><strong>特点：</strong></p><ol><li>&lt;div&gt; 标签用来布局，但是在一行只能放一个 &lt;div&gt;。大盒子</li><li>&lt;span&gt; 标签用来布局，一行上可以多个 &lt;span&gt;。小盒子</li></ol><h3 id="4-6-图像标签和路径"><a href="#4-6-图像标签和路径" class="headerlink" title="4.6. 图像标签和路径"></a>4.6. 图像标签和路径</h3><h4 id="4-6-1-图像标签"><a href="#4-6-1-图像标签" class="headerlink" title="4.6.1. 图像标签"></a>4.6.1. 图像标签</h4><p>在HTML标签中，&lt;img&gt; 标签用于定义 HTML 页面中的图像。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图像URL&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>单词 image 的缩写，意为图像。</p><p>src 是 &lt;img&gt; 标签的必须属性，它用于指定图像文件的路径和文件名。</p><p>所谓属性：简单理解就是属于这个图像标签的特性。</p><p>图像标签的其他属性：</p><table><thead><tr><th>属性</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>图片路径</td><td>必须属性</td></tr><tr><td>alt</td><td>文本</td><td>替换文本。图像不能显示的文字</td></tr><tr><td>title</td><td>文本</td><td>提示文本。鼠标放到图像上，显示的文字</td></tr><tr><td>width</td><td>像素</td><td>设置图像的宽度</td></tr><tr><td>height</td><td>像素</td><td>设置图像的高度</td></tr><tr><td>border</td><td>像素</td><td>设置图像的边框粗细</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>图像<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;imgs/img2.jpg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>alt 替换文本 图像显示不出来文字替换<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/img2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;美女&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>title 提示文本 图标放到图片上，提示的文字<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;imgs/img2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;美女&quot;</span> <span class="attr">title</span>=<span class="string">&quot;美女西施&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>width 设定宽度<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;imgs/img2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;美女&quot;</span> <span class="attr">title</span>=<span class="string">&quot;美女西施&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>height 设定高度<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;imgs/img2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;美女&quot;</span> <span class="attr">title</span>=<span class="string">&quot;美女西施&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>height 设定边框<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;imgs/img2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;美女&quot;</span> <span class="attr">title</span>=<span class="string">&quot;美女西施&quot;</span> <span class="attr">border</span>=<span class="string">&quot;15&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>图像标签属性注意点：</strong></p><ol><li>图像标签可以拥有多个属性，必须写在标签名的后面。</li><li>属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</li><li>属性采取键值对形式，即 key = “value” 的格式，属性 = “属性值”。</li></ol><h4 id="4-6-2-路径"><a href="#4-6-2-路径" class="headerlink" title="4.6.2. 路径"></a>4.6.2. 路径</h4><p><strong>目录文件夹和根目录：</strong></p><ul><li><p>实际工作中，文件不能随便乱放，否则用起来很难快速找到它们，因此需要一个文件夹来管理。</p></li><li><p>目录文件夹：就是普通文件夹，里面只不过存放了页面所需要的相关素材，比如 html 文件、图片等。</p></li><li><p>根目录：打开目录文件夹的第一次就是根目录</p></li><li><p>页面中的图片会非常多，通常我们会新建一个文件夹来存放这些图像文件（images），这时再查找图像，就需要采取“路径”的方式来指定图像文件的位置。</p></li></ul><p><strong>路径可以分为：</strong></p><ol><li>相对路径</li><li>绝对路径</li></ol><p><strong>相对路径：</strong>以引用文件所在位置为参考基础，而建立出的目录路径。</p><table><thead><tr><th>相对路径分类</th><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>同一级路径</td><td></td><td>图像文件位于HTML文件的同一级 如&lt;img src=”baidu.gif” /&gt;</td></tr><tr><td>下一级路径</td><td>/</td><td>图像文件位于HTML文件的下一级 如&lt;img src=”images/baidu.gif” /&gt;</td></tr><tr><td>上一级路径</td><td>../</td><td>图像文件位于HTML文件的上一级 如&lt;img src=”../baidu.gif” /&gt;</td></tr></tbody></table><p><strong>绝对路径：</strong>是指目录下的绝对位置，直接到达目标位置，通常是从盘符开始的路径。</p><h3 id="4-7-超链接标签"><a href="#4-7-超链接标签" class="headerlink" title="4.7. 超链接标签"></a>4.7. 超链接标签</h3><p>在 HTML 标签中，&lt;a&gt; 标签用于定义超链接，作用是从一个页面链接到另一个页面</p><p>链接的语法格式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;跳转目标&quot;</span> target=<span class="string">&quot;目标窗口的弹出方式&quot;</span>&gt;文本或图像&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>单词 anchor 的缩写，意为：锚</p><p>两个属性的作用如下：</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>href</td><td>用于指定链接目标的地址，（必须属性）当为标签应用 href 属性时，它就具有了超链接的功能</td></tr><tr><td>target</td><td>用于指定链接页面的打开方式，其中 _self 为默认值，_blank 为在新窗口中打开方式</td></tr></tbody></table><p>链接分类：</p><ol><li>外部链接，例如 <code>&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;</code></li><li>内部链接，网站内部页面之间的相互链接，直接链接内部页面名称即可，例如 <code>&lt;a href=&quot;index.html&quot;&gt;首页&lt;/a&gt;</code></li><li>空链接：如果当时没有确定链接目标时，<code>&lt;a href=&quot;#&quot;&gt;首页&lt;a&gt;</code> (点击链接，页面默认上滚到页的顶部， 但可以加上 onclick=”return false”，防止上滚到页的顶部。) <code>&lt;a href=&quot;javascript: void(0);&quot;&gt;test&lt;/a&gt;</code> <code>&lt;a href=&quot;javascript:;&quot;&gt;test&lt;/a&gt;</code> 死链接，指向空事件</li><li>下载链接：如果 href 里面地址是一个文件或者压缩包，会下载这个文件</li><li>网页元素链接：在网页中的各种网页元素，如文本、图像、表格、音频、视频等都可以添加超链接</li><li>锚点链接：点击链接，可以快速定位到页面中的某个位置<ul><li>在链接文本的 href 属性中，设置属性值为 #名字 的形式，如 <code>&lt;a href=&quot;#two&quot;&gt;第2集&lt;/a&gt;</code></li><li>找到目标位置标签，里面添加一个 id属性 = 刚才的名字，如 <code>&lt;h3 id=&quot;two&quot;&gt;第2集介绍&lt;/h3&gt;</code></li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>1.外部链接<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.qq.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>tencent<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--target 打开窗口的方式，默认的值是_self，当前页面打开页面；_blank，新窗口打开页面--&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>2.内部链接：网站内部页面之间相互链接<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;07_图像标签.html&quot;</span>&gt;</span>图像标签<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>3.空链接：#<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>空链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>4.下载链接：地址链接是文件 .exe 或者是 zip 等压缩包<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;imgs/img2.rar&quot;</span>&gt;</span>下载文件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>5.网页元素链接<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;imgs/img2.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-HTML中的注释和特殊字符"><a href="#5-HTML中的注释和特殊字符" class="headerlink" title="5. HTML中的注释和特殊字符"></a>5. HTML中的注释和特殊字符</h2><h3 id="5-1-注释"><a href="#5-1-注释" class="headerlink" title="5.1. 注释"></a>5.1. 注释</h3><p>如果需要在 HTML 文档中添加一些便于阅读和理解但又不需要显示的注释文字，就需要使用注释标签。</p><p>HTML 的注释以 <code>&lt;!--</code> 开头，以 <code>--&gt;</code> 结束。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--我是一个注释--&gt;</span>  <span class="comment">&lt;!--快捷键：ctrl + / --&gt;</span></span><br></pre></td></tr></table></figure><p>添加注释是为了更好的解释代码的功能，便于相关开发人员理解和阅读代码，程序是不会执行注释内容的。</p><h3 id="5-2-特殊字符"><a href="#5-2-特殊字符" class="headerlink" title="5.2. 特殊字符"></a>5.2. 特殊字符</h3><p>在 HTML 页面中，一些特殊的符号很难或者不方便直接使用，此时我们就可以使用下面的字符来替代。</p><table><thead><tr><th>特殊字符</th><th>描述</th><th>字符的代码</th></tr></thead><tbody><tr><td></td><td>空格符</td><td><code>&amp;nbsp;</code></td></tr><tr><td>&lt;</td><td>小于号</td><td><code>&amp;lt;</code></td></tr><tr><td>&gt;</td><td>大于号</td><td><code>&amp;gt;</code></td></tr><tr><td>&amp;</td><td>和号</td><td><code>&amp;amp;</code></td></tr><tr><td>￥</td><td>人民币</td><td><code>&amp;yen;</code></td></tr><tr><td>©</td><td>版权</td><td><code>&amp;copy;</code></td></tr><tr><td>®</td><td>注册商标</td><td><code>&amp;reg;</code></td></tr><tr><td>°</td><td>摄氏度</td><td><code>&amp;deg;</code></td></tr><tr><td>±</td><td>正负号</td><td><code>&amp;plusmn;</code></td></tr><tr><td>×</td><td>乘号</td><td><code>&amp;times;</code></td></tr><tr><td>÷</td><td>除号</td><td><code>&amp;divide;</code></td></tr><tr><td>²</td><td>平方2（上标2）</td><td><code>&amp;sup2;</code></td></tr><tr><td>³</td><td>立方3（上标3）</td><td><code>&amp;sup3;</code></td></tr></tbody></table><h2 id="6-表格标签"><a href="#6-表格标签" class="headerlink" title="6. 表格标签"></a>6. 表格标签</h2><h3 id="6-1-表格的主要作用"><a href="#6-1-表格的主要作用" class="headerlink" title="6.1. 表格的主要作用"></a>6.1. 表格的主要作用</h3><p>表格主要用来显示、展示数据，因为它可以让数据显示的非常的规整，可读性非常好。特别是后台展示数据的时候，能够熟练运用表格就显得很重要。一个清爽简约的表格能够把繁杂的数据表现得很有条理。</p><p><strong>表格用来展示数据。</strong></p><h3 id="6-2-表格的基本语法"><a href="#6-2-表格的基本语法" class="headerlink" title="6.2. 表格的基本语法"></a>6.2. 表格的基本语法</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;table&gt;&lt;/table&gt;</code> 是用来定义表格的标签</li><li><code>&lt;tr&gt;&lt;/tr&gt;</code> 标签定义表格中的行，必须嵌套在 <code>&lt;table&gt;&lt;/table&gt;</code> 标签中</li><li><code>&lt;td&gt;&lt;/td&gt;</code>用于定义表格中的单元格，必须嵌套在 <code>&lt;tr&gt;&lt;/tr&gt;</code> 标签中</li><li>字母 td 指表格数据（table data），即数据单元格的内容</li></ol><h3 id="6-3-表头单元格标签"><a href="#6-3-表头单元格标签" class="headerlink" title="6.3. 表头单元格标签"></a>6.3. 表头单元格标签</h3><p>一般表头单元格位于表格的第一行或第一列，表头单元格里面的文字内容加粗居中显示。</p><p><code>&lt;th&gt;</code> 标签表示 HTML 表格的表头部分（table head的缩写）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-4-表格属性"><a href="#6-4-表格属性" class="headerlink" title="6.4. 表格属性"></a>6.4. 表格属性</h3><p>表格标签这部分属性我们实际开发中不常用，后面通过 CSS 来设置。</p><table><thead><tr><th>属性名</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>align</td><td>left、center、right</td><td>规定表格相对周围元素的对齐方式</td></tr><tr><td>border</td><td>1 或 “”</td><td>规定表格单元是否拥有边框，默认为 “”，表示没有边框</td></tr><tr><td>cellpadding</td><td>像素值</td><td>规定单元边沿与其内容之间的空白，默认1像素</td></tr><tr><td>cellspacing</td><td>像素值</td><td>规定单元格之间的空白，默认2像素</td></tr><tr><td>width</td><td>像素值或百分比</td><td>规定表格的宽度</td></tr></tbody></table><p>小说排名案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;10px&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;700px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>排名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>关键词<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>趋势<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>今日搜索<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>最近七日<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>相关链接<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>鬼吹灯<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>↓<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>345<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>盗墓笔记<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>↓<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>124<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>675423<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>↑<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>321<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>43242<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>三国演义<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>↑<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>342<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>43242<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>甄嬛传<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>↓<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>11<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>34325<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>老人与海<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>↑<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>32<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>231<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>7<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>水浒传<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>↑<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>213<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>43243<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-5-表格结构标签"><a href="#6-5-表格结构标签" class="headerlink" title="6.5. 表格结构标签"></a>6.5. 表格结构标签</h3><p>使用场景：因为表格可能很长，为了更好的表示表格的语义，可以将表格分割成表格头部和表格主体两大部分</p><p>在表格标签中，分别用：<code>&lt;thead&gt;</code> 标签 表格的头部区域、<code>&lt;tbody&gt;</code> 标签 表格的主体区域。</p><ol><li><code>&lt;thead&gt;&lt;/thead&gt;</code>：用于定义表格的头部。<code>&lt;thead&gt;</code> 内部必须拥有 <code>&lt;tr&gt;</code> 标签。一般是位于第一行。</li><li><code>&lt;tbody&gt;&lt;/tbody&gt;</code>：用于定义表格的主题，主要用于放数据本体</li><li>以上两个标签都是放在 <code>&lt;table&gt;&lt;/table&gt;</code> 标签中</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-6-合并单元格"><a href="#6-6-合并单元格" class="headerlink" title="6.6. 合并单元格"></a>6.6. 合并单元格</h3><p>特殊情况下，可以把多个单元格合并为一个单元格。</p><p><strong>合并单元格方式：</strong></p><ul><li>跨行合并：<code>rowspan=&quot;合并单元格的个数&quot;</code></li><li>跨列合并：<code>colspan=&quot;合并单元格的个数&quot;</code></li></ul><p><strong>目标单元格：（写合并代码）</strong></p><ul><li>跨行：最上侧单元格为目标单元格，写合并代码</li><li>跨列：最左侧单元格为目标单元格，写合并代码</li></ul><p><strong>合并单元格三部曲：</strong></p><ol><li>先确定是跨行还是跨列合并</li><li>找到目标单元格。写上合并方式 = 合并的单元格数量</li><li>删除多余的单元格</li></ol><h2 id="7-列表标签"><a href="#7-列表标签" class="headerlink" title="7. 列表标签"></a>7. 列表标签</h2><p>列表用来布局</p><p>特点：整齐、整洁、有序，它作为布局会更加自由和方便</p><h3 id="7-1-无序列表"><a href="#7-1-无序列表" class="headerlink" title="7.1. 无序列表"></a>7.1. 无序列表</h3><p><code>&lt;ul&gt;</code> 标签表示 HTML 页面中项目的无序列表，一般会以项目符号呈现列表项，而列表项使用 <code>&lt;li&gt;</code> 标签定义。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>无序列表的各个列表项之间没有顺序级别之分，是并列的</li><li><code>&lt;ul&gt;&lt;/ul&gt;</code> 中只能嵌套 <code>&lt;li&gt;&lt;/li&gt;</code>，直接在 <code>&lt;ul&gt;&lt;/ul&gt;</code> 标签中输入其他标签或文字的做法是不被允许的</li><li><code>&lt;li&gt;</code> 与 <code>&lt;/li&gt;</code> 之间相当于一个容器，可以容纳所有元素</li><li>无序列表会带有自己的样式属性，但在实际使用时，我们会使用 CSS 来设置</li></ol><h3 id="7-2-有序列表"><a href="#7-2-有序列表" class="headerlink" title="7.2. 有序列表"></a>7.2. 有序列表</h3><p>有序列表即为有排列顺序的列表，其各个列表项会按照一定的顺序排列定义。</p><p>在 HTML 标签中，<code>&lt;ol&gt;</code> 标签用于定义有序列表，列表排序以数字来显示，并且使用 <code>&lt;li&gt;</code> 标签来定义列表项</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;ol&gt;&lt;/ol&gt;</code> 中只能嵌套 <code>&lt;li&gt;&lt;/li&gt;</code>，直接在 <code>&lt;ol&gt;&lt;/ol&gt;</code> 标签中输入其他标签或文字的做法是不被允许的</li><li><code>&lt;li&gt;</code> 与 <code>&lt;/li&gt;</code> 之间相当于一个容器，可以容纳所有元素</li><li>有序列表会带有自己的样式属性，但在实际使用时，我们会使用 CSS 来设置</li></ol><h3 id="7-3-自定义列表"><a href="#7-3-自定义列表" class="headerlink" title="7.3. 自定义列表"></a>7.3. 自定义列表</h3><p>自定义列表的使用场景</p><p>自定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号</p><p>在 HTML 标签中，<code>&lt;dl&gt;</code> 标签用于定义描述列表（或定义列表），该标签会与 <code>&lt;dt&gt;</code>（定义项目/名字）和 <code>&lt;dd&gt;</code>（描述每一个项目/名字）一起使用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><code>&lt;dl&gt;&lt;/dl&gt;</code> 里面只能包含 <code>&lt;dt&gt;</code> 和 <code>&lt;dd&gt;</code> </li><li><code>&lt;dt&gt;</code> 和 <code>&lt;dd&gt;</code> 个数没有限制，经常是一个 <code>&lt;dt&gt;</code> 对应多个 <code>&lt;dd&gt; </code></li></ol><h3 id="7-4-列表总结"><a href="#7-4-列表总结" class="headerlink" title="7.4. 列表总结"></a>7.4. 列表总结</h3><table><thead><tr><th>标签名</th><th>定义</th><th>说明</th></tr></thead><tbody><tr><td><code>&lt;ul&gt;&lt;/ul&gt;</code></td><td>无序列表</td><td>里面只能包含 li，没有顺序，使用较多。li 里面可以包含任何标签</td></tr><tr><td><code>&lt;ol&gt;&lt;/ol&gt;</code></td><td>有序列表</td><td>里面只能包含 li，有顺序，使用相对较少。li 里面可以包含任何标签</td></tr><tr><td><code>&lt;dl&gt;&lt;/dl&gt;</code></td><td>自定义列表</td><td>里面只能包含 dt 和 dd。dt 和dd 里面以包含任何标签</td></tr></tbody></table><h2 id="8-表单标签"><a href="#8-表单标签" class="headerlink" title="8. 表单标签"></a>8. 表单标签</h2><h3 id="8-1-为什么需要表单"><a href="#8-1-为什么需要表单" class="headerlink" title="8.1. 为什么需要表单"></a>8.1. 为什么需要表单</h3><p>在网页中，需要与用户进行交互，收集用户资料，此时就需要表单</p><h3 id="8-2-表单的组成"><a href="#8-2-表单的组成" class="headerlink" title="8.2. 表单的组成"></a>8.2. 表单的组成</h3><p>在 HTML 中，一个完整的表单通常由 <strong>表单域、表单控件（也称为表单元素）</strong>和 <strong>提示信息</strong> 3个部分组成</p><h3 id="8-3-表单域"><a href="#8-3-表单域" class="headerlink" title="8.3. 表单域"></a>8.3. 表单域</h3><p>表单域是一个包含表单元素的区域</p><p>在 HTML 标签中，<code>&lt;form&gt;</code> 标签用于定义表单域，以实现用户信息的收集和传递</p><p><code>&lt;form&gt;</code> 会把它范围内的表单元素信息提交给服务器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表单域的名称&quot;</span>&gt;</span></span><br><span class="line">各种表单元素控件</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>常用属性：</p><table><thead><tr><th>属性</th><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td>action</td><td>url 地址</td><td>用于指定接收并处理表单数据的服务器程序的 url 地址</td></tr><tr><td>method</td><td>get/post</td><td>用于设置表单数据的提交方式，其取值为 get 或 post</td></tr><tr><td>name</td><td>名称</td><td>用于指定表单的名称，以区分同一个页面中的多个表单域</td></tr></tbody></table><h3 id="8-4-表单控件（表单元素）"><a href="#8-4-表单控件（表单元素）" class="headerlink" title="8.4. 表单控件（表单元素）"></a>8.4. 表单控件（表单元素）</h3><p>在表单域中可以定义各种表单元素，这些表单元素就是允许用户在表单中输入或者选择的内容控件。</p><ol><li>input 输入表单元素</li><li>select 下拉表单元素</li><li>textarea 文本域元素</li></ol><h4 id="8-4-1-lt-input-gt-表单元素"><a href="#8-4-1-lt-input-gt-表单元素" class="headerlink" title="8.4.1. &lt;input&gt;表单元素"></a>8.4.1. &lt;input&gt;表单元素</h4><p>在英文单词中，input 是输入的意思，而在表单元素中 <code>&lt;input&gt;</code> 标签用于收集用户信息。</p><p>在 <code>&lt;input&gt;</code> 标签中，包含一个 type 属性，根据不同的 type 属性值，输入字段拥有很多种形式（可以是文本字段、复选框、掩码后的文本控件、单选按钮、按钮等）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li> <code>&lt;input /&gt;</code> 标签为单标签</li><li> type 属性设置不同的属性值用来指定不同的控件类型</li></ul><p>type属性的属性值及其描述如下：</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>button</td><td>定义可单击按钮（多数情况下，通过 JavaScript 启动脚本）</td></tr><tr><td>checkbox</td><td>定义复选框</td></tr><tr><td>file</td><td>定义输入字段和“浏览”按钮，供文件上传</td></tr><tr><td>hidden</td><td>定义隐藏的输入字段</td></tr><tr><td>image</td><td>定义图像形式的提交按钮</td></tr><tr><td>password</td><td>定义密码字段。该字段中的字符被掩码</td></tr><tr><td>radio</td><td>定义单选按钮</td></tr><tr><td>reset</td><td>定义重置按钮。重置按钮会清除表单中的所有数据</td></tr><tr><td>submit</td><td>定义提交按钮。提交按钮会把表单数据发送到服务器</td></tr><tr><td>text</td><td>定义单行的输入字段，用户可在其中输入文本。默认宽度为20个字符</td></tr></tbody></table><p>除 type 属性外，<code>&lt;input&gt;</code> 标签还有很多其他属性，其常用属性如下：</p><table><thead><tr><th>属性</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>由用户自定义</td><td>定义 input 元素的名称</td></tr><tr><td>value</td><td>由用户自定义</td><td>规定 input 元素的值</td></tr><tr><td>checked</td><td>checked</td><td>规定此 input 元素首次加载时应当被选中</td></tr><tr><td>maxlength</td><td>正整数</td><td>规定输入字段中的字符的最大长度</td></tr></tbody></table><ol><li>name 和 value 是每个表单元素都有的属性值，主要给后台人员使用</li><li><strong>name 表单元素的名字，要求单选按钮和复选框要有相同的 name 值</strong></li><li>checked 属性主要针对单选按钮和复选框，主要作用为打开页面时，就可以默认选中这个表单元素</li><li>maxlength 是用户可以在表单元素输入的最大字符数，一般较少使用。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;xxx.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--text 文本框，用户可以在里面输入任何字符--&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;6&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--password 密码框 用户看不到密码--&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--radio 单选按钮 可以实现多选一--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--name 是表单元素名字 这里性别单选按钮必须有相同的名字name，才能实现多选一--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--单选按钮和复选框可以设置checked属性，当页面打开的时候就可以默认选中这个按钮--&gt;</span></span><br><span class="line">    性别：男 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span> 女 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--checkbox 复选框 可以实现多选--&gt;</span></span><br><span class="line">    爱好：吃饭 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;吃饭&quot;</span>&gt;</span></span><br><span class="line">    睡觉 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;睡觉&quot;</span>&gt;</span></span><br><span class="line">    打豆豆 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;打豆豆&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--点击提交按钮，可以把表单域form里面的表单元素里面的值，提交给后台服务器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--重置按钮可以还原表单元素的默认状态--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--普通按钮 button 后期结合js搭配使用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取短信验证码&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--文件域 上传文件使用--&gt;</span></span><br><span class="line">    上传头像：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-4-2-lt-label-gt-标签"><a href="#8-4-2-lt-label-gt-标签" class="headerlink" title="8.4.2. &lt;label&gt; 标签"></a>8.4.2. &lt;label&gt; 标签</h3><p><code>&lt;label&gt;</code> 标签为 input 元素定义标注（标签）。</p><p><code>&lt;label&gt;</code> 标签用于绑定一个表单元素，当点击 <code>&lt;label&gt;</code> 标签内的文本时，浏览器就会自动将焦点（光标）转到或者选择对应的表单元素上，增加用户体验</p><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>核心：&lt;label&gt; 标签的for属性应当与相关元素的id属性相同</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;user&quot;</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;male&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;famale&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;famale&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-4-3-lt-select-gt-表单元素"><a href="#8-4-3-lt-select-gt-表单元素" class="headerlink" title="8.4.3. &lt;select&gt; 表单元素"></a>8.4.3. &lt;select&gt; 表单元素</h3><p>使用场景：在页面中，如果有多个选项让用户选择，并且想要节约页面控件时，可以使用 <code>&lt;select&gt;</code> 标签控件定义下拉列表。</p><p><strong>语法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>&lt;select&gt; 中至少包含一堆 &lt;option&gt;</li><li>在 &lt;option&gt; 中定义 selected=”selected” 时，当前项即为默认选中项</li></ol><h3 id="8-4-4-lt-textarea-gt-表单元素"><a href="#8-4-4-lt-textarea-gt-表单元素" class="headerlink" title="8.4.4. &lt;textarea&gt; 表单元素"></a>8.4.4. &lt;textarea&gt; 表单元素</h3><p>使用场景：当用户输入内容较多的情况下，我们就不能使用文本框表单了，此时可以使用 <code>&lt;textarea&gt;</code> 标签。</p><p>在表单元素中， <code>&lt;textarea&gt;</code> 标签时用于定义多行文本输入的控件</p><p>使用多行文本输入控件，可以输入更多的文字，该控件常见于留言板，评论。</p><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">    文本内容</span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>通过 <code>&lt;textarea&gt;</code> 标签可以轻松地创建多行文本输入框。</li><li>cols=”每行中的字符数”，rows=”显示的行数”，我们在实际开发中不会使用，都是用 css 来改变大小</li></ol><h3 id="8-5-表单元素总结"><a href="#8-5-表单元素总结" class="headerlink" title="8.5. 表单元素总结"></a>8.5. 表单元素总结</h3><ol><li>表单元素 input 输入表单元素；select 下拉表单元素；textarea 文本域表单元素；</li><li>这三组表单元素都应该包含在 form 表单域里面，并且有 name 属性<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;jiguan&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>有三个名字非常相似的标签：<br>（1）表单域 form  使用场景：提交区域内表单元素给后台服务器<br>（2）文件域 file，是input type属性值  使用场景：上传文件<br>（3）文本域 textarea  使用场景：可以输入多行文字，比如留言板，网页介绍等</li><li>我们当前阶段不需要提交表单元素，所以我们只负责表单元素的外观形态即可</li></ol><p>注册页面案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>青春不常在，抓紧谈恋爱<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;700px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;male&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;male&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/nan.svg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;female&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;female&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/nv.svg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>生日<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>--请选择年--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>1990<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>1991<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>1992<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>1993<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>1994<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>1995<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>1996<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>1997<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>1998<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>--请选择月--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>6<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>7<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>8<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>9<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>--请选择日--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>6<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>7<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>8<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span>9<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>所在地区<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;北京&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>婚姻状况<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;marry&quot;</span> <span class="attr">id</span>=<span class="string">&quot;weihun&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;weihun&quot;</span>&gt;</span>未婚<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;marry&quot;</span> <span class="attr">id</span>=<span class="string">&quot;yihun&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;yihun&quot;</span>&gt;</span>已婚<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;marry&quot;</span> <span class="attr">id</span>=<span class="string">&quot;lihun&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;lihun&quot;</span>&gt;</span>离婚<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>学历<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;本科&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>喜欢的类型<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;type&quot;</span> <span class="attr">id</span>=<span class="string">&quot;wm&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;wm&quot;</span>&gt;</span>妩媚的<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;type&quot;</span> <span class="attr">id</span>=<span class="string">&quot;ka&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;ka&quot;</span>&gt;</span>可爱的<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;type&quot;</span> <span class="attr">id</span>=<span class="string">&quot;xxr&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;xxr&quot;</span>&gt;</span>小鲜肉<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;type&quot;</span> <span class="attr">id</span>=<span class="string">&quot;llr&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;llr&quot;</span>&gt;</span>老腊肉<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;type&quot;</span> <span class="attr">id</span>=<span class="string">&quot;all&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;all&quot;</span>&gt;</span>都喜欢<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>自我介绍<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;20&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;2&quot;</span>&gt;</span>自我介绍<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;免费注册&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span>我同意注册条款和会员加入标准<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我是会员，立即登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>我承诺<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>年满18岁、单身<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>抱着严肃的态度<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>真诚寻找另一半<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;WEB-简介&quot;&gt;&lt;a href=&quot;#WEB-简介&quot; class=&quot;headerlink&quot; title=&quot;WEB 简介&quot;&gt;&lt;/a&gt;WEB 简介&lt;/h1&gt;&lt;h2 id=&quot;1-网页&quot;&gt;&lt;a href=&quot;#1-网页&quot; class=&quot;headerlink&quot; title=&quot;1. 网页&quot;&gt;&lt;/a&gt;1. 网页&lt;/h2&gt;&lt;h3 id=&quot;1-1-什么是网页&quot;&gt;&lt;a href=&quot;#1-1-什么是网页&quot; class=&quot;headerlink&quot; title=&quot;1.1. 什么是网页&quot;&gt;&lt;/a&gt;1.1. 什么是网页&lt;/h3&gt;&lt;p&gt;网站是指在因特网上根据一定的规则，使用 HTML 等制作的用于展示特定内容相关的网页集合。&lt;/p&gt;
&lt;p&gt;网页时网站的一“页”，通常是 HTML 格式的文件，它要浏览器来阅读。&lt;/p&gt;
&lt;p&gt;网页是构成网站的基本元素，它通常由图片、链接、文字、声音、视频等元素组成。通常我们看到的网页，常见以 .htm 或 .html 后缀结尾的文件，因此其俗称为 HTML 文件。&lt;/p&gt;</summary>
    
    
    
    
    <category term="WEB" scheme="http://www.milla.club/tags/WEB/"/>
    
    <category term="HTML" scheme="http://www.milla.club/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>TCP/IP协议</title>
    <link href="http://www.milla.club/2019/04/19/TCP-IP%E5%8D%8F%E8%AE%AE/"/>
    <id>http://www.milla.club/2019/04/19/TCP-IP%E5%8D%8F%E8%AE%AE/</id>
    <published>2019-04-19T12:21:34.000Z</published>
    <updated>2020-04-21T06:19:45.899Z</updated>
    
    <content type="html"><![CDATA[<p>从字面意义上讲，有人可能会认为 TCP/IP 是指 TCP 和 IP 两种协议。实际生活当中有时也确实就是指这两种协议。然而在很多情况下，它只是利用 IP 进行通信时所必须用到的协议群的统称。具体来说，IP 或 ICMP、TCP 或 UDP、TELNET 或 FTP、以及 HTTP 等都属于 TCP/IP 协议。<br><img src="https://img-blog.csdnimg.cn/20200310215002613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="一图看完本文"></p><span id="more"></span> <h1 id="一、-计算机网络体系结构分层"><a href="#一、-计算机网络体系结构分层" class="headerlink" title="一、 计算机网络体系结构分层"></a>一、 计算机网络体系结构分层</h1><p><img src="https://img-blog.csdnimg.cn/20200310215047188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="计算机网络体系结构分层"><br><img src="https://img-blog.csdnimg.cn/20200310215111446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="计算机网络体系结构分层"><br><strong>不难看出，TCP/IP 与 OSI 在分层模块上稍有区别。OSI 参考模型注重“通信协议必要的功能是什么”，而 TCP/IP 则更强调“在计算机上实现协议应该开发哪种程序”。</strong></p><h1 id="二、-TCP-IP-基础"><a href="#二、-TCP-IP-基础" class="headerlink" title="二、 TCP/IP 基础"></a>二、 TCP/IP 基础</h1><h4 id="1-TCP-IP-的具体含义"><a href="#1-TCP-IP-的具体含义" class="headerlink" title="1. TCP/IP 的具体含义"></a>1. TCP/IP 的具体含义</h4><p>从字面意义上讲，有人可能会认为 TCP/IP 是指 TCP 和 IP 两种协议。实际生活当中有时也确实就是指这两种协议。然而在很多情况下，它只是利用 IP 进行通信时所必须用到的协议群的统称。具体来说，IP 或 ICMP、TCP 或 UDP、TELNET 或 FTP、以及 HTTP 等都属于 TCP/IP 协议。他们与 TCP 或 IP 的关系紧密，是互联网必不可少的组成部分。TCP/IP 一词泛指这些协议，因此，有时也称 TCP/IP 为网际协议群。</p><p>互联网进行通信时，需要相应的网络协议，TCP/IP 原本就是为使用互联网而开发制定的协议族。因此，互联网的协议就是 TCP/IP，TCP/IP 就是互联网的协议。<br><img src="https://img-blog.csdnimg.cn/20200310215204362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="网际协议群"></p><h4 id="2-数据包"><a href="#2-数据包" class="headerlink" title="2. 数据包"></a>2. 数据包</h4><p><strong>包、帧、数据包、段、消息</strong></p><p>以上五个术语都用来表述数据的单位，大致区分如下：</p><ul><li>包可以说是全能性术语；</li><li>帧用于表示数据链路层中包的单位；</li><li>数据包是 IP 和 UDP 等网络层以上的分层中包的单位；</li><li>段则表示 TCP 数据流中的信息；</li><li>消息是指应用协议中数据的单位。</li></ul><p>每个分层中，都会对所发送的数据附加一个首部，在这个首部中包含了该层必要的信息，如发送的目标地址以及协议相关信息。通常，为协议提供的信息为包首部，所要发送的内容为数据。在下一层的角度看，从上一层收到的包全部都被认为是本层的数据。<br><img src="https://img-blog.csdnimg.cn/20200310215235220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="数据包首部"><br>网络中传输的数据包由两部分组成：一部分是协议所要用到的首部，另一部分是上一层传过来的数据。首部的结构由协议的具体规范详细定义。在数据包的首部，明确标明了协议应该如何读取数据。反过来说，看到首部，也就能够了解该协议必要的信息以及所要处理的数据。<strong>包首部就像协议的脸。</strong></p><h4 id="3-数据处理流程"><a href="#3-数据处理流程" class="headerlink" title="3. 数据处理流程"></a>3. 数据处理流程</h4><p>下图以用户 a 向用户 b 发送邮件为例子：<br><img src="https://img-blog.csdnimg.cn/20200310215321533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="数据处理流程"><br>① 应用程序处理</p><p>首先应用程序会进行编码处理，这些编码相当于 OSI 的表示层功能；</p><p>编码转化后，邮件不一定马上被发送出去，这种何时建立通信连接何时发送数据的管理功能，相当于 OSI 的会话层功能。</p><p>② TCP 模块的处理</p><p>TCP 根据应用的指示，负责建立连接、发送数据以及断开连接。TCP 提供将应用层发来的数据顺利发送至对端的可靠传输。为了实现这一功能，需要在应用层数据的前端附加一个 TCP 首部。</p><p>③ IP 模块的处理</p><p>IP 将 TCP 传过来的 TCP 首部和 TCP 数据合起来当做自己的数据，并在 TCP 首部的前端加上自己的 IP 首部。IP 包生成后，参考路由控制表决定接受此 IP 包的路由或主机。</p><p>④ 网络接口（以太网驱动）的处理</p><p>从 IP 传过来的 IP 包对于以太网来说就是数据。给这些数据附加上以太网首部并进行发送处理，生成的以太网数据包将通过物理层传输给接收端。</p><p>⑤ 网络接口（以太网驱动）的处理</p><p>主机收到以太网包后，首先从以太网包首部找到 MAC 地址判断是否为发送给自己的包，若不是则丢弃数据。</p><p>如果是发送给自己的包，则从以太网包首部中的类型确定数据类型，再传给相应的模块，如 IP、ARP 等。这里的例子则是 IP 。</p><p>⑥ IP 模块的处理</p><p>IP 模块接收到 数据后也做类似的处理。从包首部中判断此 IP 地址是否与自己的 IP 地址匹配，如果匹配则根据首部的协议类型将数据发送给对应的模块，如 TCP、UDP。这里的例子则是 TCP。</p><p>另外吗，对于有路由器的情况，接收端地址往往不是自己的地址，此时，需要借助路由控制表，在调查应该送往的主机或路由器之后再进行转发数据。</p><p>⑦ TCP 模块的处理</p><p>在 TCP 模块中，首先会计算一下校验和，判断数据是否被破坏。然后检查是否在按照序号接收数据。***检查端口号，确定具体的应用程序。数据被完整地接收以后，会传给由端口号识别的应用程序。</p><p>⑧ 应用程序的处理</p><p>接收端应用程序会直接接收发送端发送的数据。通过解析数据，展示相应的内容。</p><h1 id="三、传输层中的-TCP-和-UDP"><a href="#三、传输层中的-TCP-和-UDP" class="headerlink" title="三、传输层中的 TCP 和 UDP"></a>三、传输层中的 TCP 和 UDP</h1><p>TCP/IP 中有两个具有代表性的传输层协议，分别是 TCP 和 UDP。</p><ul><li>TCP 是面向连接的、可靠的流协议。流就是指不间断的数据结构，当应用程序采用 TCP 发送消息时，虽然可以保证发送的顺序，但还是犹如没有任何间隔的数据流发送给接收端。TCP为提供可靠性传输，实行“顺序控制”或“重发控制”机制。此外还具备“流控制（流量控制）”、“拥塞控制”、提高网络利用率等众多功能。</li><li>UDP 是不具有可靠性的数据报协议。细微的处理它会交给上层的应用去完成。在 UDP的情况下，虽然可以确保发送消息的大小，却不能保证消息一定会到达。因此，应用有时会根据自己的需要进行重发处理。</li><li>TCP 和 UDP 的优缺点无法简单地、绝对地去做比较：TCP 用于在传输层有必要实现可靠传输的情况；而在一方面，UDP主要用于那些对高速传输和实时性有较高要求的通信或广播通信。TCP 和 UDP 应该根据应用的目的按需使用。</li></ul><h3 id="1-端口号"><a href="#1-端口号" class="headerlink" title="1. 端口号"></a>1. 端口号</h3><p>数据链路和 IP 中的地址，分别指的是 MAC 地址和 IP 地址。前者用来识别同一链路中不同的计算机，后者用来识别 TCP/IP 网络中互连的主机和路由器。在传输层也有这种类似于地址的概念，那就是端口号。端口号用来识别同一台计算机中进行通信的不同应用程序。因此，它也被称为程序地址。</p><h4 id="1-1-根据端口号识别应用"><a href="#1-1-根据端口号识别应用" class="headerlink" title="1.1 根据端口号识别应用"></a>1.1 根据端口号识别应用</h4><p>一台计算机上同时可以运行多个程序。传输层协议正是利用这些端口号识别本机中正在进行通信的应用程序，并准确地将数据传输。<br><img src="https://img-blog.csdnimg.cn/20200310215727498.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="通过端口号识别应用"></p><h4 id="1-2-通过-IP-地址、端口号、协议号进行通信识别"><a href="#1-2-通过-IP-地址、端口号、协议号进行通信识别" class="headerlink" title="1.2 通过 IP 地址、端口号、协议号进行通信识别"></a>1.2 通过 IP 地址、端口号、协议号进行通信识别</h4><p>仅凭目标端口号识别某一个通信是远远不够的。<br><img src="https://img-blog.csdnimg.cn/20200310215758293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="通过端口号、IP地址、协议号进行通信识别"><br><img src="https://img-blog.csdnimg.cn/20200310215808507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="通过端口号、IP地址、协议号进行通信识别"><br>① 和② 的通信是在两台计算机上进行的。它们的目标端口号相同，都是80。这里可以根据源端口号加以区分。</p><p>③ 和 ① 的目标端口号和源端口号完全相同，但它们各自的源 IP 地址不同。</p><p>此外，当 IP 地址和端口号全都一样时，我们还可以通过协议号来区分（TCP 和 UDP）。</p><h4 id="1-3-端口号的确定"><a href="#1-3-端口号的确定" class="headerlink" title="1.3 端口号的确定"></a>1.3 端口号的确定</h4><ul><li>标准既定的端口号：这种方法也叫静态方法。它是指每个应用程序都有其指定的端口号。但并不是说可以随意使用任何一个端口号。例如 HTTP、FTP、TELNET 等广为使用的应用协议中所使用的端口号就是固定的。这些端口号被称为知名端口号，分布在 0<del>1023之间；除知名端口号之外，还有一些端口号被正式注册，它们分布在 1024</del>49151 之间，不过这些端口号可用于任何通信用途。</li><li>时序分配法：服务器有必要确定监听端口号，但是接受服务的客户端没必要确定端口号。在这种方法下，客户端应用程序完全可以不用自己设置端口号，而全权交给操作系统进行分配。动态分配的端口号范围在49152~65535 之间。</li></ul><h4 id="1-4-端口号与协议"><a href="#1-4-端口号与协议" class="headerlink" title="1.4 端口号与协议"></a>1.4 端口号与协议</h4><ul><li>端口号由其使用的传输层协议决定。因此，不同的传输层协议可以使用相同的端口号。</li><li>此外，那些知名端口号与传输层协议并无关系。只要端口一致都将分配同一种应用程序进行处理。</li></ul><h3 id="2-UDP"><a href="#2-UDP" class="headerlink" title="2. UDP"></a>2. UDP</h3><ul><li>UDP 不提供复杂的控制机制，利用 IP 提供面向无连接的通信服务。</li><li>并且它是将应用程序发来的数据在收到的那一刻，立即按照原样发送到网络上的一种机制。即使是出现网络拥堵的情况，UDP也无法进行流量控制等避免网络拥塞行为。</li><li>此外，传输途中出现丢包，UDP 也不负责重发。</li><li>甚至当包的到达顺序出现乱序时也没有纠正的功能。</li><li>如果需要以上的细节控制，不得不交由采用 UDP 的应用程序去处理。</li><li>UDP 常用于一下几个方面：1.包总量较少的通信（DNS、SNMP等）；2.视频、音频等多媒体通信（即时通信）；3.限定于 LAN等特定网络中的应用通信；4.广播通信（广播、多播）。</li></ul><h3 id="3-TCP"><a href="#3-TCP" class="headerlink" title="3. TCP"></a>3. TCP</h3><ul><li>TCP 与 UDP的区别相当大。它充分地实现了数据传输时各种控制功能，可以进行丢包时的重发控制，还可以对次序乱掉的分包进行顺序控制。而这些在 UDP中都没有。</li><li>此外，TCP 作为一种面向有连接的协议，只有在确认通信对端存在时才会发送数据，从而可以控制通信流量的浪费。</li><li>根据 TCP 的这些机制，在 IP 这种无连接的网络上也能够实现高可靠性的通信（主要通过检验和、序列号、确认应答、重发控制、连接管理以及窗口控制等机制实现）。</li></ul><h4 id="3-1-三次握手（重点）"><a href="#3-1-三次握手（重点）" class="headerlink" title="3.1 三次握手（重点）"></a>3.1 三次握手（重点）</h4><ul><li>TCP 提供面向有连接的通信传输。面向有连接是指在数据通信开始之前先做好两端之间的准备工作。</li><li>所谓三次握手是指建立一个 TCP 连接时需要客户端和服务器端总共发送三个包以确认连接的建立。在socket编程中，这一过程由客户端执行connect来触发。</li></ul><p>下面来看看三次握手的流程图：<br><img src="https://img-blog.csdnimg.cn/20200310215910121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="三次握手"></p><ul><li>第一次握手：客户端将标志位SYN置为1，随机产生一个值seq=J，并将该数据包发送给服务器端，客户端进入SYN_SENT状态，等待服务器端确认。</li><li>第二次握手：服务器端收到数据包后由标志位SYN=1知道客户端请求建立连接，服务器端将标志位SYN和ACK都置为1，ack=J+1，随机产生一个值seq=K，并将该数据包发送给客户端以确认连接请求，服务器端进入SYN_RCVD状态。</li><li>第三次握手：客户端收到确认后，检查ack是否为J+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=K+1，并将该数据包发送给服务器端，服务器端检查ack是否为K+1，ACK是否为1，如果正确则连接建立成功，客户端和服务器端进入ESTABLISHED状态，完成三次握手，随后客户端与服务器端之间可以开始传输数据了。</li></ul><h4 id="3-2-四次挥手（重点）"><a href="#3-2-四次挥手（重点）" class="headerlink" title="3.2 四次挥手（重点）"></a>3.2 四次挥手（重点）</h4><ul><li>四次挥手即终止TCP连接，就是指断开一个TCP连接时，需要客户端和服务端总共发送4个包以确认连接的断开。在socket编程中，这一过程由客户端或服务端任一方执行close来触发。</li><li>由于TCP连接是全双工的，因此，每个方向都必须要单独进行关闭，这一原则是当一方完成数据发送任务后，发送一个FIN来终止这一方向的连接，收到一个FIN只是意味着这一方向上没有数据流动了，即不会再收到数据了，但是在这个TCP连接上仍然能够发送数据，直到这一方向也发送了FIN。首先进行关闭的一方将执行主动关闭，而另一方则执行被动关闭。</li></ul><p>下面来看看四次挥手的流程图：<br><img src="https://img-blog.csdnimg.cn/20200310220000751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="四次挥手"><br>中断连接端可以是客户端，也可以是服务器端。</p><ul><li>第一次挥手：客户端发送一个FIN=M，用来关闭客户端到服务器端的数据传送，客户端进入FIN_WAIT_1状态。意思是说”我客户端没有数据要发给你了”，但是如果你服务器端还有数据没有发送完成，则不必急着关闭连接，可以继续发送数据。</li><li>第二次挥手：服务器端收到FIN后，先发送ack=M+1，告诉客户端，你的请求我收到了，但是我还没准备好，请继续你等我的消息。这个时候客户端就进入FIN_WAIT_2状态，继续等待服务器端的FIN报文。</li><li>第三次挥手：当服务器端确定数据已发送完成，则向客户端发送FIN=N报文，告诉客户端，好了，我这边数据发完了，准备好关闭连接了。服务器端进入LAST_ACK状态。</li><li>第四次挥手：客户端收到FIN=N报文后，就知道可以关闭连接了，但是他还是不相信网络，怕服务器端不知道要关闭，所以发送ack=N+1后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传。服务器端收到ACK后，就知道可以断开连接了。客户端等待了2MSL后依然没有收到回复，则证明服务器端已正常关闭，那好，我客户端也可以关闭连接了。最终完成了四次握手。</li><li>上面是一方主动关闭，另一方被动关闭的情况，实际中还会出现同时发起主动关闭的情况。</li></ul><p>具体流程如下图：<br><img src="https://img-blog.csdnimg.cn/20200310220033220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="同时挥手"></p><h4 id="3-3-通过序列号与确认应答提高可靠性"><a href="#3-3-通过序列号与确认应答提高可靠性" class="headerlink" title="3.3 通过序列号与确认应答提高可靠性"></a>3.3 通过序列号与确认应答提高可靠性</h4><ul><li>在 TCP中，当发送端的数据到达接收主机时，接收端主机会返回一个已收到消息的通知。这个消息叫做确认应答（ACK）。当发送端将数据发出之后会等待对端的确认应答。如果有确认应答，说明数据已经成功到达对端。反之，则数据丢失的可能性很大。</li><li>在一定时间内没有等待到确认应答，发送端就可以认为数据已经丢失，并进行重发。由此，即使产生了丢包，仍然能够保证数据能够到达对端，实现可靠传输。</li><li>未收到确认应答并不意味着数据一定丢失。也有可能是数据对方已经收到，只是返回的确认应答在途中丢失。这种情况也会导致发送端误以为数据没有到达目的地而重发数据。</li><li>此外，也有可能因为一些其他原因导致确认应答延迟到达，在源主机重发数据以后才到达的情况也屡见不鲜。此时，源主机只要按照机制重发数据即可。</li><li>对于目标主机来说，反复收到相同的数据是不可取的。为了对上层应用提供可靠的传输，目标主机必须放弃重复的数据包。为此我们引入了序列号。</li><li>序列号是按照顺序给发送数据的每一个字节（8位字节）都标上号码的编号。接收端查询接收数据 TCP首部中的序列号和数据的长度，将自己下一步应该接收的序列号作为确认应答返送回去。通过序列号和确认应答号，TCP能够识别是否已经接收数据，又能够判断是否需要接收，从而实现可靠传输。</li></ul><p><img src="https://img-blog.csdnimg.cn/2020031022011388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="序列号和确认应答"></p><h4 id="3-4-重发超时的确定"><a href="#3-4-重发超时的确定" class="headerlink" title="3.4 重发超时的确定"></a>3.4 重发超时的确定</h4><ul><li>重发超时是指在重发数据之前，等待确认应答到来的那个特定时间间隔。如果超过这个时间仍未收到确认应答，发送端将进行数据重发。最理想的是，找到一个最小时间，它能保证“确认应答一定能在这个时间内返回”。</li><li>TCP要求不论处在何种网络环境下都要提供高性能通信，并且无论网络拥堵情况发生何种变化，都必须保持这一特性。为此，它在每次发包时都会计算往返时间及其偏差。将这个往返时间和偏差时间相加，重发超时的时间就是比这个总和要稍大一点的值。</li><li>在 BSD 的 Unix 以及 Windows系统中，超时都以0.5秒为单位进行控制，因此重发超时都是0.5秒的整数倍。不过，最初其重发超时的默认值一般设置为6秒左右。</li><li>数据被重发之后若还是收不到确认应答，则进行再次发送。此时，等待确认应答的时间将会以2倍、4倍的指数函数延长。</li><li>此外，数据也不会被***、反复地重发。达到一定重发次数之后，如果仍没有任何确认应答返回，就会判断为网络或对端主机发生了异常，强制关闭连接。并且通知应用通信异常强行终止。</li></ul><h4 id="3-5-以段为单位发送数据"><a href="#3-5-以段为单位发送数据" class="headerlink" title="3.5 以段为单位发送数据"></a>3.5 以段为单位发送数据</h4><ul><li>在建立 TCP 连接的同时，也可以确定发送数据包的单位，我们也可以称其为“<em><strong>消息长度”（MSS）。最理想的情况是，</strong></em>消息长度正好是IP 中不会被分片处理的***数据长度。</li><li>TCP 在传送大量数据时，是以 MSS 的大小将数据进行分割发送。进行重发时也是以 MSS 为单位。 </li><li>MSS在三次握手的时候，在两端主机之间被计算得出。两端的主机在发出建立连接的请求时，会在 TCP 首部中写入MSS选项，告诉对方自己的接口能够适应的 MSS 的大小。然后会在两者之间选择一个较小的值投入使用。</li></ul><h4 id="3-6-利用窗口控制提高速度"><a href="#3-6-利用窗口控制提高速度" class="headerlink" title="3.6 利用窗口控制提高速度"></a>3.6 利用窗口控制提高速度</h4><ul><li>TCP 以1个段为单位，每发送一个段进行一次确认应答的处理。这样的传输方式有一个缺点，就是包的往返时间越长通信性能就越低。</li><li>为解决这个问题，TCP引入了窗口这个概念。确认应答不再是以每个分段，而是以更大的单位进行确认，转发时间将会被大幅地缩短。也就是说，发送端主机，在发送了一个段以后不必要一直等待确认应答，而是继续发送。如下图所示：</li></ul><p><img src="https://img-blog.csdnimg.cn/20200310220226611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70"></p><ul><li>窗口控制</li><li>窗口大小就是指无需等待确认应答而可以继续发送数据的***值。上图中窗口大小为4个段。这个机制实现了使用大量的缓冲区，通过对多个段同时进行确认应答的功能。</li></ul><h4 id="3-7-滑动窗口控制"><a href="#3-7-滑动窗口控制" class="headerlink" title="3.7 滑动窗口控制"></a>3.7 滑动窗口控制</h4><p><img src="https://img-blog.csdnimg.cn/20200310220253448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="滑动窗口"></p><ul><li>上图中的窗口内的数据即便没有收到确认应答也可以被发送出去。不过，在整个窗口的确认应答没有到达之前，如果其中部分数据出现丢包，那么发送端仍然要负责重传。为此，发送端主机需要设置缓存保留这些待被重传的数据，直到收到他们的确认应答。</li><li>在滑动窗口以外的部分包括未发送的数据以及已经确认对端已收到的数据。当数据发出后若如期收到确认应答就可以不用再进行重发，此时数据就可以从缓存区清除。</li><li>收到确认应答的情况下，将窗口滑动到确认应答中的序列号的位置。这样可以顺序地将多个段同时发送提高通信性能。这种机制也别称为滑动窗口控制。</li></ul><h4 id="3-8-窗口控制中的重发控制"><a href="#3-8-窗口控制中的重发控制" class="headerlink" title="3.8 窗口控制中的重发控制"></a>3.8 窗口控制中的重发控制</h4><p>在使用窗口控制中， 出现丢包一般分为两种情况：</p><p>① 确认应答未能返回的情况。在这种情况下，数据已经到达对端，是不需要再进行重发的，如下图：<br><img src="https://img-blog.csdnimg.cn/2020031022032050.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="部分确认应答丢失"><br>② 某个报文段丢失的情况。接收主机如果收到一个自己应该接收的序列号以外的数据时，会针对当前为止收到数据返回确认应答。如下图所示，当某一报文段丢失后，发送端会一直收到序号为1001的确认应答，因此，在窗口比较大，又出现报文段丢失的情况下，同一个序列号的确认应答将会被重复不断地返回。而发送端主机如果连续3次收到同一个确认应答，就会将其对应的数据进行重发。这种机制比之前提到的超时管理更加高效，因此也被称为高速重发控制。<br><img src="https://img-blog.csdnimg.cn/20200310220342775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="高速重发控制"></p><h1 id="四、网络层中的-IP-协议"><a href="#四、网络层中的-IP-协议" class="headerlink" title="四、网络层中的 IP 协议"></a>四、网络层中的 IP 协议</h1><ul><li>IP（IPv4、IPv6）相当于 OSI 参考模型中的第3层——网络层。网络层的主要作用是“实现终端节点之间的通信”。这种终端节点之间的通信也叫“点对点通信”。</li><li>网络的下一层——数据链路层的主要作用是在互连同一种数据链路的节点之间进行包传递。而一旦跨越多种数据链路，就需要借助网络层。网络层可以跨越不同的数据链路，即使是在不同的数据链路上也能实现两端节点之间的数据包传输。</li><li>IP 大致分为三大作用模块，它们是 IP 寻址、路由（最终节点为止的转发）以及 IP 分包与组包。</li></ul><h3 id="1-IP-地址"><a href="#1-IP-地址" class="headerlink" title="1. IP 地址"></a>1. IP 地址</h3><h4 id="1-1-IP-地址概述"><a href="#1-1-IP-地址概述" class="headerlink" title="1.1 IP 地址概述"></a>1.1 IP 地址概述</h4><ul><li>在计算机通信中，为了识别通信对端，必须要有一个类似于地址的识别码进行标识。在数据链路中的 MAC 地址正是用来标识同一个链路中不同计算机的一种识别码。</li><li>作为网络层的 IP ,也有这种地址信息，一般叫做 IP 地址。IP地址用于在“连接到网络中的所有主机中识别出进行通信的目标地址”。因此，在 TCP/IP 通信中所有主机或路由器必须设定自己的 IP 地址。不论一台主机与哪种数据链路连接，其 IP 地址的形式都保持不变。</li><li>IP 地址（IPv4 地址）由32位正整数来表示。IP地址在计算机内部以二进制方式被处理。然而，由于我们并不习惯于采用二进制方式，我们将32位的 IP 地址以每8位为一组，分成4组，每组以 “.” 隔开，再将每组数转换成十进制数。如下：</li></ul><p><img src="https://img-blog.csdnimg.cn/20200310220435959.png" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><h4 id="1-2-IP-地址由网络和主机两部分标识组成"><a href="#1-2-IP-地址由网络和主机两部分标识组成" class="headerlink" title="1.2 IP 地址由网络和主机两部分标识组成"></a>1.2 IP 地址由网络和主机两部分标识组成</h4><ul><li>如下图，网络标识在数据链路的每个段配置不同的值。网络标识必须保证相互连接的每个段的地址不相重复。而相同段内相连的主机必须有相同的网络地址。IP 地址的“主机标识”则不允许在同一个网段内重复出现。由此，可以通过设置网络地址和主机地址，在相互连接的整个网络中保证每台主机的 IP地址都不会相互重叠。即 IP 地址具有了唯一性。</li></ul><p><img src="https://img-blog.csdnimg.cn/20200310220450628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="IP地址的主机标识"></p><ul><li>如下图，IP 包被转发到途中某个路由器时，正是利用目标 IP地址的网络标识进行路由。因为即使不看主机标识，只要一见到网络标识就能判断出是否为该网段内的主机。</li></ul><p><img src="https://img-blog.csdnimg.cn/20200310220512147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="IP地址的网络标识"></p><h4 id="1-3-IP-地址的分类"><a href="#1-3-IP-地址的分类" class="headerlink" title="1.3 IP 地址的分类"></a>1.3 IP 地址的分类</h4><ul><li>IP 地址分为四个级别，分别为A类、B类、C类、D类。它根据 IP 地址中从第 1 位到第 4 位的比特列对其网络标识和主机标识进行区分。</li><li>A 类 IP 地址是首位以 “0” 开头的地址。从第 1 位到第 8位是它的网络标识。用十进制表示的话，0.0.0.0~127.0.0.0 是 A 类的网络地址。A 类地址的后 24位相当于主机标识。因此，一个网段内可容纳的主机地址上限为16,777,214个。</li><li>B 类 IP 地址是前两位 “10” 的地址。从第 1 位到第 16位是它的网络标识。用十进制表示的话，128.0.0.0~191.255.0.0 是 B 类的网络地址。B 类地址的后 16位相当于主机标识。因此，一个网段内可容纳的主机地址上限为65,534个。</li><li>C 类 IP 地址是前三位为 “110” 的地址。从第 1 位到第 24位是它的网络标识。用十进制表示的话，192.0.0.0~223.255.255.0 是 C 类的网络地址。C 类地址的后 8 位相当于主机标识。因此，一个网段内可容纳的主机地址上限为254个。</li><li>D 类 IP 地址是前四位为 “1110” 的地址。从第 1 位到第 32位是它的网络标识。用十进制表示的话，224.0.0.0~239.255.255.255 是 D 类的网络地址。D 类地址没有主机标识，常用于多播。</li><li>在分配 IP 地址时关于主机标识有一点需要注意。即要用比特位表示主机地址时，不可以全部为 0 或全部为 1。因为全部为 0 只有在表示对应的网络地址或 IP 地址不可以获知的情况下才使用。而全部为 1 的主机通常作为广播地址。因此，在分配过程中，应该去掉这两种情况。这也是为什么 C 类地址每个网段最多只能有 254（ 28 - 2 = 254）个主机地址的原因。</li></ul><h4 id="1-4-广播地址"><a href="#1-4-广播地址" class="headerlink" title="1.4 广播地址"></a>1.4 广播地址</h4><ul><li>广播地址用于在同一个链路中相互连接的主机之间发送数据包。将 IP 地址中的主机地址部分全部设置为 1，就成了广播地址。</li><li>广播分为本地广播和直接广播两种。在本网络内的广播叫做本地广播；在不同网络之间的广播叫做直接广播。</li></ul><h4 id="1-5-IP-多播"><a href="#1-5-IP-多播" class="headerlink" title="1.5 IP 多播"></a>1.5 IP 多播</h4><ul><li>多播用于将包发送给特定组内的所有主机。由于其直接使用 IP 地址，因此也不存在可靠传输。</li><li>相比于广播，多播既可以穿透路由器，又可以实现只给那些必要的组发送数据包。请看下图：<br><img src="https://img-blog.csdnimg.cn/20200310220703656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></li><li>IP 多播</li><li>多播使用 D 类地址。因此，如果从首位开始到第 4 位是 “1110”，就可以认为是多播地址。而剩下的 28 位可以成为多播的组编号。</li><li>此外， 对于多播，所有的主机（路由器以外的主机和终端主机）必须属于 224.0.0.1 的组，所有的路由器必须属于 224.0.0.2 的组。</li></ul><h4 id="1-6-子网掩码"><a href="#1-6-子网掩码" class="headerlink" title="1.6 子网掩码"></a>1.6 子网掩码</h4><ul><li>现在一个 IP 地址的网络标识和主机标识已不再受限于该地址的类别，而是由一个叫做“子网掩码”的识别码通过子网网络地址细分出比 A 类、B类、C 类更小粒度的网络。这种方式实际上就是将原来 A 类、B 类、C 类等分类中的主机地址部分用作子网地址，可以将原网络分为多个物理网络的一种机制。</li><li>子网掩码用二进制方式表示的话，也是一个 32 位的数字。它对应 IP 地址网络标识部分的位全部为 “1”，对应 IP 地址主机标识的部分则全部为 “0”。由此，一个 IP地址可以不再受限于自己的类别，而是可以用这样的子网掩码自由地定位自己的网络标识长度。当然，子网掩码必须是 IP 地址的首位开始连续的 “1”。</li><li>对于子网掩码，目前有两种表示方式。***种是，将 IP 地址与子网掩码的地址分别用两行来表示。以 172.20.100.52 的前 26位是网络地址的情况为例，如下：</li></ul><p><img src="https://img-blog.csdnimg.cn/20200310220633807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><ul><li><p>第二种表示方式是，在每个 IP 地址后面追加网络地址的位数用 “/ ” 隔开，如下：<br><img src="https://img-blog.csdnimg.cn/20200310220648547.png" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><h3 id="2-路由"><a href="#2-路由" class="headerlink" title="2. 路由"></a>2. 路由</h3></li><li><p>发送数据包时所使用的地址是网络层的地址，即 IP 地址。然而仅仅有 IP地址还不足以实现将数据包发送到对端目标地址，在数据发送过程中还需要类似于“指明路由器或主机”的信息，以便真正发往目标地址。保存这种信息的就是路由控制表。</p></li><li><p>该路由控制表的形成方式有两种：一种是管理员手动设置，另一种是路由器与其他路由器相互交换信息时自动刷新。前者也叫做静态路由控制，而后者叫做动态路由控制。</p></li><li><p>IP 协议始终认为路由表是正确的。然后，IP 本身并没有定义制作路由控制表的协议。即 IP<br>没有制作路由控制表的机制。该表示由一个叫做“路由协议”的协议制作而成。</p></li></ul><h4 id="2-1-IP-地址与路由控制"><a href="#2-1-IP-地址与路由控制" class="headerlink" title="2.1 IP 地址与路由控制"></a>2.1 IP 地址与路由控制</h4><ul><li>IP 地址的网络地址部分用于进行路由控制。</li><li>路由控制表中记录着网络地址与下一步应该发送至路由器的地址。</li><li>在发送 IP 包时，首先要确定 IP 包首部中的目标地址，再从路由控制表中找到与该地址具有相同网络地址的记录，根据该记录将 IP包转发给相应的下一个路由器。如果路由控制表中存在多条相同网络地址的记录，就选择一个最为吻合的网络地址。</li></ul><p><img src="https://img-blog.csdnimg.cn/20200310220744235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="路由控制表与 IP 包发送"></p><h3 id="3-IP-分包与组包"><a href="#3-IP-分包与组包" class="headerlink" title="3. IP 分包与组包"></a>3. IP 分包与组包</h3><ul><li>每种数据链路的***传输单元（MTU）都不尽相同，因为每个不同类型的数据链路的使用目的不同。使用目的不同，可承载的 MTU 也就不同。</li><li>任何一台主机都有必要对 IP 分片进行相应的处理。分片往往在网络上遇到比较大的报文无法一下子发送出去时才会进行处理。</li><li>经过分片之后的 IP 数据报在被重组的时候，只能由目标主机进行。路由器虽然做分片但不会进行重组。</li></ul><h4 id="3-1-路径-MTU-发现"><a href="#3-1-路径-MTU-发现" class="headerlink" title="3.1 路径 MTU 发现"></a>3.1 路径 MTU 发现</h4><ul><li>分片机制也有它的不足。如路由器的处理负荷加重之类。因此，只要允许，是不希望由路由器进行 IP 数据包的分片处理的。</li><li>为了应对分片机制的不足，“路径 MTU 发现” 技术应运而生。路径 MTU 指的是，从发送端主机到接收端主机之间不需要分片是*** MTU的大小。即路径中存在的所有数据链路中最小的 MTU 。</li><li>进行路径 MTU 发现，就可以避免在中途的路由器上进行分片处理，也可以在 TCP 中发送更大的包。</li></ul><h3 id="4-IPv6"><a href="#4-IPv6" class="headerlink" title="4. IPv6"></a>4. IPv6</h3><ul><li>IPv6（IP version 6）是为了根本解决 IPv4 地址耗尽的问题而被标准化的网际协议。IPv4 的地址长度为 4 个 8位字节，即 32 比特。而 IPv6 的地址长度则是原来的 4 倍，即 128 比特，一般写成 8 个 16 位字节。</li></ul><h4 id="4-1-IPv6-的特点"><a href="#4-1-IPv6-的特点" class="headerlink" title="4.1 IPv6 的特点"></a>4.1 IPv6 的特点</h4><ul><li>IP 得知的扩大与路由控制表的聚合。</li><li>性能提升。包首部长度采用固定的值（40字节），不再采用首部检验码。简化首部结构，减轻路由器负担。路由器不再做分片处理。</li><li>支持即插即用功能。即使没有DHCP服务器也可以实现自动分配 IP 地址。</li><li>采用认证与加密功能。应对伪造 IP 地址的网络安全功能以及防止线路窃听的功能。</li><li>多播、Mobile IP 成为扩展功能。</li></ul><h4 id="4-2-IPv6-中-IP-地址的标记方法"><a href="#4-2-IPv6-中-IP-地址的标记方法" class="headerlink" title="4.2 IPv6 中 IP 地址的标记方法"></a>4.2 IPv6 中 IP 地址的标记方法</h4><ul><li>一般人们将 128 比特 IP 地址以每 16 比特为一组，每组用冒号（“：”）隔开进行标记。</li><li>而且如果出现连续的 0 时还可以将这些 0 省略，并用两个冒号（“：：”）隔开。但是，一个 IP 地址中只允许出现一次两个连续的冒号。</li></ul><h4 id="4-3-IPv6-地址的结构"><a href="#4-3-IPv6-地址的结构" class="headerlink" title="4.3 IPv6 地址的结构"></a>4.3 IPv6 地址的结构</h4><ul><li>IPv6 类似 IPv4，也是通过 IP 地址的前几位标识 IP 地址的种类。</li><li>在互联网通信中，使用一种全局的单播地址。它是互联网中唯一的一个地址，不需要正式分配 IP 地址。</li></ul><p><img src="https://img-blog.csdnimg.cn/2020031022083521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><h4 id="4-4-全局单播地址"><a href="#4-4-全局单播地址" class="headerlink" title="4.4 全局单播地址"></a>4.4 全局单播地址</h4><ul><li>全局单播地址是指世界上唯一的一个地址。它是互联网通信以及各个域内部通信中最为常用的一个 IPv6 地址。</li><li>格式如下图所示，现在 IPv6 的网络中所使用的格式为，n = 48，m = 16 以及 128 - n - m = 64。即前 64比特为网络标识，后 64 比特为主机标识。</li></ul><p><img src="https://img-blog.csdnimg.cn/20200310220849893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="全局单播地址"></p><h4 id="4-5-链路本地单播地址"><a href="#4-5-链路本地单播地址" class="headerlink" title="4.5 链路本地单播地址"></a>4.5 链路本地单播地址</h4><ul><li>链路本地单播地址是指在同一个数据链路内唯一的地址。它用于不经过路由器，在同一个链路中的通信。通常接口 ID 保存 64 比特版的 MAC地址。</li></ul><p><img src="https://img-blog.csdnimg.cn/20200310220916523.png" alt="链路本地单播地址"></p><h4 id="4-6-唯一本地地址"><a href="#4-6-唯一本地地址" class="headerlink" title="4.6 唯一本地地址"></a>4.6 唯一本地地址</h4><ul><li>唯一本地地址是不进行互联网通信时所用的地址。</li><li>唯一本地地址虽然不会与互联网连接，但是也会尽可能地随机生成一个唯一的全局 ID。</li><li>L 通常被置为 1</li><li>全局 ID 的值随机决定</li><li>子网 ID 是指该域子网地址</li><li>接口 ID 即为接口的 ID</li></ul><p><img src="https://img-blog.csdnimg.cn/2020031022093634.png" alt="唯一本地地址"></p><h4 id="4-7-IPv6-分段处理"><a href="#4-7-IPv6-分段处理" class="headerlink" title="4.7 IPv6 分段处理"></a>4.7 IPv6 分段处理</h4><ul><li>IPv6 的分片处理只在作为起点的发送端主机上进行，路由器不参与分片。</li><li>IPv6 中最小 MTU 为 1280 字节，因此，在嵌入式系统中对于那些有一定系统资源限制的设备来说，不需要进行“路径 MTU发现”，而是在发送 IP 包时直接以 1280 字节为单位分片送出。</li></ul><h4 id="4-8-IP-首部（暂略）"><a href="#4-8-IP-首部（暂略）" class="headerlink" title="4.8 IP 首部（暂略）"></a>4.8 IP 首部（暂略）</h4><h3 id="5-IP-协议相关技术"><a href="#5-IP-协议相关技术" class="headerlink" title="5. IP 协议相关技术"></a>5. IP 协议相关技术</h3><ul><li>IP 旨在让最终目标主机收到数据包，但是在这一过程中仅仅有 IP 是无法实现通信的。必须还有能够解析主机名称和 MAC 地址的功能，以及数据包在发送过程中异常情况处理的功能。</li></ul><h4 id="5-1-DNS"><a href="#5-1-DNS" class="headerlink" title="5.1 DNS"></a>5.1 DNS</h4><ul><li>我们平常在访问某个网站时不适用 IP 地址，而是用一串由罗马字和点号组成的字符串。而一般用户在使用 TCP/IP 进行通信时也不使用 IP地址。能够这样做是因为有了 DNS （Domain Name System）功能的支持。DNS 可以将那串字符串自动转换为具体的 IP地址。</li><li>这种 DNS 不仅适用于 IPv4，还适用于 IPv6。</li></ul><h4 id="5-2-ARP"><a href="#5-2-ARP" class="headerlink" title="5.2 ARP"></a>5.2 ARP</h4><ul><li>只要确定了 IP 地址，就可以向这个目标地址发送 IP 数据报。然而，在底层数据链路层，进行实际通信时却有必要了解每个 IP 地址所对应的MAC 地址。</li><li>ARP 是一种解决地址问题的协议。以目标 IP 地址为线索，用来定位下一个应该接收数据分包的网络设备对应的 MAC 地址。不过 ARP只适用于 IPv4，不能用于 IPv6。IPv6 中可以用 ICMPv6 替代 ARP 发送邻居探索消息。</li><li>RARP 是将 ARP 反过来，从 MAC 地址定位 IP 地址的一种协议。</li></ul><h4 id="5-3-ICMP"><a href="#5-3-ICMP" class="headerlink" title="5.3 ICMP"></a>5.3 ICMP</h4><ul><li>ICMP 的主要功能包括，确认 IP 包是否成功送达目标地址，通知在发送过程当中 IP 包被废弃的具体原因，改善网络设置等。</li><li>IPv4 中 ICMP 仅作为一个辅助作用支持 IPv4。也就是说，在 IPv4 时期，即使没有 ICMP，仍然可以实现 IP通信。然而，在 IPv6 中，ICMP 的作用被扩大，如果没有 ICMPv6，IPv6 就无法进行正常通信。</li></ul><h4 id="5-4-DHCP"><a href="#5-4-DHCP" class="headerlink" title="5.4 DHCP"></a>5.4 DHCP</h4><ul><li>如果逐一为每一台主机设置 IP地址会是非常繁琐的事情。特别是在移动使用笔记本电脑、只能终端以及平板电脑等设备时，每移动到一个新的地方，都要重新设置 IP 地址。</li><li>于是，为了实现自动设置 IP 地址、统一管理 IP 地址分配，就产生了 DHCP（Dynamic Host Configuration Protocol）协议。有了 DHCP，计算机只要连接到网络，就可以进行 TCP/IP 通信。也就是说，DHCP 让即插即用变得可能。</li><li>DHCP 不仅在 IPv4 中，在 IPv6 中也可以使用。</li></ul><h4 id="5-5-NAT"><a href="#5-5-NAT" class="headerlink" title="5.5 NAT"></a>5.5 NAT</h4><ul><li>NAT（Network Address Translator）是用于在本地网络中使用私有地址，在连接互联网时转而使用全局 IP地址的技术。</li><li>除转换 IP 地址外，还出现了可以转换 TCP、UDP 端口号的 NAPT（Network Address Ports<br>Translator）技术，由此可以实现用一个全局 IP 地址与多个主机的通信。</li><li>NAT（NAPT）实际上是为正在面临地址枯竭的 IPv4 而开发的技术。不过，在 IPv6 中为了提高网络安全也在使用 NAT，在IPv4 和 IPv6 之间的相互通信当中常常使用 NAT-PT。</li></ul><h4 id="5-6-IP-隧道"><a href="#5-6-IP-隧道" class="headerlink" title="5.6 IP 隧道"></a>5.6 IP 隧道</h4><p><img src="https://img-blog.csdnimg.cn/20200310221025885.png" alt="夹着 IPv4 网络的两个 IPv6 网络"></p><ul><li>如上图的网络环境中，网络 A 与网络 B 之间无法直接进行通信，为了让它们之间正常通信，这时必须得采用 IP 隧道的功能。</li><li>IP 隧道可以将那些从网络 A 发过来的 IPv6 的包统合为一个数据，再为之追加一个 IPv4 的首部以后转发给网络 C。</li><li>一般情况下，紧接着 IP 首部的是 TCP 或 UDP 的首部。然而，现在的应用当中“ IP 首部的后面还是 IP 首部”或者“ IP首部的后面是 IPv6 的首部”等情况与日俱增。这种在网络层的首部后面追加网络层首部的通信方法就叫做“ IP 隧道”。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;从字面意义上讲，有人可能会认为 TCP/IP 是指 TCP 和 IP 两种协议。实际生活当中有时也确实就是指这两种协议。然而在很多情况下，它只是利用 IP 进行通信时所必须用到的协议群的统称。具体来说，IP 或 ICMP、TCP 或 UDP、TELNET 或 FTP、以及 HTTP 等都属于 TCP/IP 协议。&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200310215002613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70&quot; alt=&quot;一图看完本文&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="网络协议" scheme="http://www.milla.club/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>关于HTTP协议</title>
    <link href="http://www.milla.club/2019/04/19/%E5%85%B3%E4%BA%8EHTTP%E5%8D%8F%E8%AE%AE/"/>
    <id>http://www.milla.club/2019/04/19/%E5%85%B3%E4%BA%8EHTTP%E5%8D%8F%E8%AE%AE/</id>
    <published>2019-04-19T10:22:16.000Z</published>
    <updated>2020-04-21T06:20:52.286Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTTP简介"><a href="#HTTP简介" class="headerlink" title="HTTP简介"></a>HTTP简介</h1><p>HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。</p><p>HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。</p><p>HTTP是一个属于应用层的面向对象的协议，由于其简捷、快速的方式，适用于分布式超媒体信息系统。它于1990年提出，经过几年的使用与发展，得到不断地完善和扩展。目前在WWW中使用的是HTTP/1.0的第六版，HTTP/1.1的规范化工作正在进行之中，而且HTTP-NG(Next Generation of HTTP)的建议已经提出。</p><p>HTTP协议工作于客户端-服务端架构为上。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。Web服务器根据接收到的请求后，向客户端发送响应信息。</p><span id="more"></span><p><img src="https://img-blog.csdnimg.cn/20200310182649300.png" alt="http请求-响应模型.jpg"></p><h1 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h1><p>1、简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</p><p>2、灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。</p><p>3.无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</p><p>4.无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</p><p>5、支持B/S及C/S模式。</p><h1 id="HTTP之URL"><a href="#HTTP之URL" class="headerlink" title="HTTP之URL"></a>HTTP之URL</h1><p>HTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。URL是一种特殊类型的URI，包含了用于查找某个资源的足够的信息</p><p>URL,全称是UniformResourceLocator, 中文叫统一资源定位符,是互联网上用来标识某一处资源的地址。以下面这个URL为例，介绍下普通URL的各部分组成：</p><blockquote><p><a href="http://www.aspxfans.com:8080/news/index.asp?boardID=5&amp;ID=24618&amp;page=1#name">http://www.aspxfans.com:8080/news/index.asp?boardID=5&amp;ID=24618&amp;page=1#name</a></p></blockquote><p>从上面的URL可以看出，一个完整的URL包括以下几部分：</p><p>1.协议部分：该URL的协议部分为“http：”，这代表网页使用的是HTTP协议。在Internet中可以使用多种协议，如HTTP，FTP等等本例中使用的是HTTP协议。在”HTTP”后面的“//”为分隔符</p><p>2.域名部分：该URL的域名部分为“<a href="http://www.aspxfans.com”.一个url中,也可以使用ip地址作为域名使用/">www.aspxfans.com”。一个URL中，也可以使用IP地址作为域名使用</a><br>3.端口部分：跟在域名后面的是端口，域名和端口之间使用“:”作为分隔符。端口不是一个URL必须的部分，如果省略端口部分，将采用默认端口</p><p>4.虚拟目录部分：从域名后的第一个“/”开始到最后一个“/”为止，是虚拟目录部分。虚拟目录也不是一个URL必须的部分。本例中的虚拟目录是“/news/”</p><p>5.文件名部分：从域名后的最后一个“/”开始到“？”为止，是文件名部分，如果没有“?”,则是从域名后的最后一个“/”开始到“#”为止，是文件部分，如果没有“？”和“#”，那么从域名后的最后一个“/”开始到结束，都是文件名部分。本例中的文件名是“index.asp”。文件名部分也不是一个URL必须的部分，如果省略该部分，则使用默认的文件名</p><p>6.锚部分：从“#”开始到最后，都是锚部分。本例中的锚部分是“name”。锚部分也不是一个URL必须的部分</p><p>7.参数部分：从“？”开始到“#”为止之间的部分为参数部分，又称搜索部分、查询部分。本例中的参数部分为“boardID=5&amp;ID=24618&amp;page=1”。参数可以允许有多个参数，参数与参数之间用“&amp;”作为分隔符。</p><p>（原文：<a href="http://blog.csdn.net/ergouge/article/details/8185219">http://blog.csdn.net/ergouge/article/details/8185219</a> ）</p><h1 id="URI和URL的区别"><a href="#URI和URL的区别" class="headerlink" title="URI和URL的区别"></a>URI和URL的区别</h1><h4 id="URI，是uniform-resource-identifier，统一资源标识符，用来唯一的标识一个资源。"><a href="#URI，是uniform-resource-identifier，统一资源标识符，用来唯一的标识一个资源。" class="headerlink" title="URI，是uniform resource identifier，统一资源标识符，用来唯一的标识一个资源。"></a>URI，是uniform resource identifier，统一资源标识符，用来唯一的标识一个资源。</h4><p>Web上可用的每种资源如HTML文档、图像、视频片段、程序等都是一个来URI来定位的</p><p><strong>URI一般由三部组成：</strong><br>①访问资源的命名机制<br>②存放资源的主机名<br>③资源自身的名称，由路径表示，着重强调于资源。</p><h4 id="URL是uniform-resource-locator，统一资源定位器，它是一种具体的URI，即URL可以用来标识一个资源，而且还指明了如何locate这个资源。"><a href="#URL是uniform-resource-locator，统一资源定位器，它是一种具体的URI，即URL可以用来标识一个资源，而且还指明了如何locate这个资源。" class="headerlink" title="URL是uniform resource locator，统一资源定位器，它是一种具体的URI，即URL可以用来标识一个资源，而且还指明了如何locate这个资源。"></a>URL是uniform resource locator，统一资源定位器，它是一种具体的URI，即URL可以用来标识一个资源，而且还指明了如何locate这个资源。</h4><p>URL是Internet上用来描述信息资源的字符串，主要用在各种WWW客户程序和服务器程序上，特别是著名的Mosaic。</p><p>采用URL可以用一种统一的格式来描述各种信息资源，包括文件、服务器的地址和目录等。</p><p><strong>URL一般由三部组成：</strong><br>①协议(或称为服务方式)<br>②存有该资源的主机IP地址(有时也包括端口号)<br>③主机资源的具体地址。如目录和文件名等</p><h4 id="URN，uniform-resource-name，统一资源命名，是通过名字来标识资源，比如mailto-x6a-x61-118-x61-x2d-110-x65-116-64-x6a-x61-118-x61-x2e-x73-117-110-46-x63-111-109-。"><a href="#URN，uniform-resource-name，统一资源命名，是通过名字来标识资源，比如mailto-x6a-x61-118-x61-x2d-110-x65-116-64-x6a-x61-118-x61-x2e-x73-117-110-46-x63-111-109-。" class="headerlink" title="URN，uniform resource name，统一资源命名，是通过名字来标识资源，比如mailto:&#x6a;&#x61;&#118;&#x61;&#x2d;&#110;&#x65;&#116;&#64;&#x6a;&#x61;&#118;&#x61;&#x2e;&#x73;&#117;&#110;&#46;&#x63;&#111;&#109;。"></a>URN，uniform resource name，统一资源命名，是通过名字来标识资源，比如mailto:<a href="mailto:&#x6a;&#x61;&#118;&#x61;&#x2d;&#110;&#x65;&#116;&#64;&#x6a;&#x61;&#118;&#x61;&#x2e;&#x73;&#117;&#110;&#46;&#x63;&#111;&#109;">&#x6a;&#x61;&#118;&#x61;&#x2d;&#110;&#x65;&#116;&#64;&#x6a;&#x61;&#118;&#x61;&#x2e;&#x73;&#117;&#110;&#46;&#x63;&#111;&#109;</a>。</h4><p>URI是以一种抽象的，高层次概念定义统一资源标识，而URL和URN则是具体的资源标识的方式。URL和URN都是一种URI。笼统地说，每个 URL 都是 URI，但不一定每个 URI 都是 URL。这是因为 URI 还包括一个子类，即统一资源名称 (URN)，它命名资源但不指定如何定位资源。上面的 mailto、news 和 isbn URI 都是 URN 的示例。</p><p>在Java的URI中，一个URI实例可以代表绝对的，也可以是相对的，只要它符合URI的语法规则。而URL类则不仅符合语义，还包含了定位该资源的信息，因此它不能是相对的。<br>在Java类库中，URI类不包含任何访问资源的方法，它唯一的作用就是解析。<br>相反的是，URL类可以打开一个到达资源的流。</p><h1 id="HTTP之请求消息Request"><a href="#HTTP之请求消息Request" class="headerlink" title="HTTP之请求消息Request"></a>HTTP之请求消息Request</h1><p>客户端发送一个HTTP请求到服务器的请求消息包括以下格式：</p><p><strong>请求行（request line）、请求头部（header）、空行和请求数据四个部分组成。</strong><br><img src="https://img-blog.csdnimg.cn/20200310183009687.png" alt="Http请求消息结构.png"><br>请求行以一个方法符号开头，以空格分开，后面跟着请求的URI和协议的版本。</p><p><strong>Get请求例子，使用Charles抓取的request：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET /562f25980001b1b106000338.jpg HTTP/1.1</span><br><span class="line">Host    img.mukewang.com</span><br><span class="line">User-Agent    Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36</span><br><span class="line">Accept    image/webp,image/*,*/*;q=0.8</span><br><span class="line">Referer    http://www.imooc.com/</span><br><span class="line">Accept-Encoding    gzip, deflate, sdch</span><br><span class="line">Accept-Language    zh-CN,zh;q=0.8</span><br></pre></td></tr></table></figure><p><strong>第一部分：请求行，用来说明请求类型,要访问的资源以及所使用的HTTP版本.</strong><br>GET说明请求类型为GET,[/562f25980001b1b106000338.jpg]为要访问的资源，该行的最后一部分说明使用的是HTTP1.1版本。</p><p><strong>第二部分：请求头部，紧接着请求行（即第一行）之后的部分，用来说明服务器要使用的附加信息</strong><br>从第二行起为请求头部，HOST将指出请求的目的地.User-Agent,服务器端和客户端脚本都能访问它,它是浏览器类型检测逻辑的重要基础.该信息由你的浏览器来定义,并且在每个请求中自动发送等等</p><p><strong>第三部分：空行，请求头部后面的空行是必须的</strong><br>即使第四部分的请求数据为空，也必须有空行。</p><p><strong>第四部分：请求数据也叫主体，可以添加任意的其他数据。</strong><br>这个例子的请求数据为空。</p><p><strong>POST请求例子，使用Charles抓取的request：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP1.1</span><br><span class="line">Host:www.wrox.com</span><br><span class="line">User-Agent:Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022)</span><br><span class="line">Content-Type:application/x-www-form-urlencoded</span><br><span class="line">Content-Length:40</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line"></span><br><span class="line">name=Professional%20Ajax&amp;publisher=Wiley</span><br></pre></td></tr></table></figure><p><strong>第一部分：请求行，第一行明了是post请求，以及http1.1版本。<br>第二部分：请求头部，第二行至第六行。<br>第三部分：空行，第七行的空行。<br>第四部分：请求数据，第八行。</strong></p><h1 id="HTTP之响应消息Response"><a href="#HTTP之响应消息Response" class="headerlink" title="HTTP之响应消息Response"></a>HTTP之响应消息Response</h1><p>一般情况下，服务器接收并处理客户端发过来的请求后会返回一个HTTP的响应消息。</p><p><strong>HTTP响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文。</strong><br><img src="https://img-blog.csdnimg.cn/20200310183552380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="http响应消息格式.jpg"><br><strong>例子</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Fri, 22 May 2009 06:07:21 GMT</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">      &lt;head&gt;&lt;/head&gt;</span><br><span class="line">      &lt;body&gt;</span><br><span class="line">            &lt;!--body goes here--&gt;</span><br><span class="line">      &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>第一部分：状态行，由HTTP协议版本号， 状态码， 状态消息 三部分组成。</strong><br>第一行为状态行，（HTTP/1.1）表明HTTP版本为1.1版本，状态码为200，状态消息为（ok）</p><p><strong>第二部分：消息报头，用来说明客户端要使用的一些附加信息</strong><br>第二行和第三行为消息报头，<br>Date:生成响应的日期和时间；Content-Type:指定了MIME类型的HTML(text/html),编码类型是UTF-8</p><p><strong>第三部分：空行，消息报头后面的空行是必须的</strong><br>第四部分：响应正文，服务器返回给客户端的文本信息。<br>空行后面的html部分为响应正文。</p><h1 id="HTTP之状态码"><a href="#HTTP之状态码" class="headerlink" title="HTTP之状态码"></a>HTTP之状态码</h1><p>状态代码有三位数字组成，第一个数字定义了响应的类别，共分五种类别:<br>1xx：指示信息–表示请求已接收，继续处理<br>2xx：成功–表示请求已被成功接收、理解、接受<br>3xx：重定向–要完成请求必须进行更进一步的操作<br>4xx：客户端错误–请求有语法错误或请求无法实现<br>5xx：服务器端错误–服务器未能实现合法的请求</p><p><strong>常见状态码：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">200 OK                        //客户端请求成功</span><br><span class="line">400 Bad Request               //客户端请求有语法错误，不能被服务器所理解</span><br><span class="line">401 Unauthorized              //请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用 </span><br><span class="line">403 Forbidden                 //服务器收到请求，但是拒绝提供服务</span><br><span class="line">404 Not Found                 //请求资源不存在，eg：输入了错误的URL</span><br><span class="line">500 Internal Server Error     //服务器发生不可预期的错误</span><br><span class="line">503 Server Unavailable        //服务器当前不能处理客户端的请求，一段时间后可能恢复正常</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>更多状态码<a href="http://www.runoob.com/http/http-status-codes.html">http://www.runoob.com/http/http-status-codes.html</a></p><h1 id="HTTP请求方法"><a href="#HTTP请求方法" class="headerlink" title="HTTP请求方法"></a>HTTP请求方法</h1><p>根据HTTP标准，HTTP请求可以使用多种请求方法。<br>HTTP1.0定义了三种请求方法： GET, POST 和 HEAD方法。<br>HTTP1.1新增了五种请求方法：OPTIONS, PUT, DELETE, TRACE 和 CONNECT 方法。</p><pre><code>GET     请求指定的页面信息，并返回实体主体。HEAD     类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头POST     向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。PUT     从客户端向服务器传送的数据取代指定的文档的内容。DELETE      请求服务器删除指定的页面。CONNECT     HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。OPTIONS     允许客户端查看服务器的性能。TRACE     回显服务器收到的请求，主要用于测试或诊断。</code></pre><h1 id="HTTP工作原理"><a href="#HTTP工作原理" class="headerlink" title="HTTP工作原理"></a>HTTP工作原理</h1><p>HTTP协议定义Web客户端如何从Web服务器请求Web页面，以及服务器如何把Web页面传送给客户端。HTTP协议采用了请求/响应模型。客户端向服务器发送一个请求报文，请求报文包含请求的方法、URL、协议版本、请求头部和请求数据。服务器以一个状态行作为响应，响应的内容包括协议的版本、成功或者错误代码、服务器信息、响应头部和响应数据。</p><p>以下是 HTTP 请求/响应的步骤：</p><p><strong>1、客户端连接到Web服务器</strong><br>一个HTTP客户端，通常是浏览器，与Web服务器的HTTP端口（默认为80）建立一个TCP套接字连接。例如，<a href="http://www.oakcms.cn./">http://www.oakcms.cn。</a></p><p><strong>2、发送HTTP请求</strong><br>通过TCP套接字，客户端向Web服务器发送一个文本的请求报文，一个请求报文由请求行、请求头部、空行和请求数据4部分组成。</p><p><strong>3、服务器接受请求并返回HTTP响应</strong><br>Web服务器解析请求，定位请求资源。服务器将资源复本写到TCP套接字，由客户端读取。一个响应由状态行、响应头部、空行和响应数据4部分组成。</p><p><strong>4、释放连接TCP连接</strong><br>若connection 模式为close，则服务器主动关闭TCP连接，客户端被动关闭连接，释放TCP连接;若connection 模式为keepalive，则该连接会保持一段时间，在该时间内可以继续接收请求;</p><p><strong>5、客户端浏览器解析HTML内容</strong><br>客户端浏览器首先解析状态行，查看表明请求是否成功的状态代码。然后解析每一个响应头，响应头告知以下为若干字节的HTML文档和文档的字符集。客户端浏览器读取响应数据HTML，根据HTML的语法对其进行格式化，并在浏览器窗口中显示。</p><p>例如：在浏览器地址栏键入URL，按下回车之后会经历以下流程：</p><p>1、浏览器向 DNS 服务器请求解析该 URL 中的域名所对应的 IP 地址;</p><p>2、解析出 IP 地址后，根据该 IP 地址和默认端口 80，和服务器建立TCP连接;</p><p>3、浏览器发出读取文件(URL 中域名后面部分对应的文件)的HTTP 请求，该请求报文作为 TCP 三次握手的第三个报文的数据发送给服务器;</p><p>4、服务器对浏览器请求作出响应，并把对应的 html 文本发送给浏览器;</p><p>5、释放 TCP连接;</p><p>6、浏览器将该 html 文本并显示内容; 　　</p><h1 id="GET和POST请求的区别"><a href="#GET和POST请求的区别" class="headerlink" title="GET和POST请求的区别"></a>GET和POST请求的区别</h1><p><strong>GET请求</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET /books/?sex=man&amp;name=Professional HTTP/1.1</span><br><span class="line">Host: www.wrox.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.6)</span><br><span class="line">Gecko/20050225 Firefox/1.0.1</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">注意最后一行是空行</span><br></pre></td></tr></table></figure><p><strong>POST请求</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: www.wrox.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.6)</span><br><span class="line">Gecko/20050225 Firefox/1.0.1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 40</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line"></span><br><span class="line">name=Professional%20Ajax&amp;publisher=Wiley</span><br></pre></td></tr></table></figure><p>1、GET提交，请求的数据会附在URL之后（就是把数据放置在HTTP协议头中），以?分割URL和传输数据，多个参数用&amp;连接；例 如：login.action?name=hyddd&amp;password=idontknow&amp;verify=%E4%BD%A0 %E5%A5%BD。如果数据是英文字母/数字，原样发送，如果是空格，转换为+，如果是中文/其他字符，则直接把字符串用BASE64加密，得出如： %E4%BD%A0%E5%A5%BD，其中％XX中的XX为该符号以16进制表示的ASCII。</p><p>POST提交：把提交的数据放置在是HTTP包的包体中。上文示例中红色字体标明的就是实际的传输数据</p><p><strong>因此，GET提交的数据会在地址栏中显示出来，而POST提交，地址栏不会改变</strong></p><p>2、传输数据的大小：首先声明：HTTP协议没有对传输的数据大小进行限制，HTTP协议规范也没有对URL长度进行限制。</p><p>而在实际开发中存在的限制主要有：</p><p>GET：特定浏览器和服务器对URL长度有限制，例如 IE对URL长度的限制是2083字节(2K+35)。对于其他浏览器，如Netscape、FireFox等，理论上没有长度限制，其限制取决于操作系 统的支持。</p><p>因此对于GET提交时，传输数据就会受到URL长度的 限制。</p><p>POST：由于不是通过URL传值，理论上数据不受 限。但实际各个WEB服务器会规定对post提交数据大小进行限制，Apache、IIS6都有各自的配置。</p><p>3、安全性</p><p>POST的安全性要比GET的安全性高。比如：通过GET提交数据，用户名和密码将明文出现在URL上，因为：<br>(1)登录页面有可能被浏览器缓存；<br>(2)其他人查看浏览器的历史纪录，那么别人就可以拿到你的账号和密码了，除此之外，使用GET提交数据还可能会造成Cross-site request forgery攻击</p><p>4、Http get,post,soap协议都是在http上运行的</p><p>（1）get：请求参数是作为一个key/value对的序列（查询字符串）附加到URL上的<br>查询字符串的长度受到web浏览器和web服务器的限制（如IE最多支持2048个字符），不适合传输大型数据集同时，它很不安全</p><p>（2）post：请求参数是在http标题的一个不同部分（名为entity body）传输的，这一部分用来传输表单信息，因此必须将Content-type设置为:application/x-www-form- urlencoded。post设计用来支持web窗体上的用户字段，其参数也是作为key/value对传输。<br>但是：它不支持复杂数据类型，因为post没有定义传输数据结构的语义和规则。</p><p>（3）soap：是http post的一个专用版本，遵循一种特殊的xml消息格式<br>Content-type设置为: text/xml 任何数据都可以xml化。</p><p>Http协议定义了很多与服务器交互的方法，最基本的有4种，分别是GET,POST,PUT,DELETE. 一个URL地址用于描述一个网络上的资源，而HTTP中的GET, POST, PUT, DELETE就对应着对这个资源的查，改，增，删4个操作。 我们最常见的就是GET和POST了。GET一般用于获取/查询资源信息，而POST一般用于更新资源信息.</p><p><strong>GET和POST的区别</strong></p><p>1.GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&amp;相连，如EditPosts.aspx?name=test1&amp;id=123456. POST方法是把提交的数据放在HTTP包的Body中.</p><p>2.GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制.</p><p>3.GET方式需要使用Request.QueryString来取得变量的值，而POST方式通过Request.Form来获取变量的值。</p><p>4.GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码.</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;HTTP简介&quot;&gt;&lt;a href=&quot;#HTTP简介&quot; class=&quot;headerlink&quot; title=&quot;HTTP简介&quot;&gt;&lt;/a&gt;HTTP简介&lt;/h1&gt;&lt;p&gt;HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。&lt;/p&gt;
&lt;p&gt;HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。&lt;/p&gt;
&lt;p&gt;HTTP是一个属于应用层的面向对象的协议，由于其简捷、快速的方式，适用于分布式超媒体信息系统。它于1990年提出，经过几年的使用与发展，得到不断地完善和扩展。目前在WWW中使用的是HTTP/1.0的第六版，HTTP/1.1的规范化工作正在进行之中，而且HTTP-NG(Next Generation of HTTP)的建议已经提出。&lt;/p&gt;
&lt;p&gt;HTTP协议工作于客户端-服务端架构为上。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。Web服务器根据接收到的请求后，向客户端发送响应信息。&lt;/p&gt;</summary>
    
    
    
    
    <category term="网络协议" scheme="http://www.milla.club/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>纯CSS实现水平轮播效果</title>
    <link href="http://www.milla.club/2019/04/19/%E7%BA%AFCSS%E5%AE%9E%E7%8E%B0%E6%B0%B4%E5%B9%B3%E8%BD%AE%E6%92%AD%E6%95%88%E6%9E%9C/"/>
    <id>http://www.milla.club/2019/04/19/%E7%BA%AFCSS%E5%AE%9E%E7%8E%B0%E6%B0%B4%E5%B9%B3%E8%BD%AE%E6%92%AD%E6%95%88%E6%9E%9C/</id>
    <published>2019-04-19T10:15:45.000Z</published>
    <updated>2020-04-21T06:19:03.057Z</updated>
    
    <content type="html"><![CDATA[<p>以下为只使用CSS实现水平轮播效果代码。</p><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">* &#123;</span><br><span class="line"><span class="css"><span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#list &#123;</span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">5464px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">768px</span>;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#box &#123;</span><br><span class="line"><span class="css"><span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">1366px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">768px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-id">#list</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">float</span>: left;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#btn &#123;</span><br><span class="line"><span class="css"><span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css"><span class="attribute">right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">bottom</span>: <span class="number">15px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-id">#btn</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">margin-right</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css"><span class="attribute">line-height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="css"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span></span><br><span class="line"><span class="css"><span class="attribute">color</span>: white;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-id">#btn</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css"><span class="attribute">background</span>: <span class="number">#000000</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#box2 &#123;</span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">1366px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">768px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">overflow</span>: hidden;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#img1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#img2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#img3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#img4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;img1&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./imgs/img (1).jpg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;img2&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./imgs/img (2).jpg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;img3&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./imgs/img (3).jpg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;img4&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./imgs/img (4).jpg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20191106172151639.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="代码内图片"><br><img src="https://img-blog.csdnimg.cn/20191106172253788.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191106172308897.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191106172323442.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ptMTY0MDExMTMwOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图片若有侵权，请联系进行删除。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;以下为只使用CSS实现水平轮播效果代码。&lt;/p&gt;</summary>
    
    
    
    
    <category term="CSS" scheme="http://www.milla.club/tags/CSS/"/>
    
  </entry>
  
</feed>
